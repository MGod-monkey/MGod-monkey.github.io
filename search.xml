<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>红山社区比赛仿真环境</title>
      <link href="/posts/c1763b9b.html"/>
      <url>/posts/c1763b9b.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-资料">1.资料</h2><ul><li></li></ul><h2 id="2-仿真环境搭建">2.仿真环境搭建</h2><blockquote><p><strong>说明：因为Windows环境下仿真比较简单，并且Windows环境下能用到显卡资源，仿真可以更加流畅，可以先搭Windows环境仿真，后续代码传给我统一在linux下打包即可</strong></p></blockquote><ol><li><p>解压<code>仿真开发包.zip</code>并将文件夹里面的<code>仿真开发包</code>文件夹改名成 英文名，如<code>SimulationPackage</code>，移动到根目录，如<code>E:\SimulationPackage</code>，确保后续环境不会因为路径名出错</p></li><li><p>解压<code>WindowsNoEditor.rar</code>，<code>simuDistro_0.2.3_windows.zip</code>压缩包****</p><p><img src="https://s2.loli.net/2024/08/30/PiAMRpXtGDnTjqc.png" alt="image-20240830161933843"></p></li><li><p>安装SDK环境</p><ol><li><p>安装Anaconda ：用U盘中的安装包或者官网 <a href="https://www.anaconda.com/download/">https://www.anaconda.com/download/</a>自行下载</p></li><li><p>创建python3.6虚拟环境</p><ol><li><p>打开cmd终端：win+r输入<strong>cmd</strong> 或者 win+q搜索<strong>Anaconda Prompt</strong>（cmd打开如果前面没有(base)，通过输入<code>conda activate base</code>激活）</p><p><img src="https://s2.loli.net/2024/08/30/GQMun2OUVxqerHb.png" alt="image-20240830163837166"></p></li><li><p>通过下面的指令插件一个python3.6环境</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sim是虚拟环境的名字，安装过程遇到选项输入y然后回车即可</span></span><br><span class="line">conda create -n sim python=3.6</span><br><span class="line"><span class="comment"># 激活sim虚拟环境</span></span><br><span class="line">conda activate sim</span><br></pre></td></tr></table></figure></li><li><p>通过下面的指令安装 SDK环境（不要翻墙，可能会报网络错误）</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install https://jqtj.obs.cn-north-4.myhuaweicloud.com/sdk/windows/swarmae-1.0-py3-none-any.whl -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure></li><li><p>验证安装，终端输入<code>python</code>，接着输入<code>from swarmae.SwarmAEClient import SwarmAEClient</code>，没报错就是已经安装成功（输入<code>quit()</code>回车退出python环境）</p>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(sim) C:\Users\17814&gt;python</span><br><span class="line">Python 3.6.13 |Anaconda, Inc.| (default, Mar 16 2021, 11:37:27) [MSC v.1916 64 bit (AMD64)] on win32</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; from swarmae.SwarmAEClient import SwarmAEClient</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><blockquote><p><strong>注：Anaconda安装即创建环境有问题的参考博客</strong><a href="https://blog.csdn.net/weixin_73800108/article/details/137296446">【超详细版Anaconda的安装及使用conda创建、运行虚拟环境以及使用镜像源】</a></p></blockquote><ol start="4"><li><p>UE4仿真包配置</p><ol><li><p>打开<code>E:\SimulationPackage\WindowsNoEditor\WindowsNoEditor</code>，右键<code>CarlaUE4.exe</code>-&gt;显示更多选项-&gt;创建快捷方式</p></li><li><p>修改配置文件：<code>E:\SimulationPackage\WindowsNoEditor\WindowsNoEditor\CarlaUE4\Config\ClusterEval.ini</code>（配置文件格式说明见第三章）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Game]</span><br><span class="line">GameId=<span class="string">&quot;77777&quot;</span> <span class="comment">#随便取</span></span><br><span class="line">SubjectId=5 <span class="comment">#对应科目几，体现在仿真启动后的标题“旋翼无人机自主避障科目”</span></span><br><span class="line">Seconds=600 <span class="comment">#好像没用</span></span><br><span class="line"></span><br><span class="line">[Team]</span><br><span class="line">TeamId=<span class="string">&quot;Team1&quot;</span></span><br><span class="line">IMVNum=1</span><br><span class="line">CMSNum=1</span><br><span class="line">QRTNum=1</span><br><span class="line">QRBNum=1</span><br></pre></td></tr></table></figure></li><li><p>接着右键快捷方式，在目标后面加<code>CE_L1 -ConfigName=ClusterEval</code>（别忘了exe后面有空格），然后点击确定</p><p><img src="https://s2.loli.net/2024/08/30/Q1uwF3M5xdlH4Ta.png" alt="image-20240830204643839"></p></li></ol><blockquote><p><strong>说明：CE_L1代表科目一的地图，CE_L2代表科目三的地图，如果是无人机的地图，则需要将其修改为CE_L4~CE_7，更详细的说明见第三章</strong></p></blockquote><ol start="3"><li><p>双击快捷方式进入仿真环境，终端输入<code>netstat -ano | findstr 2000</code>，如果出现2000的端口则说明启动正常</p><p><img src="https://s2.loli.net/2024/08/30/pXKmYNiCxg1e4ah.png" alt="image-20240830170209964"></p><p><img src="https://s2.loli.net/2024/08/30/w5eFBYyv8L21IEn.png" alt="image-20240830171457277"></p></li></ol></li><li><p>启动仿真动力程序</p><ol><li><p>打开<code>E:\SimulationPackage\simuDistro_0.2.3_windows</code>文件夹，双击<code>start.bat</code>即可</p></li><li><p>类型选择<code>2. 四旋翼</code>然后回车</p><p><img src="https://s2.loli.net/2024/08/30/cyND9fASUvlERLV.png" alt="image-20240830192355312"></p></li><li><p>出现下面的心跳包界面说明启动成功</p><p><img src="https://s2.loli.net/2024/08/30/TREO63hWzkcfde9.png" alt="image-20240830192515019"></p></li></ol></li></ol><h2 id="3-配置文件说明">3. 配置文件说明</h2><h3 id="3-1配置文件说明">3.1配置文件说明</h3><table><thead><tr><th style="text-align:center">Game</th><th style="text-align:center">GameId</th><th style="text-align:center">string</th><th style="text-align:center">指定本场比赛ID</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">SubjectId</td><td style="text-align:center">int</td><td style="text-align:center">指定本场科目编号</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">Seconds</td><td style="text-align:center">int</td><td style="text-align:center">指定本场比赛时长</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">AirSimIp</td><td style="text-align:center">ip</td><td style="text-align:center">指定固定翼仿真ip地址</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">AirSimComPort</td><td style="text-align:center">port</td><td style="text-align:center">指定仿真引擎连接TCP端口号</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">AirSimCmdPort</td><td style="text-align:center">port</td><td style="text-align:center">指定仿真信息接收UDP端口号</td></tr><tr><td style="text-align:center">Team1</td><td style="text-align:center">TeamId</td><td style="text-align:center">string</td><td style="text-align:center">指定队伍1ID</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">IMVNum</td><td style="text-align:center">int</td><td style="text-align:center">指定步兵机动战车数量</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">CMSNum</td><td style="text-align:center">int</td><td style="text-align:center">指定巡飞弹（自杀式无人机）数量</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">SVLNum</td><td style="text-align:center">int</td><td style="text-align:center">指定察打无人机数量</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">QRTNum</td><td style="text-align:center">int</td><td style="text-align:center">指定小型四旋翼无人机数量</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">QRBNum</td><td style="text-align:center">int</td><td style="text-align:center">指定四旋翼自杀式无人机数量</td></tr><tr><td style="text-align:center">Team2</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">队伍2配置域，配置方法同队伍1</td></tr></tbody></table><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Game]</span><br><span class="line">GameId=<span class="string">&quot;77777&quot;</span> <span class="comment">#随便取</span></span><br><span class="line">SubjectId=5 <span class="comment">#对应科目几，体现在仿真启动后的标题“旋翼无人机自主避障科目”</span></span><br><span class="line">Seconds=600 <span class="comment">#好像没用</span></span><br><span class="line"></span><br><span class="line">[Team]</span><br><span class="line">TeamId=<span class="string">&quot;Team1&quot;</span></span><br><span class="line">IMVNum=1</span><br><span class="line">CMSNum=1</span><br><span class="line">QRTNum=1</span><br><span class="line">QRBNum=1</span><br></pre></td></tr></table></figure><blockquote><p>说明：载具的生成与地图有关，并不是说配置文件里面说了生成啥就是啥，经过测试，地图<strong>CE_L1~CE_L3</strong>只能生成<strong>IMVNum</strong>，即小车，对应小车的科目1到3，<strong>CE_L4~CE_L6</strong>只能生成<strong>QRTNum</strong>，即<strong>四旋翼无人机</strong>，<strong>CE_L7</strong>能生成<strong>小车</strong>和<strong>四旋翼无人机</strong>，<strong>CE_A</strong>地图系列目前不知道是干啥用的</p></blockquote><h3 id="3-2地图说明">3.2地图说明</h3><table><thead><tr><th style="text-align:center">项目</th><th style="text-align:center">科目</th><th style="text-align:center">对应地图</th></tr></thead><tbody><tr><td style="text-align:center">空地</td><td style="text-align:center">1</td><td style="text-align:center">CE_L1</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">2</td><td style="text-align:center">CE_L2</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">3</td><td style="text-align:center">CE_L3</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">4</td><td style="text-align:center">CE_L4</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">5</td><td style="text-align:center">CE_L5</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">6</td><td style="text-align:center">CE_L6</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">7</td><td style="text-align:center">CE_L7</td></tr><tr><td style="text-align:center">空中</td><td style="text-align:center">1、4</td><td style="text-align:center">CE_A14</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">2</td><td style="text-align:center">CE_A2</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">3、6</td><td style="text-align:center">CE_A36</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">5</td><td style="text-align:center">CE_A5</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">7</td><td style="text-align:center">CE_A7</td></tr></tbody></table><blockquote><p>说明：空中系列的地图暂时不用管</p></blockquote><h3 id="3-3科目说明">3.3科目说明</h3><p><img src="https://s2.loli.net/2024/08/30/dKLFJT6f2eCtqzQ.png" alt="image-20240830205008117"></p><h2 id="4-完整运行流程">4.完整运行流程</h2><ol><li>双击<code>E:\SimulationPackage\WindowsNoEditor\WindowsNoEditor\CarlaUE4.exe - 快捷方式</code>打开地图</li><li>双击<code>E:\SimulationPackage\simuDistro_0.2.3_windows\start.bat</code>打开动力系统</li><li>用VSCode打开demo文件夹，并且点击上面的终端-&gt;新建终端-&gt;输入<code>conda activate sim</code></li></ol><p><img src="https://s2.loli.net/2024/08/30/JENg3PwA7Dihn6X.png" alt="image-20240830194050266"></p><ol start="4"><li>在终端输入<code>python simple_test.py</code>，后台显示如下即说明连接仿真成功</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(sim) E:\SimulationPackage\demo&gt;python simple_test.py</span><br><span class="line">--Connecting to UE4 simulation: 127.0.0.1 2000</span><br><span class="line">WARNING: Version mismatch detected: You are trying to connect to a simulator that might be incompatible with this API</span><br><span class="line">WARNING: Client API version     = 1.0-34-g91df42e4-dirty</span><br><span class="line">WARNING: Simulator API version  = a59b6e5-dirty</span><br><span class="line">vehicle.QRT.Phantom*</span><br><span class="line">--Node registered successfully: 节点1, Type: 四旋翼</span><br><span class="line">Node moved to new position: x=285.29998779296875, y=586.7999877929688, z=487.0</span><br><span class="line">Node moved to new position: x=285.29998779296875, y=586.7999877929688, z=487.0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【ESP-IDF5.x】 ESP32/ESP8266驱动SHT3x温湿度传感器</title>
      <link href="/posts/a2ae83d0.html"/>
      <url>/posts/a2ae83d0.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境">环境</h2><ul><li>软件环境<ul><li>VScode</li><li>ESP-IDF5.x</li></ul></li><li>硬件环境<ul><li>esp32 / esp8266</li><li>sht3x温湿度传感器</li></ul></li></ul><p>SHT3x周围电路连接如下</p><p><img src="https://s2.loli.net/2024/08/23/J2VezYiwqmTxsC9.png" alt=""></p><p>下面是SHT3x与ESP32-S3的引脚接线示例，ESP32或者ESP8266根据开发板的I2C引脚进行接线</p><table><thead><tr><th>引脚</th><th>接线</th></tr></thead><tbody><tr><td>VDD</td><td>3.3/5V</td></tr><tr><td>ADDR</td><td>GND</td></tr><tr><td>SDA</td><td>4</td></tr><tr><td>SCL</td><td>5</td></tr></tbody></table><hr><h2 id="说明">说明</h2><blockquote><p>代码示例见：<a href="https://github.com/MGod-monkey/sht3x-esp-idf5x">https://github.com/MGod-monkey/sht3x-esp-idf5x</a></p></blockquote><p>将上面的代码下载到本地并通过VScode打开，需要先选择自己芯片的平台，然后编译</p><p><img src="https://s2.loli.net/2024/08/23/bCW7pufY18lLZv9.png" alt="image-20240823155719287"></p><p>驱动sht3x的代码封装在<code>components\sht3x\sht3x.h</code>，每个函数的说明如下：</p><ol><li><p><strong><code>sht3x_init_sensor</code></strong></p><ul><li>初始化一个 SHT3x 传感器。</li><li>创建一个描述传感器的数据结构并初始化传感器设备。</li><li>参数：<ul><li><code>bus</code>: 传感器连接的 I2C 总线。</li><li><code>addr</code>: 传感器的 I2C 从设备地址。</li></ul></li><li>返回值：指向传感器数据结构的指针，初始化失败时返回 NULL。</li></ul></li><li><p><strong><code>sht3x_measure</code></strong></p><ul><li>高级测量函数，执行一次测量。</li><li>包含三个步骤：<ol><li>以高可靠性启动一次单次测量。</li><li>使用 <code>vTaskDelay</code> 等待测量结果可用。</li><li>返回浮点类型的传感器测量值。</li></ol></li><li>参数：<ul><li><code>dev</code>: 指向传感器设备数据结构的指针。</li><li><code>temperature</code>: 返回的温度值（摄氏度）。</li><li><code>humidity</code>: 返回的湿度值（百分比）。</li></ul></li><li>返回值：成功时返回 <code>true</code>，失败时返回 <code>false</code>。</li></ul></li><li><p><strong><code>sht3x_start_measurement</code></strong></p><ul><li>启动单次测量或周期性测量。</li><li>可以选择单次测量模式或周期性测量模式，以及设置测量的重复性。</li><li>参数：<ul><li><code>dev</code>: 指向传感器设备数据结构的指针。</li><li><code>mode</code>: 测量模式（单次或周期性），参见 <code>sht3x_mode_t</code> 类型。</li><li><code>repeat</code>: 测量的重复性，参见 <code>sht3x_repeat_t</code> 类型。</li></ul></li><li>返回值：成功时返回 <code>true</code>，失败时返回 <code>false</code>。</li></ul></li><li><p><strong><code>sht3x_get_measurement_duration</code></strong></p><ul><li>获取测量所需的 RTOS tick 数。</li><li>返回给定重复性下执行一次测量所需的时间。</li><li>用户任务可以直接使用此函数返回的持续时间来等待测量结果。</li><li>参数：<ul><li><code>repeat</code>: 测量的重复性，参见 <code>sht3x_repeat_t</code> 类型。</li></ul></li><li>返回值：测量持续时间，单位为 RTOS ticks。</li></ul></li><li><p><strong><code>sht3x_get_raw_data</code></strong></p><ul><li>从传感器读取测量结果并存储为原始数据。</li><li>读取温度和压力的测量结果，检查 CRC 校验码并存储在字节数组中。</li><li>参数：<ul><li><code>dev</code>: 指向传感器设备数据结构的指针。</li><li><code>raw_data</code>: 存储原始数据的字节数组。</li></ul></li><li>返回值：成功时返回 <code>true</code>，失败时返回 <code>false</code>。</li></ul></li><li><p><strong><code>sht3x_compute_values</code></strong></p><ul><li>从原始数据计算出传感器的温度和湿度值。</li><li>参数：<ul><li><code>raw_data</code>: 包含原始数据的字节数组。</li><li><code>temperature</code>: 返回的温度值（摄氏度）。</li><li><code>humidity</code>: 返回的湿度值（百分比）。</li></ul></li><li>返回值：成功时返回 <code>true</code>，失败时返回 <code>false</code>。</li></ul></li><li><p><strong><code>sht3x_get_results</code></strong></p><ul><li>获取传感器测量结果并返回传感器值。</li><li>该函数结合了 <code>sht3x_read_raw_data</code> 和 <code>sht3x_compute_values</code> 函数，读取原始数据并计算出传感器的温度和湿度值。</li><li>参数：<ul><li><code>dev</code>: 指向传感器设备数据结构的指针。</li><li><code>temperature</code>: 返回的温度值（摄氏度）。</li><li><code>humidity</code>: 返回的湿度值（百分比）。</li></ul></li><li>返回值：成功时返回 <code>true</code>，失败时返回 <code>false</code>。</li></ul></li></ol><p>获取SHT3x温湿度传感器的示例代码如下：</p><ul><li><p>测量模式选择：SINGLE_SHOT_HIGH_LEVEL、SINGLE_SHOT_LOW_LEVEL或周期模式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// #define SINGLE_SHOT_LOW_LEVEL</span></span><br><span class="line"><span class="comment">// #define SINGLE_SHOT_HIGH_LEVEL</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(SINGLE_SHOT_HIGH_LEVEL)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">user_task</span> <span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> temperature;</span><br><span class="line">    <span class="type">float</span> humidity;</span><br><span class="line"></span><br><span class="line">    TickType_t last_wakeup = xTaskGetTickCount();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// perform one measurement and do something with the results</span></span><br><span class="line">        <span class="keyword">if</span> (sht3x_measure (sensor, &amp;temperature, &amp;humidity))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.3f SHT3x Sensor: %.2f °C, %.2f %%\n&quot;</span>, </span><br><span class="line">        (<span class="type">double</span>)sdk_system_get_time()*<span class="number">1e-3</span>, temperature, humidity);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// wait until 5 seconds are over</span></span><br><span class="line">        vTaskDelayUntil(&amp;last_wakeup, <span class="number">5000</span> / portTICK_PERIOD_MS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(SINGLE_SHOT_LOW_LEVEL)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">user_task</span> <span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> temperature;</span><br><span class="line">    <span class="type">float</span> humidity;</span><br><span class="line"></span><br><span class="line">    TickType_t last_wakeup = xTaskGetTickCount();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get the measurement duration for high repeatability;</span></span><br><span class="line">    <span class="type">uint8_t</span> duration = sht3x_get_measurement_duration(sht3x_high);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Trigger one measurement in single shot mode with high repeatability.</span></span><br><span class="line">        sht3x_start_measurement (sensor, sht3x_single_shot, sht3x_high);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Wait until measurement is ready (constant time of at least 30 ms</span></span><br><span class="line">        <span class="comment">// or the duration returned from *sht3x_get_measurement_duration*).</span></span><br><span class="line">        vTaskDelay (duration);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// retrieve the values and do something with them</span></span><br><span class="line">        <span class="keyword">if</span> (sht3x_get_results (sensor, &amp;temperature, &amp;humidity))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.3f SHT3x Sensor: %.2f °C, %.2f %%\n&quot;</span>, </span><br><span class="line">        (<span class="type">double</span>)sdk_system_get_time()*<span class="number">1e-3</span>, temperature, humidity);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// wait until 5 seconds are over</span></span><br><span class="line">        vTaskDelayUntil(&amp;last_wakeup, <span class="number">5000</span> / portTICK_PERIOD_MS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span>  <span class="comment">// PERIODIC MODE</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">user_task</span> <span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> temperature;</span><br><span class="line">    <span class="type">float</span> humidity;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start periodic measurements with 1 measurement per second.</span></span><br><span class="line">    sht3x_start_measurement (sensor, sht3x_periodic_1mps, sht3x_high);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Wait until first measurement is ready (constant time of at least 30 ms</span></span><br><span class="line">    <span class="comment">// or the duration returned from *sht3x_get_measurement_duration*).</span></span><br><span class="line">    vTaskDelay (sht3x_get_measurement_duration(sht3x_high));</span><br><span class="line"></span><br><span class="line">    TickType_t last_wakeup = xTaskGetTickCount();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Get the values and do something with them.</span></span><br><span class="line">        <span class="keyword">if</span> (sht3x_get_results (sensor, &amp;temperature, &amp;humidity))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.3f SHT3x Sensor: %.2f °C, %.2f %%\n&quot;</span>, </span><br><span class="line">        (<span class="type">double</span>)sdk_system_get_time()*<span class="number">1e-3</span>, temperature, humidity);</span><br><span class="line">        <span class="comment">// Wait until 2 seconds (cycle time) are over.</span></span><br><span class="line">        vTaskDelayUntil(&amp;last_wakeup, <span class="number">2000</span> / portTICK_PERIOD_MS);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><ul><li><p>单次测量模式</p><ul><li><p>在单次测量模式下，一条测量命令会触发精确采集一个数据对。每个数据对包括 16 位十进制的温度和湿度值。由于测量持续时间长达 15 毫秒，因此测量过程被分成多个步骤，以避免在测量过程中阻塞用户任务：</p><ol><li><p>使用函数 sht3x_start_measurement 触发传感器，执行一次测量。</p></li><li><p>使用函数 vTaskDelay 等待测量持续时间，直到获得测量结果。使用至少 30 毫秒的恒定持续时间或函数 sht3x_get_measurement_duration 返回的以 RTOS ticks 为单位的持续时间进行等待。</p></li><li><p>使用函数 sht3x_get_results 或函数 sht3x_get_raw_data 获取浮点传感器值或原始数据。</p></li></ol></li><li><p>在单次模式下，每次需要新的传感器值时，用户任务都必须执行所有步骤。</p></li></ul></li></ul><blockquote><p>为方便起见，一个高级函数 sht3x_measure（sht3x_measure）只需一个函数即可完成上述三个步骤的测量。该函数是使用传感器的最简单方法。它最适合不想控制传感器细节的用户。<br>这种模式的优点是，传感器可以在连续测量之间切换到睡眠模式，从而更加节能。当测量速率小于每秒1次测量时，这种模式尤其有用。</p></blockquote><ul><li><p>周期模式</p><ul><li><p>在这种模式下，发出的一条测量命令会产生一个数据对流。每个数据对由 16 位十进制的温度和湿度值组成。测量命令一经发送至传感器，传感器就会自动以每秒 0.5、1、2、4 或 10 次的测量速率定期执行测量。数据对可以以相同或更低的速率获取。与单次测量模式一样，测量过程分为以下几个步骤：</p><ol><li><p>使用函数 sht3x_start_measurement，以给定的速率触发传感器，开始周期性测量。</p></li><li><p>使用函数 vTaskDelay 等待测量持续时间，直到获得第一个结果。使用至少 30 毫秒的恒定持续时间或函数 sht3x_get_measurement_duration 返回的以 RTOS ticks 为单位的持续时间进行等待。</p></li></ol></li></ul></li></ul></li></ul><blockquote><p>使用函数 sht3x_get_results 或函数 sht3x_get_raw_data 获取浮点传感器值或原始数据。<br>与单次测量模式不同的是，步骤1和2只需执行一次。一旦开始测量，用户任务只需定期获取数据即可，但传感器在整个过程中一直保持活跃状态，因此能耗较高</p></blockquote><blockquote><p><strong>注：获取测量结果的速率不得大于传感器的周期性测量速率。为避免因传感器的定时容差造成冲突，应小于该速率。</strong></p></blockquote><ul><li><p>初试化I2C并读取SHT3x温湿度的值</p><blockquote><p>注：如果SHT3x的ADDR引脚接的不是GND，而是VCC，则需要将地址改为SHT3x_ADDR_2</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_SCL_IO           GPIO_NUM_5      <span class="comment">/*!&lt; GPIO number used for I2C master clock */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_SDA_IO           GPIO_NUM_4      <span class="comment">/*!&lt; GPIO number used for I2C master data  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_NUM              0              <span class="comment">/*!&lt; I2C master i2c port number, the number of i2c peripheral interfaces available will depend on the chip */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_FREQ_HZ          400000           <span class="comment">/*!&lt; I2C master clock frequency */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_TX_BUF_DISABLE   0                <span class="comment">/*!&lt; I2C master doesn&#x27;t need buffer */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_RX_BUF_DISABLE   0                <span class="comment">/*!&lt; I2C master doesn&#x27;t need buffer */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_TIMEOUT_MS       1000             <span class="comment">/*!&lt; I2C master timeout in milliseconds */</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">app_main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Set UART Parameter.</span></span><br><span class="line">    uart_set_baud(<span class="number">0</span>, <span class="number">115200</span>);</span><br><span class="line">    <span class="comment">// Give the UART some time to settle</span></span><br><span class="line">    vTaskDelay(<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Init I2C bus interfaces at which SHT3x sensors are connected</span></span><br><span class="line">    <span class="type">int</span> i2c_master_port = I2C_MASTER_NUM;</span><br><span class="line"></span><br><span class="line">    <span class="type">i2c_config_t</span> conf = &#123;</span><br><span class="line">        .mode = I2C_MODE_MASTER,</span><br><span class="line">        .sda_io_num = I2C_MASTER_SDA_IO,</span><br><span class="line">        .scl_io_num = I2C_MASTER_SCL_IO,</span><br><span class="line">        .sda_pullup_en = GPIO_PULLUP_ENABLE,</span><br><span class="line">        .scl_pullup_en = GPIO_PULLUP_ENABLE,</span><br><span class="line">        .master.clk_speed = I2C_MASTER_FREQ_HZ,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    i2c_param_config(i2c_master_port, &amp;conf);</span><br><span class="line"></span><br><span class="line">    i2c_driver_install(i2c_master_port, conf.mode, I2C_MASTER_RX_BUF_DISABLE, I2C_MASTER_TX_BUF_DISABLE, <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">    <span class="comment">// Create the sensors, multiple sensors are possible.</span></span><br><span class="line">    <span class="keyword">if</span> ((sensor = sht3x_init_sensor(I2C_MASTER_NUM, SHT3x_ADDR_1)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Create a user task that uses the sensors.</span></span><br><span class="line">        xTaskCreate(user_task, <span class="string">&quot;user_task&quot;</span>, TASK_STACK_DEPTH, <span class="literal">NULL</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Could not initialize SHT3x sensor\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>如果串口输出的结果为<code>Could not initialize SHT3x sensor</code>，可以通过下面的程序来扫描I2C设备来确保SHT3x是否连接正常</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;driver/i2c.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_SCL_IO           GPIO_NUM_5      <span class="comment">/*!&lt; GPIO number used for I2C master clock */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_SDA_IO           GPIO_NUM_4      <span class="comment">/*!&lt; GPIO number used for I2C master data  */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_NUM              0                          <span class="comment">/*!&lt; I2C master i2c port number, the number of i2c peripheral interfaces available will depend on the chip */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_FREQ_HZ          400000                     <span class="comment">/*!&lt; I2C master clock frequency */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_TX_BUF_DISABLE   0                          <span class="comment">/*!&lt; I2C master doesn&#x27;t need buffer */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_RX_BUF_DISABLE   0                          <span class="comment">/*!&lt; I2C master doesn&#x27;t need buffer */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_MASTER_TIMEOUT_MS       1000                       <span class="comment">/*!&lt; I2C master timeout in milliseconds */</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">i2c_scanner</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">i2c_config_t</span> conf = &#123;</span><br><span class="line">        .mode = I2C_MODE_MASTER,</span><br><span class="line">        .sda_io_num = I2C_MASTER_SDA_IO,</span><br><span class="line">        .scl_io_num = I2C_MASTER_SCL_IO,</span><br><span class="line">        .sda_pullup_en = GPIO_PULLUP_ENABLE,</span><br><span class="line">        .scl_pullup_en = GPIO_PULLUP_ENABLE,</span><br><span class="line">        .master.clk_speed = I2C_MASTER_FREQ_HZ,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    i2c_param_config(I2C_MASTER_NUM, &amp;conf);</span><br><span class="line">    i2c_driver_install(I2C_MASTER_NUM, conf.mode, I2C_MASTER_RX_BUF_DISABLE, I2C_MASTER_TX_BUF_DISABLE, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I2C scanner. Scanning...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> address = <span class="number">1</span>; address &lt; <span class="number">127</span>; address++) &#123;</span><br><span class="line">        <span class="type">i2c_cmd_handle_t</span> cmd = i2c_cmd_link_create();</span><br><span class="line">        i2c_master_start(cmd);</span><br><span class="line">        i2c_master_write_byte(cmd, (address &lt;&lt; <span class="number">1</span>) | I2C_MASTER_WRITE, <span class="literal">true</span>);</span><br><span class="line">        i2c_master_stop(cmd);</span><br><span class="line">        <span class="type">esp_err_t</span> ret = i2c_master_cmd_begin(I2C_MASTER_NUM, cmd, <span class="number">1000</span> / portTICK_PERIOD_MS);</span><br><span class="line">        i2c_cmd_link_delete(cmd);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ret == ESP_OK) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;I2C device found at address 0x%02x\n&quot;</span>, address);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Scan completed.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">app_main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    i2c_scanner();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果中I2C地址有0x44或者0x45则说明SHT3x连接正常</p><p><img src="https://s2.loli.net/2024/08/23/MzbXm7RA8DodcKV.png" alt="image-20240823162335559"></p><p>最终的结果如下：</p><p><img src="https://s2.loli.net/2024/08/23/XyNKSpIQolcJd3v.png" alt="image-20240823161656056"></p>]]></content>
      
      
      <categories>
          
          <category> esp-idf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
            <tag> esp-idf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux/Ubuntu安装图形界面版clash-gui</title>
      <link href="/posts/a5d6f412.html"/>
      <url>/posts/a5d6f412.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装Clash">1.安装Clash</h2><ol><li><p>首先，下载<a href="https://github.com/MGod-monkey/clash-for-all-backup/releases/download/v0.20.39/Clash.for.Windows-0.20.39-x64-linux.tar.gz">Clash.for.Windows-0.20.39-x64-linux.tar.gz</a>【网速慢的用gitee进行下载：<a href="https://gitee.com/mgod_wu/clash-for-all-backup/releases/tag/v0.20.39">https://gitee.com/mgod_wu/clash-for-all-backup/releases/tag/v0.20.39</a>】，下载完成后终端进入下载目录运行以下命令进行解压：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf Clash.for.Windows-0.20.39-x64-linux.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压完成后，可以将文件夹改名并移到<code>/opt/</code>：目录中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> Clash\ <span class="keyword">for</span>\ Windows-0.20.39-x64-linux /opt/clash</span><br></pre></td></tr></table></figure></li><li><p>通过<code>sudo ls /opt/clash</code>查看目录内结构：</p><p><img src="https://s2.loli.net/2024/06/18/TQIAzWxSZ5as3rF.png" alt=""></p></li><li><p><code>cfw</code>就是<code>clash for windows</code>的意思，原作者把gui界面也移植到了linux中，我们可以运行以下命令打开：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/clash</span><br><span class="line">./cfw</span><br></pre></td></tr></table></figure><p>打开之后就是以下界面：<br><img src="https://s2.loli.net/2024/06/18/L3DnK28uMkiwjls.png" alt=""></p><p>勾选底下的<code>start with linux</code>，这样就可以开机跟随系统启动了</p></li><li><p>代理地址的导入只需要切换到<code>Profiles</code>页面，输入自己购买的订阅地址即可：<br><img src="https://s2.loli.net/2024/06/18/smnlXTxHBgV84oQ.png" alt=""><br>订阅完成后，切换到<code>Proxis</code>页面就可以切换节点：<br><img src="https://s2.loli.net/2024/06/18/Po7d4r3sflCLYUS.png" alt=""></p></li></ol><h2 id="2-配置桌面图标">2. 配置桌面图标</h2><p><code>clash for windows</code>linux版本默认是没有桌面图标的，如果退出了就只能重新通过命令行进入，比较麻烦，所以这里我们配置一下桌面图标。</p><ol><li><p>进入<code>~/.local/share/applications</code>目录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.local/share/applications</span><br></pre></td></tr></table></figure></li><li><p>创建<code>clash_gui.desktop</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano clash_gui.desktop</span><br></pre></td></tr></table></figure><p>输入以下内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=clash <span class="keyword">for</span> linux</span><br><span class="line">Icon=/opt/clash/clash.png</span><br><span class="line">Exec=/opt/clash/cfw</span><br><span class="line">Type=Application</span><br></pre></td></tr></table></figure><blockquote><p>需要根据自己的情况修改的只有以下两个字段：</p><ul><li><code>Icon</code> 是桌面图标所在地址，可以自己网上找一个clash图标下载即可，例如我的图标是：<a href="https://gitee.com/mgod_wu/clash-for-all-backup/raw/main/clash.png">https://gitee.com/mgod_wu/clash-for-all-backup/raw/main/clash.png</a>，然后复制到软件目录下<code>sudo cp clash.png /opt/clash</code></li><li><code>Exec</code> 表示<code>cfw</code>命令，这里我的<code>cfw</code>文件是在<code>/opt/clash</code>目录下，所以我的执行命令如上所是。<br>然后保存退出。</li></ul><p><strong>注：确保路径正确，否则图标将不会显示</strong></p></blockquote></li><li><p>最后增加权限:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> a+x clash_gui.desktop</span><br></pre></td></tr></table></figure><p>然后便可在应用程序中看到clash的桌面图标了，下次我们直接点击桌面图标进入即可，右键图标还可以选择加入图标。</p><p><img src="https://s2.loli.net/2024/06/18/ERZXeh89fb7Jpma.png" alt=""></p></li></ol><h2 id="3-开启系统代理">3. 开启系统代理</h2><p>不同于windows版本的clash-gui，linux下的系统代理需要自己在系统的网络中进行手动设置，设置过程如下：</p><ul><li>打开ubuntu的系统设置，选择<code>网络</code>—&gt;<code>网络代理</code></li></ul><p><img src="https://s2.loli.net/2024/06/18/pWan3FIfu2lScTg.png" alt=""></p><ul><li>将网络代理切换为<code>手动</code>，如图所示，将HTTP和HTTPS代理端口填写为上面获取到的HTTP端口，Socks主机端口号也填写成如下形式。</li></ul><p><img src="https://s2.loli.net/2024/06/18/964XldcAZ2fwhyv.png" alt=""></p><p>这样系统代理部分就完成了，之后只要在clash中选择节点通常就可以使用了。如果需要关闭代理，那么同样把<code>网络代理</code>从<code>手动</code>改为<code>关闭</code>即可。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> clash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-5-Airsim-PX4仿真环境搭建</title>
      <link href="/posts/982cb875.html"/>
      <url>/posts/982cb875.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>AirSim项目地址：</strong><a href="https://github.com/microsoft/AirSim">https://github.com/microsoft/AirSim</a></p><p><strong>AirSim官方教程：</strong><a href="https://microsoft.github.io/AirSim/">Home - AirSim (microsoft.github.io)</a></p><p><strong>CSDN参考教程:</strong> <a href="https://blog.csdn.net/qq_45709806/article/details/136062458">AirSim学习（1）安装Unreal Engine和AirSim</a></p><p><strong>视频教程：</strong></p><ul><li><p><a href="https://www.bilibili.com/video/BV1Rz4y1t7Zf">【AirSim】我有自己的无人机啦 - bilibili</a></p></li><li><p><a href="https://www.zhihu.com/zvideo/1365229339978682368">Chris Lovett的讲解在自己的Windows上实现AirSim仿真 - 知乎 (zhihu.com)</a></p></li></ul></blockquote><h2 id="1-AirSim-Windows环境配置">1.AirSim-Windows环境配置</h2><blockquote><p><strong>注：Windows环境需要自行安装VS2022或以上版本，Unreal Engine &gt;= 4.27（推荐4.27），以及wsl2（在Windows上运行Airsim，在wsl或者vm虚拟机上通过ros控制无人机）</strong></p><ul><li><p>安装虚拟引擎</p><ul><li><p>1.<a href="https://www.unrealengine.com/download">【下载并安装EPIC】</a> ，虽然虚幻引擎是开源和免费下载的，但仍然需要注册</p></li><li><p>2.运行<strong>Epic Games Launcher</strong>，打开左侧窗格中的 “<strong>虚幻引擎</strong>” 选项卡。单击右上角的 “<strong>安装</strong>” 按钮，该按钮应显示下载 <strong>UE&gt; = 4.27（推荐4.27）</strong> 的选项。选择安装位置以满足您的需求，如下图所示。如果您安装了多个版本的<strong>Unreal</strong>，请单击该版本的启动按钮旁边的向下箭头，以确保将您使用的版本设置为 “<strong>当前</strong>”。</p><p><strong>Note</strong>: 如果您有UE 4.16或更旧的项目，请参阅 [升级指南](https:// <a href="http://microsoft.github.io/AirSim/unreal_upgrade/">microsoft.github.io/AirSim/unreal_upgrade/</a>) 来升级您的项目。</p></li></ul></li><li><p>安装VS2022</p><ul><li>1.<a href="https://mp.weixin.qq.com/s?__biz=MzA4MjU4MTg2Ng==&amp;mid=2247523511&amp;idx=7&amp;sn=57646ed6e7f178334c8a7a3593022f0e&amp;chksm=9f815cb2a8f6d5a406cb4bd9ab4d578c67a8556f9296a579f351df0c895290d3ad479dfcd138&amp;scene=21#wechat_redirect">Visual Studio2022安装教程 (qq.com)</a>。确保选择安装时勾选了<strong>C ++桌面开发</strong> 和**Windows 10 SDK 10.0.19041（如果是Windows11还需要选择Windows11的SDK）**进行桌面开发 (默认情况下应选择)，然后选择最新的。<strong>NET Framework SDK</strong>下的 “<strong>单个组件</strong>” 选项卡，同时安装VS 2022。</li></ul><p><img src="https://s2.loli.net/2024/02/28/37yMhW9EUtpa2cB.png" alt=""></p></li><li><p>Windows安装wsl2</p><ul><li><strong>参考这个教程安装（ubuntu版本选择20最好）：</strong><a href="https://zhuanlan.zhihu.com/p/475462241">Windows 11 安装 WSL2 - 知乎</a></li></ul></li></ul></blockquote><h3 id="1-1Build-Airsim">1.1Build Airsim</h3><ol><li><p>下载源码到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/microsoft/AirSim.git</span><br><span class="line"><span class="comment"># 国内网络环境不好时选择下面</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.moeyy.xyz/https://github.com/microsoft/AirSim.git</span><br></pre></td></tr></table></figure></li><li><p>安装依赖项并编译</p><ol><li><p><a href="https://cmake.org/download/">【下载并安装Cmake】</a>，安装时记得勾选添加到环境中</p><img src="https://s2.loli.net/2024/02/28/BnefXiZt3bp8lvY.png" style="zoom:50%;" /></li><li><p>安装<strong>Cmake</strong>完后重启电脑以生效环境，打开<code>Developer Command Prompt for VS 2022</code>，在Windows搜索中搜索然后使用管理员打开，<code>cd AirSim</code>记得cd进入Airsim所在的目录</p></li><li><p>输入<code>.\build.cmd</code>进行编译Airsim，如果在下面的过程中卡壳了，<strong>Ctrl+C</strong>终止编译，然后重新编译，直到下载完成并正常编译完成</p></li></ol></li></ol><img src="https://s2.loli.net/2024/02/28/3RUyckmza5Twj9b.png" style="zoom:50%;" /><ol start="3"><li><p>使用<strong>VS2022</strong>编译打开</p><ol><li><p>使用<code>Developer Command Prompt for VS 2022</code>进入<code>AirSim\Unreal\Environments\Blocks</code>，执行<code>.\update_from_git.bat</code></p></li><li><p>双击打开<code>Blocks.sln</code>，会自动启动<strong>VS2022</strong></p></li><li><p>右键<code>Block</code>设为为启动项目</p><img src="https://s2.loli.net/2024/03/28/6ALzG4JCR3QOdgb.png" style="zoom:80%;" /></li><li><p>编译器选择<code>DebugGame Editor</code>，然后启动<strong>本地Windows调试器</strong>，编译完成自动打开虚幻引擎</p><p><img src="https://s2.loli.net/2024/03/28/V7Isc4tQrbgJvXk.png" alt=""></p></li><li><p>点击运行，点击**‘是’<strong>选择仿真车，点击</strong>’否’**选择仿真无人机，当出现下面的画面则表示环境搭建成功</p><img src="https://s2.loli.net/2024/03/28/oEuhpY5cqtKIGbS.png" style="zoom:50%;" /></li></ol></li></ol><h3 id="1-2自定义场景">1.2自定义场景</h3><blockquote><p>创建一个自定义的虚拟场景，并通过<strong>Airsim</strong>加载</p></blockquote><ol><li><p>打开<strong>Epic</strong> -&gt; 点击<strong>虚幻商城</strong> -&gt; 搜索<strong>环境</strong>类型的素材（推荐免费：搜索&quot;<strong>Assetsville Town或City Park</strong>&quot; -&gt; 筛选结果选择免费 -&gt; 添加致购物车进行购买）-&gt; 点击上方的<strong>库</strong>，选择刚才购买的<strong>City Park</strong>创建工程，选定路径</p><p><img src="https://s2.loli.net/2024/06/11/opNvHEOc7L9dnGV.png" alt="image-20240611162643650"></p><p><img src="https://s2.loli.net/2024/06/11/tlpfGvI9JxaKE2N.png" alt="image-20240611163507427"></p></li><li><p>导入完成后双击打开该工程</p><blockquote><p>注：如果加载过程中黑屏或者卡住可以重启<strong>Unreal Engine</strong>，如果实在打开太卡或太慢可以选择上面购买<strong>City Park</strong>第二个那个轻量版地图</p></blockquote><p><img src="https://s2.loli.net/2024/06/11/oZ7UkgFCfnQ8TVt.png" alt="image-20240611192338259"></p></li><li><p>关闭工程，将<code>AirSim\Unreal\Plugins</code>文件夹复制到刚才的工程目录下，然后双击<code>CityParkEnvironmentMini.uproject</code>，弹出<strong>Rebuild</strong>窗口，点击<strong>是</strong></p><p><img src="https://s2.loli.net/2024/06/11/8Elr6XORuQLNDof.png" alt="image-20240611195006551"></p></li><li><p>重新编译完成后，右下角弹出更新插件，点击<strong>管理插件</strong>即可看到<strong>AirSim插件</strong>添加到工程中，然后点击功能栏的<code>设置</code> -&gt; <code>世界场景设置</code> -&gt; 游戏模式重载选择<code>AirSimGameMode</code></p><p><img src="https://s2.loli.net/2024/06/11/c2L3lwUdXxyzbDT.png" alt="image-20240611195450875"></p><p><img src="https://s2.loli.net/2024/06/11/I1nkLQ9wtahvN8C.png" alt="image-20240611195844988"></p></li><li><p>点击运行，如果出现弹窗，选择<code>是</code>启动车辆仿真，<code>否</code>启动无人机仿真，按<code>F1</code>查看帮助</p><p><img src="https://s2.loli.net/2024/06/11/bmf5LCSIpjDP9Bu.png" alt="image-20240611200347055"></p><ol start="6"><li><p>修改配置文件，前往<code>C:\User\&#123;你的用户名&#125;\Documents\AirSim\Settings.json</code>,文件配置项参考<a href="https://microsoft.github.io/AirSim/settings/">https://microsoft.github.io/AirSim/settings/</a>，以下是推荐的配置文件，需要搭配第二部分的设置使用，其中<strong>LocalHostIp</strong>为Windows本机的IP地址，通过cmd指令输入<code>ipconfig</code>进行查看，一般为192.168.1.x，或者其他，你可以通过<strong>WSL</strong>或者<strong>VM虚拟机</strong>ping一下看看通不通</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;SettingsVersion&quot;</span><span class="punctuation">:</span> <span class="number">1.2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SimMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Multirotor&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ClockType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;SteppableClock&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Vehicles&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;PX4&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;VehicleType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PX4Multirotor&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;UseSerial&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;LockStep&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;UseTcp&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;TcpPort&quot;</span><span class="punctuation">:</span> <span class="number">4560</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ControlIp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;remote&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ControlPortLocal&quot;</span><span class="punctuation">:</span> <span class="number">14540</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ControlPortRemote&quot;</span><span class="punctuation">:</span> <span class="number">14580</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;LocalHostIp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.1.116&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Sensors&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Barometer&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;SensorType&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;PressureFactorSigma&quot;</span><span class="punctuation">:</span> <span class="number">0.0001825</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Imu&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;SensorType&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;Enabled&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;AngularRandomWalk&quot;</span><span class="punctuation">:</span> <span class="number">0.3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;GyroBiasStabilityTau&quot;</span><span class="punctuation">:</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;GyroBiasStability&quot;</span><span class="punctuation">:</span> <span class="number">4.6</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;VelocityRandomWalk&quot;</span><span class="punctuation">:</span> <span class="number">0.24</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;AccelBiasStabilityTau&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;AccelBiasStability&quot;</span><span class="punctuation">:</span> <span class="number">36</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Gps&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;SensorType&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;Enabled&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EphTimeConstant&quot;</span><span class="punctuation">:</span> <span class="number">0.9</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EpvTimeConstant&quot;</span><span class="punctuation">:</span> <span class="number">0.9</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EphInitial&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EpvInitial&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EphFinal&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EpvFinal&quot;</span><span class="punctuation">:</span> <span class="number">0.1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EphMin3d&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;EphMin2d&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;UpdateLatency&quot;</span><span class="punctuation">:</span> <span class="number">0.2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;UpdateFrequency&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;StartupDelay&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;Distance&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;SensorType&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;Enabled&quot;</span> <span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;MinDistance&quot;</span><span class="punctuation">:</span> <span class="number">0.2</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;MaxDistance&quot;</span><span class="punctuation">:</span> <span class="number">40</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;X&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;Y&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;Z&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;Yaw&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;Pitch&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="attr">&quot;Roll&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;DrawDebugPoints&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Parameters&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;NAV_RCL_ACT&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;NAV_DLL_ACT&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;COM_OBL_ACT&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;LPE_LAT&quot;</span><span class="punctuation">:</span> <span class="number">47.641468</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;LPE_LON&quot;</span><span class="punctuation">:</span> <span class="number">-122.140165</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-WSL2或者VM虚拟机环境配置">2. WSL2或者VM虚拟机环境配置</h2><blockquote><p>注：WSL或VM虚拟机需要如下环境</p><ul><li>ubuntu系统</li><li>gcc&gt;=8：<code>gcc -v</code> <code>sudo apt install gcc</code></li><li>ROS1或者ROS2：安装参考<a href="https://www.mgodmonkey.cn/posts/232d6cf1.html">ROS 资源汇总</a></li><li>PX4仿真：安装参考<a href="https://www.mgodmonkey.cn/posts/cfe889db.html">从0入门自主空中机器人-4-【PX4与Gazebo入门】</a></li><li>QGC以及一些常见的软件：安装参考<a href="https://www.mgodmonkey.cn/posts/eb82f52e.html">从0入门自主空中机器人-3-【环境与常用软件安装】</a></li></ul></blockquote><ol><li><p>复制一份<code>AirSim</code>工程目录到<strong>WSL</strong>或<strong>VM虚拟机</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu18</span></span><br><span class="line">sudo apt-get install ros-melodic-tf2-sensor-msgs ros-melodic-tf2-geometry-msgs ros-melodic-mavros*</span><br><span class="line"><span class="comment"># Ubuntu20</span></span><br><span class="line">sudo apt-get install ros-noetic-tf2-sensor-msgs ros-noetic-tf2-geometry-msgs ros-noetic-mavros*</span><br><span class="line"><span class="comment"># 初试化AirSim</span></span><br><span class="line"><span class="built_in">cd</span> AirSim</span><br><span class="line">sudo bash ./setup.sh</span><br><span class="line">sudo bash ./build.sh</span><br></pre></td></tr></table></figure></li><li><p>编译ROS包</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ROS1</span></span><br><span class="line"><span class="built_in">cd</span> AirSim/ros</span><br><span class="line">catkin_make</span><br><span class="line"><span class="comment"># ROS2</span></span><br><span class="line"><span class="built_in">cd</span> AirSim/ros2</span><br><span class="line">colcon build</span><br></pre></td></tr></table></figure></li><li><p>配置<code>~/.bashrc</code>环境</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip地址为运行airsim的Windows的ip</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export PX4_SIM_HOST_ADDR=192.168.1.116&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="comment"># 记得查看一下自己的路径对不对</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source ~/Airsim/ros/devel/setup.sh&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>开放防火墙（如果没有装防火墙就不需要这一步了）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 4560</span><br><span class="line">sudo ufuw allow 10049</span><br></pre></td></tr></table></figure></li></ol></li><li><p>在Window中启动AirSim（记得修改配置文件后重新启动），窗口显示等待TCP连接</p><p><img src="https://s2.loli.net/2024/06/12/1tAXWDj4BySsT2H.png" alt="image-20240612155513180"></p></li><li><p>在<strong>WSL</strong>或者<strong>VM虚拟机</strong>中启动<code>PX4仿真</code>和<code>ROS&amp;rivz</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/PX4-Autopilot</span><br><span class="line">make px4_sitl_default none_iris</span><br></pre></td></tr></table></figure><p>出现下面的提示则说明PX4与AirSim连接成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">PX4 SIM HOST: 192.168.1.117</span><br><span class="line">INFO  [simulator] Simulator using TCP on remote host 192.168.1.117 port 4560</span><br><span class="line">WARN  [simulator] Please ensure port 4560 is not blocked by a firewall.</span><br><span class="line">INFO  [simulator] Waiting <span class="keyword">for</span> simulator to accept connection on TCP port 4560</span><br><span class="line">INFO  [simulator] Simulator connected on TCP port 4560.</span><br><span class="line">INFO  [commander] LED: open /dev/led0 failed (22)</span><br><span class="line">INFO  [init] Mixer: etc/mixers/quad_w.main.mix on /dev/pwm_output0</span><br><span class="line">INFO  [init] setting PWM_AUX_OUT none</span><br><span class="line">INFO  [mavlink] mode: Normal, data rate: 4000000 B/s on udp port 18570 remote port 14550</span><br><span class="line">INFO  [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540</span><br><span class="line">INFO  [mavlink] mode: Onboard, data rate: 4000 B/s on udp port 14280 remote port 14030</span><br><span class="line">INFO  [mavlink] mode: Gimbal, data rate: 400000 B/s on udp port 13030 remote port 13280</span><br><span class="line">INFO  [logger] logger started (mode=all)</span><br><span class="line">INFO  [logger] Start file <span class="built_in">log</span> (<span class="built_in">type</span>: full)</span><br><span class="line">INFO  [logger] [logger] ./log/2024-06-12/08_20_41.ulg</span><br><span class="line">INFO  [logger] Opened full <span class="built_in">log</span> file: ./log/2024-06-12/08_20_41.ulg</span><br><span class="line">INFO  [mavlink] MAVLink only on localhost (<span class="built_in">set</span> param MAV_&#123;i&#125;_BROADCAST = 1 to <span class="built_in">enable</span> network)</span><br><span class="line">INFO  [mavlink] MAVLink only on localhost (<span class="built_in">set</span> param MAV_&#123;i&#125;_BROADCAST = 1 to <span class="built_in">enable</span> network)</span><br><span class="line">INFO  [px4] Startup script returned successfully</span><br><span class="line">pxh&gt; INFO  [tone_alarm] home <span class="built_in">set</span></span><br><span class="line">INFO  [tone_alarm] notify negative</span><br></pre></td></tr></table></figure><p>启动<code>ROS&amp;rivz</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roslaunch airsim_ros_pkgs airsim_node.launch output:=screen host:=<span class="variable">$PX4_SIM_HOST_ADDR</span></span><br><span class="line">roslaunch airsim_ros_pkgs rviz.launch</span><br></pre></td></tr></table></figure><p>通过<code>rostopic list</code>查看有没有一下主题即可说明是否连接正常</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">laohanba@ubuntu:~/Airsim$ rostopic list</span><br><span class="line">/airsim_node/PX4/altimeter/Barometer</span><br><span class="line">/airsim_node/PX4/distance/Distance</span><br><span class="line">/airsim_node/PX4/environment</span><br><span class="line">/airsim_node/PX4/global_gps</span><br><span class="line">/airsim_node/PX4/gps/Gps</span><br><span class="line">/airsim_node/PX4/imu/Imu</span><br><span class="line">/airsim_node/PX4/magnetometer/magnetometer</span><br><span class="line">/airsim_node/PX4/odom_local_ned</span><br><span class="line">/airsim_node/PX4/vel_cmd_body_frame</span><br><span class="line">/airsim_node/PX4/vel_cmd_world_frame</span><br><span class="line">/airsim_node/gimbal_angle_euler_cmd</span><br><span class="line">/airsim_node/gimbal_angle_quat_cmd</span><br><span class="line">/airsim_node/origin_geo_point</span><br><span class="line">/rosout</span><br><span class="line">/rosout_agg</span><br><span class="line">/tf</span><br><span class="line">/tf_static</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>各个话题和订阅者功能如下：</p><ul><li><p>Publishers:<a href="https://microsoft.github.io/AirSim/airsim_ros_pkgs/#publishers">#</a></p><ul><li><p><code>/airsim_node/origin_geo_point</code> <a href="https://github.com/microsoft/AirSim/tree/main/ros/src/airsim_ros_pkgs/msg/GPSYaw.msg">airsim_ros_pkgs/GPSYaw</a> 与全球 NED 框架相对应的 GPS 坐标。这将在 airsim 的 <a href="https://microsoft.github.io/AirSim/settings/">settings.json</a> 文件中的 <code>OriginGeopoint</code> 键下进行设置</p></li><li><p><code>/airsim_node/VEHICLE_NAME/global_gps</code> <a href="https://docs.ros.org/api/sensor_msgs/html/msg/NavSatFix.html">sensor_msgs/NavSatFix</a> 这是无人机在 airsim 中的当前 GPS 坐标</p></li><li><p><code>/airsim_node/VEHICLE_NAME/odom_local_ned</code> <a href="https://docs.ros.org/api/nav_msgs/html/msg/Odometry.html">nav_msgs/Odometry</a> NED 框架（默认名称：oddom_local_ned，发射名称和框架类型可配置）中与起飞点的测距。</p></li><li><p><code>/airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE/camera_info</code> <a href="https://docs.ros.org/api/sensor_msgs/html/msg/CameraInfo.html">sensor_msgs/CameraInfo</a></p></li><li><p><code>/airsim_node/VEHICLE_NAME/CAMERA_NAME/IMAGE_TYPE</code> <a href="https://docs.ros.org/api/sensor_msgs/html/msg/Image.html">sensor_msgs/Image</a> RGB 或浮点图像，取决于 settings.json 中要求的图像类型。</p></li><li><p><code>/tf</code> <a href="https://docs.ros.org/api/tf2_msgs/html/msg/TFMessage.html">tf2_msgs/TFMessage</a></p></li><li><p><code>/airsim_node/VEHICLE_NAME/altimeter/SENSOR_NAME</code> <a href="https://github.com/microsoft/AirSim/blob/main/ros/src/airsim_ros_pkgs/msg/Altimeter.msg">airsim_ros_pkgs/Altimeter</a> 这是高度计当前的高度、压力和温度读数 <a href="https://en.wikipedia.org/wiki/QNH">QNH</a></p></li><li><p><code>/airsim_node/VEHICLE_NAME/imu/SENSOR_NAME</code> <a href="http://docs.ros.org/api/sensor_msgs/html/msg/Imu.html">sensor_msgs::Imu</a> IMU 传感器数据</p></li><li><p><code>/airsim_node/VEHICLE_NAME/magnetometer/SENSOR_NAME</code> <a href="http://docs.ros.org/api/sensor_msgs/html/msg/MagneticField.html">sensor_msgs::MagneticField</a> 测量磁场矢量/罗盘</p></li><li><p><code>/airsim_node/VEHICLE_NAME/distance/SENSOR_NAME</code> <a href="http://docs.ros.org/api/sensor_msgs/html/msg/Range.html">sensor_msgs::Range</a> 测量与活动者的距离，如红外线或红外信号</p></li><li><p><code>/airsim_node/VEHICLE_NAME/lidar/SENSOR_NAME</code> <a href="http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html">sensor_msgs::PointCloud2</a> 激光雷达点云</p></li></ul></li><li><p>Subscribers:<a href="https://microsoft.github.io/AirSim/airsim_ros_pkgs/#subscribers">#</a></p><ul><li><p><code>/airsim_node/vel_cmd_body_frame</code> <a href="https://github.com/microsoft/AirSim/tree/main/ros/src/airsim_ros_pkgs/msg/VelCmd.msg">airsim_ros_pkgs/VelCmd</a> 忽略 <code>vehicle_name</code> 字段，将其留空。今后我们将对多架无人机使用 <code>vehicle_name</code> 字段</p></li><li><p><code>/airsim_node/vel_cmd_world_frame</code> <a href="https://github.com/microsoft/AirSim/tree/main/ros/src/airsim_ros_pkgs/msg/VelCmd.msg">airsim_ros_pkgs/VelCmd</a> 忽略 <code>vehicle_name</code> 字段，将其留空。今后我们将对多架无人机使用 <code>vehicle_name</code> 字段</p></li><li><p><code>/gimbal_angle_euler_cmd</code> <a href="https://github.com/microsoft/AirSim/tree/main/ros/src/airsim_ros_pkgs/msg/GimbalAngleEulerCmd.msg">airsim_ros_pkgs/GimbalAngleEulerCmd</a> 以欧拉角为单位的万向节设定点</p></li><li><p><code>/gimbal_angle_quat_cmd</code> <a href="https://github.com/microsoft/AirSim/tree/main/ros/src/airsim_ros_pkgs/msg/GimbalAngleQuatCmd.msg">airsim_ros_pkgs/GimbalAngleQuatCmd</a> 以四元数表示的万向节设定点</p></li><li><p><code>/airsim_node/VEHICLE_NAME/car_cmd</code> <a href="https://github.com/microsoft/AirSim/blob/main/ros/src/airsim_ros_pkgs/msg/CarControls.msg">airsim_ros_pkgs/CarControls</a> 油门、刹车、转向和档位选择控制。可控制自动和手动变速箱，使用方法请参见 <a href="https://github.com/microsoft/AirSim/blob/main/ros/src/airsim_ros_pkgs/scripts/car_joy"><code>car_joy.py</code></a> 脚本</p></li></ul></li><li><p>Services:<a href="https://microsoft.github.io/AirSim/airsim_ros_pkgs/#services">#</a></p><ul><li><p><code>/airsim_node/VEHICLE_NAME/land</code> <a href="https://docs.ros.org/api/std_srvs/html/srv/Empty.html">airsim_ros_pkgs/Takeoff</a></p></li><li><p><code>/airsim_node/takeoff</code> <a href="https://docs.ros.org/api/std_srvs/html/srv/Empty.html">airsim_ros_pkgs/Takeoff</a></p></li><li><p><code>/airsim_node/reset</code> <a href="https://docs.ros.org/api/std_srvs/html/srv/Empty.html">airsim_ros_pkgs/Reset</a> 重置<em>所有</em>无人机</p></li></ul></li><li><p>Parameters:<a href="https://microsoft.github.io/AirSim/airsim_ros_pkgs/#parameters">#</a></p><ul><li><p><code>/airsim_node/world_frame_id</code> [string] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值：world_ned 设置为 &quot;world_enu &quot;可自动切换到 ENU 框架</p></li><li><p><code>/airsim_node/odom_frame_id</code> [string] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值： odom_local_ned 如果将 world_frame_id 设置为 “world_enu”，则默认 odom 名称将改为 “odom_local_enu”</p></li><li><p><code>/airsim_node/coordinate_system_enu</code> [boolean] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值：false 如果将 world_frame_id 设置为 “world_enu”，该设置将默认为 true</p></li><li><p><code>/airsim_node/update_airsim_control_every_n_sec</code> [double] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值：0.01 秒。计时器回调频率，用于从 airsim 更新无人机 Odom 和状态，以及发送控制命令。当前 RPClib 与虚幻引擎的接口最大频率为 50 赫兹。ROS 中的定时器回调以最大速率运行，因此最好不要触及此参数</p></li><li><p><code>/airsim_node/update_airsim_img_response_every_n_sec</code> [double] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值：0.01 秒。从 airsim 中所有摄像机接收图像的定时器回调频率。速度取决于请求图像的数量和分辨率。ROS 中的定时回调以最大可能的速度运行，因此最好不要触及此参数</p></li><li><p><code>/airsim_node/publish_clock</code> [double] Set in: <code>$(airsim_ros_pkgs)/launch/airsim_node.launch</code> 默认值：false 设置为 true 时，将发布 ros /clock 主题</p></li></ul></li></ul></blockquote><blockquote><p><strong>注：启动PX4连接成功后，可以通过QGC地面站一键起飞无人机</strong></p><p><img src="https://s2.loli.net/2024/06/12/Lg1T7aX4spxC2ze.gif" alt="gif3"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
            <tag> 仿真 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香橙派Aipro初体验</title>
      <link href="/posts/64c6093c.html"/>
      <url>/posts/64c6093c.html</url>
      
        <content type="html"><![CDATA[<h1>香橙派AIpro初体验</h1><img src="http://www.orangepi.cn/img/aipro/aipro-1.png" style="zoom:60%;" /><h2 id="1-开发板资料">1.开发板资料</h2><ul><li><strong>开发板资源</strong><ul><li><strong>产品介绍主页：</strong><a href="http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-AIpro.html">http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/details/Orange-Pi-AIpro.html</a></li><li><strong>开发板案例源码：</strong><a href="https://gitee.com/ascend/EdgeAndRobotics">https://gitee.com/ascend/EdgeAndRobotics</a></li><li><strong>工具&amp;原理图&amp;案例源码&amp;开发手册</strong>：<a href="http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/service-and-support/Orange-Pi-AIpro.html">http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/service-and-support/Orange-Pi-AIpro.html</a></li><li><strong>转存的镜像资源</strong>：<a href="https://pan.quark.cn/s/7f885d318cdf">夸克网盘</a> 提取码：XTw3</li></ul></li><li><strong>论坛资源</strong><ul><li><strong>Orange Pi论坛：</strong><a href="http://forum.orangepi.cn/">http://forum.orangepi.cn/</a></li><li><strong>昇腾论坛–香橙派AIpro学习资源一站式导航</strong>：<a href="https://www.hiascend.com/forum/thread-0285140173361311056-1-1.html">https://www.hiascend.com/forum/thread-0285140173361311056-1-1.html</a></li></ul></li></ul><h2 id="2-简易开箱">2.简易开箱</h2><ol><li><p>怀着激动的心打开快递盒，里面赫然躺着<strong>香橙派AIpro</strong>全家福：一个65W的充电头，一根数据线，一个Orange Pi AIpro(8G)本体，真正做到了开箱即用（零售版电源和扇热模块需要单独购买）</p><img src="https://s2.loli.net/2024/05/23/rOxE7wDAa1fLdh8.png" style="zoom:80%;" /><img src="https://s2.loli.net/2024/05/23/ZO7tc8Qe1r3NlLF.png" style="zoom:80%;" /></li><li><p>正面接口一览图如下，接口朝前从左边往右依次是Type-C电源接口，HDMI1 2.0，3.5mm音频接口，HDMI0 2.0，Type-C 3.0，两个个USB3.0和一个千兆网口，两个标准版的HDMI省去了额外购买其他型号的HDMI线，这个好评。板卡上还有一个Micro USB，方便串口调试，一个MIPI DSI接口(MIPI-DSI是一种应用于显示技术的串行接口，兼容DPI、DBI和DCS)用于连接液晶屏，两个MIPI  CSI接口(MIPI-CSI是一种应用于摄像头的串行接口)用于连接摄像头。接口类型丰富且全，唯一的缺点就是USB接口太少了，如果USB设备多一点就完全不够用了，需要额外接扩展坞来使用。</p></li></ol><img src="https://image.mgodmonkey.cn/file/af0a8b2e91ab900789a42.png" style="zoom:80%;" /><ol start="3"><li>背面接口一览图如下，背面主要是一些储存设备接口，常用的TF卡槽，支持2280规格NVMe SSD的PCle3.0 M2接口(手册说目前只支持三星的SSD固态，其余固态支持需要后续版本更新)和eMMC接口(eMMC储存模块可以在香橙派的淘宝店中购买：<a href="https://item.taobao.com/item.htm?abbucket=20&amp;id=726393710516&amp;ns=1&amp;priceTId=2147809317164340588936115ea1d4&amp;spm=a21n57.1.item.5.6fc5523caHNAab">购买链接</a>)</li></ol><p><img src="https://image.mgodmonkey.cn/file/17ad582a479ab58d4ff20.png" alt="img"></p><h2 id="3-初步使用与环境配置">3.初步使用与环境配置</h2><h3 id="3-1-镜像烧录与设备启动">3.1 镜像烧录与设备启动</h3><ol><li><p>装备一张<strong>32G</strong>以上的TF卡(TF卡的传输速率必须为<strong>class10</strong>以上)，用于烧录系统，在<a href="http://www.orangepi.cn/html/hardWare/computerAndMicrocontrollers/service-and-support/Orange-Pi-AIpro.html">官方下载页面</a>中下载**<a href="https://www.balena.io/etcher/">烧录软件BalenaEtcher</a>**，<strong>Ubuntu</strong> / <strong>openeuler</strong>镜像(百度云盘限速可以从我的<a href="https://pan.quark.cn/s/7f885d318cdf">夸克网盘</a>下载，提取码：XTw3)，用烧录软件将镜像烧录进去然后插到背面TF卡槽即可</p><p><img src="https://s2.loli.net/2024/05/25/54vO7V6fwE3XhSG.png" alt="image-20240525104643353"></p></li><li><p>接上<strong>20V PD-65W</strong>电源，电源接口是在远离网口最边上的Type-c接口，用HDMI线连接显示屏跟HDMI0(靠近USB3.0一侧的HDMI，如果HDMI0没接，只接HDMI1没有显示)，连接键鼠，下面就是板子插满各种管后的样子</p></li></ol><img src="https://s2.loli.net/2024/05/25/vGxbOnlULuSwYCy.png" alt="image-20240525111025569" style="zoom:80%;" /><ol start="3"><li><p>经测试，待机电流0.13A，功率2.6W在左右，启动电流0.55A，功率11W，开机运行电流0.37A，功率7.3W左右(值得一提的是开机风扇默认启动最高速，这种情况我只在服务器主机上见过，，，)</p><img src="https://s2.loli.net/2024/05/25/Yw2HWXGpZCS4m9a.png" alt="image-20240525173851777" style="zoom: 67%;" /></li><li><p>如果插电没有自启，按一下Reset键(相当于开机键)，如果开机黑屏，检查一下启动模式是否为TF卡启动，检查背面的两个拨动开关的位置，<strong>香橙派AIpro</strong>支持三种启动设备进行启动，其余两种启动设备启动方式自行查看用户手册</p><table><thead><tr><th style="text-align:center">拨动开关BOOT1</th><th style="text-align:center">拨动开关BOOT2</th><th style="text-align:center">对应启动设备</th></tr></thead><tbody><tr><td style="text-align:center">左</td><td style="text-align:center">左</td><td style="text-align:center">未使用</td></tr><tr><td style="text-align:center">右</td><td style="text-align:center">左</td><td style="text-align:center">STAT SSD和NVMe SSD</td></tr><tr><td style="text-align:center">左</td><td style="text-align:center">右</td><td style="text-align:center">eMMC</td></tr><tr><td style="text-align:center">右</td><td style="text-align:center">右</td><td style="text-align:center">TF卡</td></tr></tbody></table></li></ol><h3 id="3-2-开机三部曲">3.2 开机三部曲</h3><ol><li><p>开屏默认用户名为<code>HwHiAiUser</code>，密码为<code>Mind@123</code>，开机第一件事就是修改密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root <span class="comment"># root默认密码也是Mind@123</span></span><br><span class="line">sudo passwd HwHiAiUser</span><br></pre></td></tr></table></figure></li><li><p>第二件事就是查看系统内核和CPU架构，方便后续安装软件时做参考（linux内核为<strong>5.10.0</strong>,系统架构为<strong>aarch64</strong>，软件下载<strong>ARM64 / ARMv8 / aarch64</strong>版本即可）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">(base) HwHiAiUser@orangepiaipro:~/Desktop$ <span class="built_in">uname</span> -a</span><br><span class="line">Linux orangepiaipro 5.10.0+ <span class="comment">#1 SMP Mon Feb 26 15:29:07 CST 2024 aarch64 aarch64 aarch64 GNU/Linux</span></span><br><span class="line">(base) HwHiAiUser@orangepiaipro:~/Desktop$ lscpu</span><br><span class="line">Architecture:          aarch64</span><br><span class="line">  CPU op-mode(s):      64-bit</span><br><span class="line">  Byte Order:          Little Endian</span><br><span class="line">CPU(s):                4</span><br><span class="line">  On-line CPU(s) list: 0-3</span><br><span class="line">Vendor ID:             0x00</span><br><span class="line">  Model:               2</span><br><span class="line">  Thread(s) per core:  1</span><br><span class="line">  Core(s) per cluster: 4</span><br><span class="line">  Socket(s):           -</span><br><span class="line">  Cluster(s):          1</span><br><span class="line">  Stepping:            0x1</span><br><span class="line">  BogoMIPS:            96.00</span><br><span class="line">  Flags:               fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp a</span><br><span class="line">                       simdhp cpuid asimdrdm jscvt fcma dcpop sha3 asimddp sha51</span><br><span class="line">                       2 sve asimdfhm ssbs sb</span><br><span class="line">NUMA:                  </span><br><span class="line">  NUMA node(s):        3</span><br><span class="line">  NUMA node0 CPU(s):   0-3</span><br><span class="line">  NUMA node1 CPU(s):   </span><br><span class="line">  NUMA node2 CPU(s):   </span><br><span class="line">Vulnerabilities:       </span><br><span class="line">  Itlb multihit:       Not affected</span><br><span class="line">  L1tf:                Not affected</span><br><span class="line">  Mds:                 Not affected</span><br><span class="line">  Meltdown:            Not affected</span><br><span class="line">  Mmio stale data:     Not affected</span><br><span class="line">  Retbleed:            Not affected</span><br><span class="line">  Spec store bypass:   Mitigation; Speculative Store Bypass disabled via prctl</span><br><span class="line">  Spectre v1:          Mitigation; __user pointer sanitization</span><br><span class="line">  Spectre v2:          Not affected</span><br><span class="line">  Srbds:               Not affected</span><br><span class="line">  Tsx async abort:     Not affected</span><br></pre></td></tr></table></figure></li><li><p>第三件事自然是安装<strong>nomachine</strong>和<strong>ssh</strong>了，这样就可以完全摆脱键鼠和显示屏独立使用了。推荐优先安装<strong>nomachine</strong>，因为<strong>nomachine</strong>会自动扫描局域网内的设备，这样就可以知道<strong>香橙派Aipro</strong>的IP地址了</p><ol><li><p>Windows上安装Windows版本的<strong>nomachine</strong>(下载链接：<a href="https://downloads.nomachine.com/windows/?id=3">前往</a>)，下载完成双击安装即可</p></li><li><p>香橙派Aipro上安装<strong>ARMv8</strong>版本<strong>deb包</strong>的<strong>nomachine</strong>(下载链接: <a href="https://downloads.nomachine.com/download/?id=118&amp;distro=ARM">前往</a>)，下载完成通过下面的指令安装即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i nomachine_8.xxx_arm64.deb<span class="comment"># 根据自己下载的文件名称和路径进行安装</span></span><br></pre></td></tr></table></figure></li><li><p>安装并启动后，在Windows的nomachine上即可看到香橙派Aipro设备，这时就可以完全摆脱显示屏和键鼠了</p><img src="https://s2.loli.net/2024/05/25/SZA6lkoMJfGs82P.png" alt="image-20240525182858207" style="zoom:67%;" /></li><li><p>双击连接<strong>香橙派Aipro</strong>，输入用户名和密码</p><blockquote><p>注：如果出现黑屏或者无法控制的情况，可以先试试连接显示屏后能否正常使用，如果能可以在淘宝买个HDMI诱骗器来使用</p></blockquote><img src="https://s2.loli.net/2024/05/25/6WpQK89ZseGVtDM.png" alt="image-20240525183103552" style="zoom:67%;" /></li><li><p>设置香橙派开机自动解锁屏幕进入桌面（如果不做这一步，就每次都需要连接显示屏登录用户后才能使用nomachine进行控制）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/lightdm/lightdm.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在`[Seat:*]`部分添加以下行，然后保存退出</span></span><br><span class="line">autologin-user=HwHiAiUser</span><br><span class="line">autologin-user-timeout=0</span><br><span class="line"></span><br><span class="line">sudo visudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将末尾修改成如下，这样你的香橙派就能开机自动登录进入桌面了</span></span><br><span class="line">HwHiAiUser ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure></li><li><p>安装ssh并通过<strong>mobaxterm</strong><a href="https://mobaxterm.mobatek.net/">【下载地址】</a>进行连接，通过<code>sudo apt install openssh-server</code>来安装ssh服务，通过<strong>nomachine</strong>右键香橙派Aipro-&gt;<strong>Connection info</strong>来查看香橙派Aipro的设备IP，防止每次IP不一样的问题</p><img src="https://s2.loli.net/2024/05/25/SDPxueBrHUaqblG.png" alt="image-20240525184559052" style="zoom: 67%;" /><img src="https://s2.loli.net/2024/05/25/9wqr8TVSWpBkxOo.png" alt="image-20240525185803890" style="zoom: 80%;" /></li></ol></li></ol><h3 id="3-3-常用的编程环境">3.3 常用的编程环境</h3><blockquote><p>经过测试，发现官方的镜像已经默认安装了python，c/c++环境，并且apt软件源已经换成了华为镜像源，省去了很多麻烦，这点好评</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(base) HwHiAiUser@orangepiaipro:~$ gcc --version</span><br><span class="line">gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br><span class="line"></span><br><span class="line">(base) HwHiAiUser@orangepiaipro:~$ g++ --version</span><br><span class="line">g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0</span><br><span class="line"></span><br><span class="line">(base) HwHiAiUser@orangepiaipro:~$ make --version</span><br><span class="line">GNU Make 4.3</span><br><span class="line"></span><br><span class="line">(base) HwHiAiUser@orangepiaipro:~$ python --version</span><br><span class="line">Python 3.9.2</span><br><span class="line"></span><br><span class="line">(base) HwHiAiUser@orangepiaipro:~$ <span class="built_in">which</span> python</span><br><span class="line">/usr/local/miniconda3/bin/python</span><br></pre></td></tr></table></figure><p><strong>ROS环境安装：</strong></p><blockquote><p>因为我目前学习的是自主空中机器人相关的知识，因此感觉这种小型主机更适合应用在智能车，无人机上，所以就需要安装<strong>ROS环境</strong>，Ubuntu22.04版本目前只支持安装<strong>ROS2</strong>以上的版本，**ROS环境安装&gt; **推荐参考我的博客网站进行一键安装：<a href="https://www.mgodmonkey.cn/posts/232d6cf1.html">ROS资源汇总-MGodmonkey的世界</a></p></blockquote><h2 id="4-案例测试">4.案例测试</h2><h3 id="4-1-ROS2-PyQt小海龟控制">4.1 ROS2-PyQt小海龟控制</h3><blockquote><p>这是当初我入门学习ROS结合PyQt搭建可视化界面写的一个小案例，感兴趣的可以前往：<a href="https://www.mgodmonkey.cn/posts/37a8d87e.html">【ROS2-PyQt小案例】</a>进行复刻</p></blockquote><h4 id="环境">环境:</h4><ul><li>ROS2：foxy</li><li>python：3.8.10</li><li>PyQt：5.10.12</li></ul><h4 id="1-初试化工作空间">1. 初试化工作空间</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/dev_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/dev_ws/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/MGod-monkey/ros2_pyqt_turtlesim_key.git</span><br></pre></td></tr></table></figure><h4 id="2-编译与运行">2. 编译与运行</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/dev_ws</span><br><span class="line">colcon build</span><br><span class="line"><span class="built_in">source</span> install/setup.sh</span><br><span class="line">ros2 run ros2_pyqt_turtlesim_key ros2_pyqt_turtlesim_key</span><br></pre></td></tr></table></figure><h4 id="3-其他">3.其他</h4><p>您可以通过<strong>Qt designer</strong>打开 ‘ros2_pyqt_turtlesim_key/key.ui’ 文件来编辑图形界面，并通过以下命令将 ‘.ui’ 文件转换为python文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyuic5 -o key_ui.py key.ui</span><br></pre></td></tr></table></figure><p><strong>在香橙派Aipro上运行效果如下，还是很流畅的</strong></p><img src="https://s2.loli.net/2024/05/28/YpNbTB9rOjVFwqU.gif" alt="gif1" style="zoom:67%;" /><h3 id="4-1-图像特征匹配">4.1 图像特征匹配</h3><blockquote><p>因为之前实在没有跑过什么AI相关的案例，开发板也玩的少，只能先跑我本科毕设时候做的图像特征匹配案例来试试水了(小小提一嘴，我这毕设拿了校优二等hh)，感兴趣的同样可以前往：<a href="https://github.com/MGod-monkey/FeatureMatchToolbox.git">【https://github.com/MGod-monkey/FeatureMatchToolbox.git】</a>进行复刻</p></blockquote><ol><li><p><strong>软件在香橙派Aipro上运行特征匹配算法的效果</strong></p><p><img src="https://s2.loli.net/2024/05/28/kN3YzJLGudxE1RB.gif" alt="gif4"></p></li><li><p><strong>各特征匹配算法在香橙派Aipro上运行的耗时和效果图如下，总体来说效果还是很不错的</strong></p></li></ol><p><img src="https://s2.loli.net/2024/05/28/qNbVvilFGjSoRsh.png" alt="image-20240528195531214"></p><p>3.<strong>运行SuperGule算法进行实时的匹配</strong></p><blockquote><p>实际运行下来，在处理640x480图像时有13fps左右，这效果已经远远超出了我原本的预期了，俗话说1帧能玩，2帧流畅，3帧电竞，，，</p></blockquote><p><img src="https://s2.loli.net/2024/05/29/YVpIxSjOiEMzHTs.gif" alt="gif6.gif"></p><h2 id="最后">最后</h2><p>​    非常感谢香橙派官方对本次测评的大力资助，说实话当初官方找到我的时候我的非常震惊的，因为我本身并不是专业的测评博主，只是喜欢在论坛上分享学习经验和知识的小白白，因此再次感谢香橙派官方对我信任 ，前段时间看到树莓派5B发布，四路 Arm Cortex-A76 @ 2.4GHz，512KB二级缓存，2MB L3 高速缓存，双 4kp60 HDMI 显示输出，，，，心里是狠狠悸动了一下，但看到现在国产派也在慢慢上赶，心里也是非常喜悦的（虽然本次的香橙派和华为合作研发的香橙派Aipro跟树莓派不是一个赛道的）</p><p>希望本次香橙派Aipro入门博客分享能给正在入门香橙派的看客一个经验分享，希望香橙派的生态越来越好，香橙派🐮<strong>b</strong>，华为🐮<strong>b</strong></p>]]></content>
      
      
      <categories>
          
          <category> 测评 </category>
          
          <category> 香橙派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CERLAB无人机自主框架：动态目标检测与跟踪</title>
      <link href="/posts/2c607ad2.html"/>
      <url>/posts/2c607ad2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><em><strong>*描述*</strong></em>：欢迎来到CERLAB无人机自主框架，这是一个用于自主无人飞行器 (UAV) 的多功能模块化框架。该框架包括不同的组件 (模拟器，感知，映射，规划和控制)，以实现自主导航，未知探索和目标检查。</p><p><em><strong>*视频演示*</strong></em>: <a href="https://youtu.be/sWTQ4cnQCIE?si=809MQPjWSI2Bq4rj">YouTube</a>, <a href="https://www.bilibili.com/video/BV1KN4y1i7FV/?share_source=copy_web&amp;vd_source=1333db331406abb1b5d4cece1e253427&amp;t=0">BiliBili</a></p></blockquote><h2 id="1-论文解析">1. 论文解析</h2><div class="row">    <embed src="https://mybog.s3.bitiful.net/ros/word/Onboard_Dynamic-Object_Detection_and_Tracking_for_Autonomous_Robot_Navigation_With_RGB-D_Camera.pdf" width="100%" height="550" type="application/pdf"></div><div class="note info flat"><p>相关论文：<a class="btn-anzhiyu " href="https://mybog.s3.bitiful.net/ros/word/Perception_and_Avoidance_of_Multiple_Small_Fast_Moving_Objects_for_Quadrotors_With_Only_Low-Cost_RGBD_Camera.pdf"   title="前往下载"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>前往下载</span></a></p><p>论文代码：<a href="https://github.com/Zhefan-Xu/onboard_detector">https://github.com/Zhefan-Xu/onboard_detector</a></p></div><blockquote><h3 id="Chatpaper">Chatpaper</h3><h4 id="Basic-Information">Basic Information:</h4><ul><li>Title: Onboard Dynamic-Object Detection and Tracking for Autonomous Robot Navigation With RGB-D Camera (基于RGB-D相机的机载动态物体检测和跟踪用于自主机器人导航)</li><li>Authors: Zhefan Xu, Xiaoyang Zhan, Yumeng Xiu, Christopher Suzuki, Kenji Shimada</li><li>Affiliation: Department of Mechanical Engineering, Carnegie Mellon University, Pittsburgh, PA 15213 USA (美国卡内基梅隆大学机械工程系)</li><li>Keywords: RGB-D perception, vision-based navigation, visual tracking, 3D object detection, collision avoidance</li><li>URLs: <a href="https://doi.org/10.1109/LRA.2023.3334683">Paper</a>, <a href="https://github.com/Zhefan-Xu/onboard_detector">GitHub</a></li></ul><h4 id="论文简要">论文简要 :</h4><ul><li>本文提出了一种基于RGB-D相机的轻量级3D动态障碍物检测和跟踪方法，用于具有有限计算能力的小型机器人。该方法采用了新颖的集成检测策略，结合多个计算效率高但准确率较低的检测器，实现实时高准确性的障碍物检测。此外，还引入了一种基于特征的数据关联和跟踪方法，利用点云的统计特征来防止匹配错误。实验结果表明，该方法在小型四旋翼飞行器上实现了最低的位置误差和可比较的速度误差，证明了该方法在导航动态环境中能够有效改变机器人的轨迹。</li></ul><h4 id="背景信息">背景信息:</h4><ul><li>论文背景: 在拥挤的室内环境中部署自主机器人通常需要它们具备准确的动态障碍物感知能力。然而，以往在自动驾驶领域的许多研究都是针对3D物体检测问题进行的，使用了来自重型激光雷达传感器的密集点云数据，而这些基于学习的数据处理方法的高计算成本使得这些方法不适用于小型机器人，例如具有小型机载计算机的基于视觉的无人机。因此，需要针对计算能力有限的小型机器人开发一种轻量级的基于RGB-D相机的动态障碍物检测和跟踪方法。</li><li>过去方案: 以往的方法中，有些采用了单一的检测器，但这些方法在计算效率和准确性之间存在权衡。另一些方法则使用了深度图像进行障碍物检测，但深度相机的范围和视野有限，使得一些方法只能在短距离范围内进行障碍物跟踪。此外，深度相机的噪声也会影响检测算法的准确性和可靠性。</li><li>论文的Motivation: 针对上述问题，本文提出了一种基于RGB-D相机的轻量级3D动态障碍物检测和跟踪方法。该方法采用了多个计算效率高但准确率较低的检测器的集成策略，实现了实时高准确性的障碍物检测。此外，还引入了一种基于特征的数据关联和跟踪方法，利用点云的统计特征来防止匹配错误。最后，该系统还引入了一个学习模块，用于增强检测范围和动态障碍物识别。通过在小型四旋翼飞行器上的实验验证，该方法在机器人的机载计算机上实现了最低的位置误差和可比较的速度误差，证明了该方法在导航动态环境中能够有效改变机器人的轨迹。</li></ul><h4 id="方法">方法:</h4><ul><li>a. 理论背景:<ul><li>介绍了在拥挤的室内环境中，自主机器人需要准确的动态障碍物感知的需求，以及使用轻量级3D动态障碍物检测和跟踪方法的技术路线。</li></ul></li><li>b. 技术路线:<ul><li>提出了基于RGB-D相机的轻量级3D动态障碍物检测和跟踪方法，利用集成检测策略和基于特征的数据关联和跟踪方法实现实时高精度障碍物检测。</li></ul></li></ul><h4 id="结果">结果:</h4><ul><li>a. 详细的实验设置:<ul><li>在动态环境中使用两台定制的四轴飞行器进行实验，搭载Intel NUC和NVIDIA Jetson Xavier NX嵌入式计算机，算法在飞行器的嵌入式计算机上实时运行。</li></ul></li><li>b. 详细的实验结果:<ul><li>DODT方法在基准算法中表现出最低的位置误差和第二低的速度误差，集成检测降低了误报率并提高了障碍物位置和速度估计的准确性。学习模块增强了检测范围。实验结果显示算法在Intel NUC和Xavier NX平台上实现了实时性能，YOLO-MAD检测器占用了大部分处理时间。物理实验展示了成功检测和跟踪动态障碍物在机器人导航任务中的应用。</li></ul></li></ul></blockquote><h3 id="1-1-问题汇总">1.1 问题汇总</h3><ol><li><p>关于图2的系统框架：</p><ul><li>系统框架包括三个核心模块：检测模块、跟踪模块和识别模块。</li><li>检测模块由非学习和学习两部分组成，非学习部分利用深度图像和两个非学习检测器进行通用障碍物检测。</li><li>学习模块使用对齐的RGB-D图像进行直接动态障碍物检测，结果与非学习模块结合。</li><li>跟踪模块使用精细化的3D边界框来估计障碍物状态。</li><li>识别模块根据状态和跟踪历史将障碍物分类为静态或动态。</li><li>系统输出动态障碍物边界框，并在静态地图中清除动态障碍物区域以进行导航。 Pages: [“a. system overview”, “d. data association and tracking”, “e. dynamic obstacle identification”]</li></ul></li><li><p>关于U-depth检测器和DBSCAN检测器的定义，方法和作用:</p><ul><li><p><strong>U-depth检测器</strong>：</p><ul><li>定义：U-depth检测器是一种基于深度图像的方法，用于检测和跟踪动态障碍物。它通过生成U-depth图和V-depth图，结合深度信息来估计障碍物状态，实现对静态障碍物的安全导航。</li><li>方法：利用深度图像生成U-depth图和V-depth图，通过估计障碍物的速度和维度来检测和跟踪动态障碍物，将其表示为3D椭球体。采用YOLO检测器来有效避开快速和小型动态障碍物，结合图像差异来识别RGB图像中的所有动态点。</li><li>作用：U-depth检测器的作用在于提高障碍物维度估计的准确性，结合占据地图来导航动态环境，有效避开动态障碍物，从而实现机器人的安全导航。</li></ul></li><li><p><strong>DBSCAN检测器</strong>：</p><ul><li>定义：DBSCAN检测器是一种基于点云的方法，直接利用点云的几何信息来检测3D障碍物。它通过点云聚类方法结合YOLO检测器进行人体检测，提出使用点云特征向量和对象跟踪点来识别正确的对象匹配和估计其状态。<ul><li>方法：采用点云聚类方法结合YOLO检测器进行室内动态障碍物避让，利用点云特征向量和对象跟踪点来识别正确的对象匹配和估计其状态。</li><li>作用：DBSCAN检测器的作用在于提高障碍物跟踪的稳健性，通过点云信息直接检测3D障碍物，从而实现动态障碍物的避让和安全导航。 Pages: [“d. data association and tracking”, “e. dynamic obstacle identification”, “b. 3d-obstacle detectors”]</li></ul></li></ul></li></ul></li></ol><h2 id="2-环境搭建">2.环境搭建</h2><h3 id="2-1-CERLAB无人机框架搭建">2.1 CERLAB无人机框架搭建</h3><blockquote><p><strong>参考</strong>：<a href="https://www.mgodmonkey.cn/posts/349e2e18.html">CERLAB 无人机自主框架：环境搭建 | MGodmonkey の世界</a></p></blockquote><h3 id="2-2-yolo-mad环境安装（可选）">2.2 yolo-mad环境安装（可选）</h3><blockquote><p><strong>说明</strong>：如果用到<strong>yolo-mad</strong>检测器作为辅助，按照下面的教程搭建<strong>yolo-mad</strong>环境</p></blockquote><ul><li>安装torch</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是ubuntu20-torch-cpu版本的，其余系统或者GPU版本的参考官网教程</span></span><br><span class="line"><span class="comment"># 有缓存指令（网络不好的情况下建议有缓存）</span></span><br><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu</span><br><span class="line"><span class="comment"># 无缓存指令</span></span><br><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu --no-cache-dir</span><br></pre></td></tr></table></figure><blockquote><p><strong>参考</strong>：<a href="https://pytorch.org/get-started/locally/">Start Locally | PyTorch</a></p><p><strong>问题汇总</strong>：</p><ol><li><p>网络超时【urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host=‘<a href="http://files.pythonhosted.org">files.pythonhosted.org</a>’, port=443): Read timed out】：下载过程中经常会遇到timeout的情况，这时候可以通过复制上面的网址，通过各种方法先下载到本地，然后通过<code>pip3 install ~/torch-2.2.2+cpu-cp38-cp38-linux_x86_64.whl torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu</code>，哪个超时下载哪个到本地安装，或者头铁一直重试，迟早有一次成功的😉</p><p><img src="https://s2.loli.net/2024/04/15/Z6vlJuo19Imqzt4.png" alt=""></p></li><li><p>【ERROR: Package ‘networkx’ requires a different Python: 3.8.10 not in ‘&gt;=3.9’】：networkx版本不兼容3.8，需要通过<code>pip3 install networkx -i https://pypi.tuna.tsinghua.edu.cn/simple</code>手动安装network3.1版本的库</p></li></ol></blockquote><h3 id="2-3-运行Demo">2.3 运行Demo</h3><ol><li>下载<strong>rosbag</strong>包：【<a href="https://pan.quark.cn/s/fc253670a15f">夸克网盘：single-object.bag</a>】【<a href="https://pan.quark.cn/s/0871121dadc3">夸克网盘：multi-objects.bag</a>】</li><li>将python3设置为系统默认python版本：<code>sudo ln -sf /usr/bin/python3 /usr/local/bin/python</code></li><li>运行代码</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">roscore</span><br><span class="line"><span class="comment"># 单人运动</span></span><br><span class="line">rosbag play -l single-object.bag</span><br><span class="line"><span class="comment"># 多人运动</span></span><br><span class="line">rosbag play -l multi-objects.bag</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行没有yolo-mad作为辅助的检测器</span></span><br><span class="line">roslaunch onboard_detector run_detector.launch</span><br><span class="line"><span class="comment"># 运行yolo-mad作为辅助（感觉效果比上面的还差）</span></span><br><span class="line">roslaunch onboard_detector detector_with_learning_module.launch</span><br></pre></td></tr></table></figure><h3 id="2-4-在自己设备上运行（待补充待更新）">2.4 在自己设备上运行（待补充待更新）</h3><blockquote><p>请调整你的摄像头设备下的配置文件，位于 <code>cfg/detector_param.yaml</code>。同时，修改 <code>scripts/yolo_detector/yolo_detector.py</code> 中的彩色图像话题名称。从参数文件中，你可以看到算法期望从机器人获取以下数据：</p><ul><li><p>深度图像：<code>/camera/depth/image_rect_raw</code></p></li><li><p>机器人姿态：<code>/mavros/local_position/pose</code></p></li><li><p>机器人里程计（可选）：<code>/mavros/local_position/odom</code></p></li><li><p>彩色图像（如果应用了YOLO则为可选）：<code>/camera/color/image_rect_raw</code></p></li><li><p>对齐深度图像（可选）：<code>/camera/aligned_depth_to_color/image_raw</code></p></li></ul></blockquote><ol><li>修改深度相机launch文件</li></ol><blockquote><p>对齐深度图像默认不生成，因此需要修改launch文件继续修改</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roscd realsense2_camera/launch</span><br><span class="line">nano rs_camera.launch</span><br></pre></td></tr></table></figure><p>将<code>align_depth</code>参数修改为<code>true</code>，然后<strong>Ctrl+O</strong>&amp;<strong>Ctrl+X</strong>保存退出</p><img src="https://s2.loli.net/2024/04/19/V5dNOREYgC8L3m9.png"  /></blockquote><ol start="2"><li><p>运行Fast-Drone-250或Vins-Fusion等获取无人机位姿</p><blockquote><p>参考：<a href="https://github.com/ZJU-FAST-Lab/Fast-Drone-250">【https://github.com/ZJU-FAST-Lab/Fast-Drone-250】</a>上的教程搭建环境</p><ol><li>修改<strong>odom</strong>主题：进入<code>onboard_detector/cfg/detector_param.yaml</code>文件，将<code>localization_mode</code>修改为<code>1</code>，将<code>odom_topic</code>修改为<code>/vins_fusion/imu_propagate</code></li><li>启动<strong>Vins-Fusion</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ~/Fast-Drone-250/shfiles/rspx4.sh</span><br></pre></td></tr></table></figure><ol start="3"><li><p>修改深度相机的参数：<code>rostopic echo /camera/infra1/camera_info</code>，将K矩阵中的fx,fy,cx,cy填入<code>onboard_detector/cfg/detector_param.yaml</code>文件中的<code>depth_intrinsics</code>矩阵中</p></li><li><p>启动launch</p></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行没有yolo-mad作为辅助的检测器</span></span><br><span class="line">roslaunch onboard_detector run_detector.launch</span><br><span class="line"><span class="comment"># 运行yolo-mad作为辅助（感觉效果比上面的还差）</span></span><br><span class="line">roslaunch onboard_detector detector_with_learning_module.launch</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2024/05/07/YIcH5jlXbem1pfv.png" style="zoom: 80%;" /></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> CERLAB无人机自主框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CERLAB无人机自主框架：环境搭建</title>
      <link href="/posts/349e2e18.html"/>
      <url>/posts/349e2e18.html</url>
      
        <content type="html"><![CDATA[<h1>CERLAB UAV Autonomy Framework</h1><blockquote><p><strong>描述</strong>：欢迎来到CERLAB无人机自主框架，这是一个用于自主无人飞行器 (UAV) 的多功能模块化框架。该框架包括不同的组件 (模拟器，感知，映射，规划和控制)，以实现自主导航，未知探索和目标检查。</p><p><strong>视频演示</strong>: <a href="https://youtu.be/sWTQ4cnQCIE?si=809MQPjWSI2Bq4rj">YouTube</a>, <a href="https://www.bilibili.com/video/BV1KN4y1i7FV/?share_source=copy_web&amp;vd_source=1333db331406abb1b5d4cece1e253427&amp;t=0">BiliBili</a></p></blockquote><h2 id="1-模块介绍">1.模块介绍</h2><p><code>autonomous_flight</code>: 集成了用于各种任务的所有其他模块的自主飞行包。<a href="https://github.com/Zhefan-Xu/autonomous_flight">详细信息</a><br><code>global_planner</code>: 自主机器人的全球航点规划器库。<a href="https://github.com/Zhefan-Xu/global_planner">详细信息</a><br><code>map_manager</code>: 自主机器人的3D映射库。<a href="https://github.com/Zhefan-Xu/map_manager">详细信息</a><br><code>onboard_detector</code>: 自主机器人的动态障碍物检测和跟踪算法。<a href="https://github.com/Zhefan-Xu/onboard_detector">详细信息</a><br><code>remote_control</code>: Rviz配置和启动文件，便于可视化。<a href="https://github.com/Zhefan-Xu/onboard_detector">详细信息</a><br><code>time_optimizer</code>: 自主机器人的最优轨迹时间分配库。<a href="https://github.com/Zhefan-Xu/time_optimizer">详细信息</a><br><code>tracking_controller</code>: 自主机器人的轨迹跟踪控制器。<a href="https://github.com/Zhefan-Xu/tracking_controller">详细信息</a><br><code>trajectory_planner</code>: 自主机器人的轨迹规划库。<a href="https://github.com/Zhefan-Xu/trajectory_planner">详细信息</a><br><code>uav_simulator</code>: 基于轻型Gazebo/ROS的无人机模拟器。<a href="https://github.com/Zhefan-Xu/uav_simulator">详细信息</a></p><h2 id="2-安装指引">2.安装指引</h2><p>该工程已经在带有<strong>ROS Melodic</strong>的<strong>Ubuntu 18.04</strong>和带有<strong>ROS Noetic</strong>的<strong>Ubuntu 20.04</strong>上进行了测试，它取决于ROS包: <a href="https://wiki.ros.org/octomap">octomap</a>，<a href="https://wiki.ros.org/mavros">mavros</a>和<a href="https://wiki.ros.org/vision_msgs">vision_msgs</a>。使用以下命令安装软件包:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># step1: 安装依赖</span></span><br><span class="line">sudo apt install ros-<span class="variable">$&#123;ROS_DISTRO&#125;</span>-octomap* &amp;&amp; sudo apt install ros-<span class="variable">$&#123;ROS_DISTRO&#125;</span>-mavros* &amp;&amp; sudo apt install ros-<span class="variable">$&#123;ROS_DISTRO&#125;</span>-vision-msgs</span><br><span class="line"><span class="built_in">cd</span> /opt/ros/noetic/lib/mavros</span><br><span class="line">sudo ./install_geographiclib_datasets.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 2: 克隆工程到工作空间</span></span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/Zhefan-Xu/CERLAB-UAV-Autonomy.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选: 切换到autonomous_flight的模拟分支</span></span><br><span class="line"><span class="comment"># 默认分支用于实际飞行和PX4模拟</span></span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src/CERLAB-UAV-Autonomy/autonomous_flight</span><br><span class="line">git checkout simulation</span><br><span class="line"></span><br><span class="line"><span class="comment"># step 3: 编译</span></span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> ~/catkin_ws/devel/setup.bash</span><br><span class="line"><span class="comment"># 一定一定一定要source下面这条啊！！！血的教训，控制不了就是因为没有source这个</span></span><br><span class="line"><span class="built_in">source</span> ~/catkin_ws/src/CERLAB-UAV-Autonomy/uav_simulator/gazeboSetup.bash</span><br></pre></td></tr></table></figure><h2 id="3-PX4仿真-实飞">3.PX4仿真&amp;实飞</h2><blockquote><p>该CERLAB无人机框架自带两个仿真模拟器，<strong>autonomous_flight</strong>和<strong>PX4</strong>仿真，如果需要切换<strong>autonomous_flight</strong>仿真，则需要通过上面的方式切换分支</p><p><strong>自主起飞选项</strong>：</p><ul><li><code>Takeoff/Hovering</code>: 起飞和悬停在指定高度。</li><li><code>Takeoff/Tracking Circle</code>: 起飞和跟踪具有给定半径和速度的圆形轨迹。</li><li><code>Navigation</code>: 静态环境中的自主导航。</li><li><code>Dynamic Navigation</code>: 动态环境中的自主导航。</li><li><code>Inspection (Octomap)</code>: 使用Octomap的自主表面检查。</li><li><code>Inspection (Dynamic Map)</code>: 使用动态地图进行自主表面检查。</li><li><code>Dynamic Exploration</code>: 未知和动态环境中的自主探索。</li></ul></blockquote><h3 id="3-1安装PX4仿真环境">3.1安装PX4仿真环境</h3><blockquote><p><strong>环境安装参考</strong>：<a href="https://www.mgodmonkey.cn/posts/cfe889db.html">从0入门自主空中机器人-4-【PX4与Gazebo入门】 | MGodmonkeyの世界</a></p><p><strong>注</strong>：</p><p><img src="https://s2.loli.net/2024/03/26/bExvNX1oTVmqhiA.png" alt=""></p><p>如果通过修改<code>.bashrc</code>来更新环境变量，请确保<strong>PX4</strong>环境路径在<code>source ~/catkin_ws/devel/setup.bash</code>下面，否则将会报错</p></blockquote><h3 id="3-2运行Demo">3.2运行Demo</h3><p>首先启动无人机模拟器，您应该能够在预定义的<strong>gazebo</strong>中看到四轴飞行器。</p><p>该项目中有两种仿真器，一个是PX4仿真，即控制通过PX4固件控制，一个是自定义控制仿真，默认克隆下来代码的是PX4仿真分支</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动PX4仿真</span></span><br><span class="line">roslaunch uav_simulator px4_start.launch</span><br></pre></td></tr></table></figure><blockquote><p>若首次启动gazebo仿真黑屏很久，则是加载模型过久，可以提前下载模型到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.gazebo/</span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.gazebo/models <span class="comment"># 如果models目录存在，则不需要创建</span></span><br><span class="line"><span class="built_in">cd</span> ~/.gazebo/models/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载模型并解压</span></span><br><span class="line">wget http://file.ncnynl.com/ros/gazebo_models.txt</span><br><span class="line">wget -i gazebo_models.txt</span><br><span class="line"><span class="built_in">ls</span> model.tar.g* | xargs -n1 tar xzvf</span><br></pre></td></tr></table></figure></blockquote><p>a. 简单起飞和悬停 <code>Takeoff/Hovering</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun autonomous_flight takeoff_and_hover_node  <span class="comment"># takeoff at 1.0 meter height</span></span><br></pre></td></tr></table></figure><p>b. 起飞和跟踪一圈 <code>Takeoff/Tracking Circle</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch autonomous_flight takeoff_and_track_circle.launch  <span class="comment"># takeoff and tracking a circular trajectory</span></span><br></pre></td></tr></table></figure><p>c. 静态环境导航 <code>Navigation</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roslaunch remote_control navigation_rviz.launch </span><br><span class="line">roslaunch autonomous_flight navigation.launch <span class="comment"># 新建一个窗口来运行这个</span></span><br></pre></td></tr></table></figure><p>d. 动态环境导航 <code>Dynamic Navigation</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roslaunch remote_control dynamic_navigation_rviz.launch   </span><br><span class="line">roslaunch autonomous_flight dynamic_navigation.launch <span class="comment"># 新建一个窗口来运行这个</span></span><br></pre></td></tr></table></figure><p>e. 使用octomap进行静态环境检查 <code>Inspection (Octomap)</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roslaunch octomap_server octomap_mapping.launch <span class="comment"># 请牢记为 ros 主题/转换修改参数</span></span><br><span class="line">roslaunch autonomous_flight inspection.launch</span><br></pre></td></tr></table></figure><p>f. 使用动态地图进行动态环境检查 <code>Inspection (Dynamic Map)</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch autonomous_flight dynamic_inspection.launch    <span class="comment"># autonomous surface inspection</span></span><br></pre></td></tr></table></figure><p>g. 未知和动态环境探索 <code>Dynamic Exploration</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">roslaunch remote_control exploration_rviz.launch  </span><br><span class="line">roslaunch autonomous_flight dynamic_exploration.launch <span class="comment"># 新建一个窗口来运行这个</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注：</strong></p><p>PX4仿真下无法控制的情况下</p><ul><li><p>启动仿真，打开QGC地面站，在参数中搜索<code>COM_RCL_EXCEPT</code></p></li><li><p>将<code>COM_RCL_EXCEPT</code>参数改为<code>4</code>并保存</p></li></ul><img src="https://s2.loli.net/2024/01/12/31SIkYCRsGbg69F.png" style="zoom: 80%;" /></blockquote><h3 id="3-3参数调整">3.3参数调整</h3><p>所有参数都在<strong>autonomous_flight/cfg</strong>文件夹中。例如，动态导航的参数可以在<strong>autonomous_flight/cfg/dynamic_navgation/*.yaml</strong>中找到</p>]]></content>
      
      
      <categories>
          
          <category> CERLAB无人机自主框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wsl连接USB设备</title>
      <link href="/posts/961f6207.html"/>
      <url>/posts/961f6207.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>参考教程：</strong><a href="https://learn.microsoft.com/zh-cn/windows/wsl/connect-usb">连接 USB 设备 | Microsoft Learn</a></p></blockquote><h3 id="1-安装usbipd-win">1.安装usbipd-win</h3><p>WSL 本身并不支持连接 USB 设备，因此你需要安装开源usbipd-win项目【<a href="https://github.com/dorssel/usbipd-win/releases">下载Releases · dorssel/usbipd-win (github.com)</a>】</p><h3 id="2-共享USB设备">2.共享USB设备</h3><p>通过以<em>管理员</em>模式打开<strong>PowerShell</strong>或者<strong>CMD</strong>并输入以下命令，列出所有连接到Windows的USB设备。 列出设备后，选择并复制要附加到WSL的设备总线 ID。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Program Files\usbipd-win</span><br><span class="line">usbipd list</span><br></pre></td></tr></table></figure><p>在附加 USB 设备之前，必须使用命令 <code>usbipd bind</code> 来共享设备，从而允许它附加到 WSL。 这需要管理员权限。 选择要在 WSL 中使用的设备总线 ID，然后运行以下命令。 运行命令后，请再次使用命令 <code>usbipd list</code> 验证设备是否已共享。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usbipd bind <span class="literal">--busid</span> &lt;busid&gt;</span><br></pre></td></tr></table></figure><p>若要附加USB设备，请运行以下命令。（不再需要使用提升的管理员提示）确保WSL命令提示符处于打开状态，以使WSL2轻型VM保持活动状态。请注意，只要USB设备连接到WSL，Windows将无法使用它。附加到WSL后，任何作为WSL2运行的分发版本都可以使用USB设备。使用 <code>usbipd list</code> 验证设备是否已附加。在WSL提示符下，运行<code>lsusb</code>以验证USB设备是否已列出，并且可以使用Linux工具与之交互。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usbipd attach <span class="literal">--wsl</span> <span class="literal">--busid</span> &lt;busid&gt;</span><br></pre></td></tr></table></figure><p>打开Ubuntu（或首选的WSL命令行），使用以下命令列出附加的USB设备：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2024/02/15/3IhF6wLBKpYSOkq.png" alt="image.png" style="zoom:80%;" /><p><img src="https://s2.loli.net/2024/02/15/mFsLwY7QE4Rvhp3.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wsl </tag>
            
            <tag> 问题大全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DVXplorer事件相机入门</title>
      <link href="/posts/4528cc75.html"/>
      <url>/posts/4528cc75.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>DV官方文档：<a href="https://inivation.gitlab.io/dv/dv-docs/docs/getting-started.html#ubuntu-linux">Get Started · DV (inivation.gitlab.io)</a></p><p>DV事件相机的ROS包：<a href="https://github.com/uzh-rpg/rpg_dvs_ros">https://github.com/uzh-rpg/rpg_dvs_ros</a></p><p>事件相机的资源汇总：<a href="https://github.com/uzh-rpg/event-based_vision_resources">https://github.com/uzh-rpg/event-based_vision_resources</a></p></blockquote><h2 id="1-DV事件相机ROS包驱动程序安装">1.DV事件相机ROS包驱动程序安装</h2><p><strong>注意：将以下指令中提及的任何noetic替换为您当前ROS发行版的名称</strong></p><ul><li>安装ROS依赖</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-camera-info-manager</span><br><span class="line">sudo apt-get install ros-noetic-image-view</span><br></pre></td></tr></table></figure><ul><li>安装libcaer</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:inivation-ppa/inivation</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install libcaer-dev</span><br></pre></td></tr></table></figure><ul><li>安装catkin工具</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python3-catkin-tools</span><br></pre></td></tr></table></figure><ul><li>创建工作空间（指令参考：<a href="https://www.mgodmonkey.cn/posts/f1cb77fb.html">ROS指令大全</a>）</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> -p catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> catkin_ws</span><br><span class="line">catkin config --init --mkdirs --extend /opt/ros/noetic --merge-devel --cmake-args -DCMAKE_BUILD_TYPE=Release</span><br></pre></td></tr></table></figure><ul><li>克隆将用于生成 DVS/DAVIS 驱动程序包的包 （<a href="https://github.com/catkin/catkin_simple%EF%BC%89%EF%BC%9A%60catkin_simple%60">https://github.com/catkin/catkin_simple）：`catkin_simple`</a></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/catkin/catkin_simple.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/uzh-rpg/rpg_dvs_ros.git</span><br></pre></td></tr></table></figure><ul><li>编译包</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make <span class="comment"># 编译工作区内的所有功能包</span></span><br><span class="line"><span class="comment"># 或者选择性的编译下面的功能包</span></span><br><span class="line">catkin build dvs_renderer <span class="comment"># 渲染器（图片查看器）</span></span><br><span class="line">catkin build dvs_ros_driver <span class="comment"># DVS128</span></span><br><span class="line">catkin build davis_ros_driver <span class="comment"># DAVIS</span></span><br><span class="line">catkin build dvxplorer_ros_driver <span class="comment"># DVXplorer</span></span><br></pre></td></tr></table></figure><ul><li>更新环境</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure><h2 id="2-测试DV相机">2.测试DV相机</h2><p>连接DV相机并通过启动下面的<code>launch</code>来启动DV相机</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">roslaunch dvs_renderer dvs_mono.launch <span class="comment"># DVS128</span></span><br><span class="line">roslaunch dvs_renderer davis_mono.launch <span class="comment"># DAVIS</span></span><br><span class="line">roslaunch dvs_renderer dvxplorer_mono.launch <span class="comment"># DVXplorer</span></span><br></pre></td></tr></table></figure><p>我使用的是DVXplorer相机，主题切换到<code>/dvs_rendering</code>，并在镜头前晃动即可显示下面的画面</p><p><img src="https://s2.loli.net/2024/02/16/W8z4cTmKDEquGaN.png" alt="image.png"></p><h2 id="3-使用DV-GUI来启动DV相机（可选）">3.使用DV-GUI来启动DV相机（可选）</h2><p><strong>DV-GUI</strong>是<a href="https://inivation.com/buy">用于 iniVation <strong>动态视觉传感器 （DVS/DAVIS）</strong></a> 的软件，可以通过连接到DV相机并显示其输出。它也是官方软件开发工具包，用于为基于事件的相机编写应用软件。目前支持的操作系统有Win、Macos、Ubuntu、Fedora、Arch linux、树莓派等</p><ul><li><p><code>Windows</code></p><ul><li>下载并安装DV：<a class="btn-anzhiyu " href="https://release.inivation.com/gui/latest-win-stable"   title="前往下载"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>前往下载</span></a></li><li>Windows下DV软件有bug，需要修改系统显示语言为<strong>English</strong>，这步一定要弄，不然无法正常使用：<a href="https://support.microsoft.com/zh-cn/windows/%E5%9C%A8-windows-%E4%B8%AD%E7%AE%A1%E7%90%86%E6%98%BE%E7%A4%BA%E8%AF%AD%E8%A8%80%E8%AE%BE%E7%BD%AE-219f28b0-9881-cd4c-75ca-dba919c52321">在 Windows 中管理显示语言设置 - Microsoft 支持</a></li></ul></li><li><p><code>Ubuntu</code></p></li></ul><blockquote><p>我们在x86_64、arm64和armhf架构上为Focal （20.04 LTS） 和Jammy （22.04 LTS）提供了一个 <a href="https://launchpad.net/~inivation-ppa/+archive/ubuntu/inivation">PPA 存储库</a>。请注意，<code>dv-gui</code>仅在 x86_64上可用，<code>dv-runtime</code>在所有支持的架构上可用。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:inivation-ppa/inivation</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install dv-gui</span><br></pre></td></tr></table></figure><p>使用<code>dv-gui</code>指令来启动软件</p><img src="https://s2.loli.net/2024/02/16/8uTgrkLSoHPbsCX.png" alt="image-20240216212114411" style="zoom:67%;" /><blockquote><p><strong>注</strong>：如果设备无法识别，或者无法查找，请确保DV相机是否正常运行并连接到电脑上，尝试拔插USB来重启DV相机；如果你在WSL中使用<code>DV-GUI</code>，请确保USB设备能够在WSL中正常识别，WSL中添加USB设备参考教程：<a href="https://www.mgodmonkey.cn/posts/961f6207.html">wsl连接USB设备</a></p><p><img src="https://s2.loli.net/2024/02/16/8bK2F54u6mpecqJ.png" alt="image.png"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 事件相机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速动态视觉：使用事件和深度感应检测和跟踪动态对像</title>
      <link href="/posts/732e43d6.html"/>
      <url>/posts/732e43d6.html</url>
      
        <content type="html"><![CDATA[<div class="row">    <embed src="https://mybog.s3.bitiful.net/ros/word/FAST-Dynamic-Vision.pdf" width="100%" height="550" type="application/pdf"></div><div class="note info flat"><blockquote><p>相关论文：<a class="btn-anzhiyu " href="https://mybog.s3.bitiful.net/ros/word/FAST-Dynamic-Vision.pdf"   title="前往下载"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>前往下载</span></a></p><p>论文代码：<a href="https://github.com/ZJU-FAST-Lab/FAST-Dynamic-Vision">ZJU-FAST-Lab/FAST-Dynamic-Vision: Detecting and Tracking Dynamic Objects with Event and Depth Sensing (github.com)</a></p></blockquote></div><blockquote><h3 id="Basic-Information">Basic Information:</h3><ul><li>Title: FAST-Dynamic-Vision: Detection and Tracking Dynamic Objects with Event and Depth Sensing (FAST-Dynamic-Vision: 基于事件和深度感知的动态物体检测与跟踪)</li><li>Authors: Botao He, Haojia Li, Siyuan Wu, Dong Wang, Zhiwei Zhang, Qianli Dong, Chao Xu, Fei Gao</li><li>Affiliation: State Key Laboratory of Industrial Control Technology, Institute of Cyber-Systems and Control, Zhejiang University, Hangzhou, China (浙江大学工业控制技术国家重点实验室)</li><li>Keywords: aerial autonomy, unmanned aerial vehicles (UAVs), dynamic object detection, trajectory prediction, event camera, depth sensing</li><li>URLs: <a href="https://arxiv.org/abs/2103.05903v2">Paper</a>, <a href="https://github.com/ZJU-FAST-Lab/FAST-Dynamic-Vision">GitHub Code</a></li></ul><h3 id="论文简要">论文简要 :</h3><ul><li>本文提出了一种基于事件和深度感知的快速动态物体检测和跟踪系统，通过准确的自我运动补偿、高效的回归算法和异步融合事件和深度信息的优化方法，实现了低延迟和高精度的快速动态物体感知。通过大量实验验证了该系统的性能，并将代码开源以供相关研究使用。</li></ul><h3 id="背景信息">背景信息:</h3><ul><li>论文背景: 近年来，无人机的飞行自主性取得了很大的进展，使得无人机能够在复杂环境中灵活飞行，如矿山勘探等。然而，在动态环境中，特别是面对高速物体时的感知仍然是一个具有挑战性的问题，限制了无人机进一步应用的可能性。</li><li>过去方案: 传统的感知方法对于快速移动物体的感知存在延迟问题，无法满足实时性要求。事件相机作为一种具有微秒级时间分辨率的异步传感器，具有很大的潜力来解决这个问题。然而，目前还缺乏完整的感知系统来实现快速动态物体的检测和跟踪。</li><li>论文的Motivation: 鉴于上述问题，本文采用了事件相机作为感知传感器，并设计了一个完整的感知系统。首先，通过融合惯性测量单元（IMU）和深度数据，提出了一种先进的自我运动补偿算法，以减少由自身运动引起的背景事件。然后，通过回归算法实现了动态物体的检测。最后，通过异步融合事件和深度信息，提出了一种优化方法来预测物体的轨迹。通过大量实验验证了该系统的性能，为快速动态物体的避障提供了坚实的基础。</li></ul><h3 id="方法">方法:</h3><ul><li><p>a. 理论背景:</p><ul><li>本文介绍了一种用于检测和跟踪快速移动动态物体的感知系统，具有低延迟和高精度。</li></ul></li><li><p>b. 技术路线:</p><ul><li><p>本文提出了一种准确的自我运动补偿算法，考虑了旋转和平移运动。</p></li><li><p>使用事件相机设计了一种高效的动态物体检测回归算法。</p></li><li><p>提出了一种基于优化的方法，将事件和深度相机融合用于轨迹预测。</p></li></ul></li></ul><h3 id="结果">结果:</h3><ul><li><p>a. 详细的实验设置:</p><ul><li>在改装的飞行平台上进行了实验，该平台配备了iniVation DVXplorer动态视觉传感器和Intel Realsense D435i深度相机。</li><li>实验平台还包括运行Ubuntu 16.04的DJI Manifold2-C计算机和运行PX4飞行堆栈的CUAV Nora自动驾驶飞行控制器。</li></ul></li><li><p>b. 详细的实验结果:</p><ul><li>在UAV以超过5 m/s的速度飞行的高动态场景中评估了系统。</li><li>与单目方法相比，该系统在时间消耗和移动物体与背景之间的对比度方面表现出色。</li><li>将估计的轨迹精度与单目方法进行了比较，融合方法显示出更高的精度。</li></ul></li></ul><h3 id="总结">总结:</h3><p>这篇论文主要介绍了一种使用事件相机和深度相机进行快速移动物体检测和跟踪的方法。首先，通过计算事件相机中事件的平均时间戳，确定具有最大平均时间戳的区域，该区域代表图像平面上速度最快的区域。然后，引入迭代高斯拟合算法进行目标检测，获取目标的边界框。为了确保边界框的准确性，还提出了移动区域检索方法。接下来，使用卡尔曼滤波器在二维平面上跟踪目标的位置，并根据检测结果在深度图上进行目标分割。然后，通过最小化重投影残差来优化目标的轨迹。最后，为了验证估计结果，设计了一个场景，其中一个无人机自主检测并避开向其飞来的物体。论文的其余部分按照以下方式组织：第IV-A节介绍了高级自运动补偿算法；然后讨论了在该框架中使用的目标检测和跟踪方法（第IV-B节）；在第IV-C节中，执行了融合事件流和深度信息的三维轨迹估计器；第V节描述了实际飞行实验并与其他方法进行了比较。</p></blockquote><h2 id="1-演示视频">1.演示视频</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=672080863&bvid=BV11U4y1p7EF&cid=308804055&p=1&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>## 2.环境搭建<h3 id="2-1-实验平台">2.1 实验平台</h3><ol><li><strong>无人机平台</strong>：DJI Manifold2-C</li><li><strong>动态视觉传感器</strong>：IniVation DVXplorer</li><li><strong>深度相机</strong>：Intel Realsense D435i</li><li><strong>自动驾驶飞行控制器</strong>：CUAV Nora Autopilot Flight Controller</li><li><strong>无人机框架</strong>：DJI Frame Wheel F450</li></ol><h3 id="2-2-实验环境">2.2 实验环境</h3><ol><li>Ubuntu 20.04</li><li>ROS neotic</li><li>Ceres Solver：【[安装教程](<a href="http://ceres-solver.org/installation.html">Installation — Ceres Solver (ceres-solver.org)</a>)】</li><li>DV-ROS驱动：<a href="https://gitlab.com/inivation/dv/dv-ros">iniVation AG / dv-core / dv-ros · GitLab</a></li><li>OpenCV&amp;Open_Contrib：【<a href="https://docs.opencv.org/4.8.0/d7/d9f/tutorial_linux_install.html">安装教程</a>】【<a href="https://blog.csdn.net/qq_41035283/article/details/120179578">OpenCV：快速高效解决cmake时的ippicv、face_landmark.dat等文件下载失败问题_opencv tbb下载失败_RuiH.AI的博客-CSDN博客</a>】</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无人机基于NOKOV动捕系统获取位置数据</title>
      <link href="/posts/282d4d3d.html"/>
      <url>/posts/282d4d3d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境</p><ul><li><p>机载电脑</p><ul><li>系统：<strong>Ubuntu20.04 LST</strong></li><li>ROS1：<strong>noetic</strong></li><li>飞控：<strong>PX4</strong></li><li><strong>mavros</strong></li><li><strong>QGroundControl</strong></li></ul></li><li><p>动捕系统电脑</p><ul><li>动捕配套软件：<strong>XING-NOKOV</strong></li></ul></li></ul><p><strong>关于系统、PX4、mavros、QGroundContorl等安装参考下面两篇文章：</strong></p><ul><li><a href="https://www.mgodmonkey.cn/posts/eb82f52e.html">从0入门自主空中机器人-3-【环境与常用软件安装】 | MGodmonkeyの世界</a></li><li><a href="https://www.mgodmonkey.cn/posts/cfe889db.html">从0入门自主空中机器人-4-【PX4与Gazebo入门】 | MGodmonkeyの世界</a></li></ul></blockquote><h2 id="1-准备工作">1. 准备工作</h2><h3 id="1-1-动捕系统电脑">1.1 动捕系统电脑</h3><blockquote><p>打开动捕系统软件<strong>XING-NOKOV</strong>，进行如下操作</p></blockquote><ul><li>标定与贴点：<a href="https://appmnhim1019110.h5.xiaoeknow.com/p/course/video/v_61a6d4dfe4b0cc47c3c0eb69?type=2">数据采集前准备：标定与贴点 (xiaoeknow.com)</a></li><li>刚体创建：锁帧-&gt;shift键框选5个点-&gt;右键创建刚体，名称: <strong>Tracker0</strong></li><li>网络拓扑结构</li></ul><img src="https://s2.loli.net/2023/10/03/4V56flYRTGotDsP.png" alt="image-20230815110852790" style="zoom: 80%;" /><h3 id="1-2-机载电脑">1.2 机载电脑</h3><blockquote><p>通过<strong>ssh</strong>等工具连接上机载电脑，进行如下操作</p></blockquote><ul><li>打开<strong>QGroundContorl</strong>连接上无人机飞控，并进行<strong>PX4</strong>的配置</li></ul><blockquote><p><a href="https://docs.px4.io/master/zh/advanced_config/parameter_reference.html#EKF2_AID_MASK">EKF2_AID_MASK</a> = 24</p><p><a href="https://docs.px4.io/master/zh/advanced_config/parameter_reference.html#EKF2_HGT_MODE">EKF2_HGT_MODE</a> = 2</p></blockquote><img src="https://s2.loli.net/2023/10/03/wOWbxa1vqILhuP2.png" alt="image-20230815110304074" style="zoom: 80%;" /><img src="https://s2.loli.net/2023/10/03/GoVcaJCmhbNDMSW.png" alt="image-20230815110559457" style="zoom: 80%;" /><blockquote><p><strong>PX4</strong>配置需要保存后重启<strong>QGroundContorl</strong>后才能生效</p></blockquote><ul><li>安装<strong>VRPN</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-vrpn-client-ros<span class="comment"># 这里的noetic要根据机载电脑的ros版本进行修改</span></span><br></pre></td></tr></table></figure><h2 id="2-操作步骤">2. 操作步骤</h2><blockquote><p>公众号视频参考：<a href="https://appmnhim1019110.h5.xiaoeknow.com/p/course/video/v_62b2ea28e4b07bd2d7b14382?type=2">PX4系统配置与操作演示 (xiaoeknow.com)</a></p></blockquote><ol><li><p>通过<strong>VRPN</strong>将动捕数据广播出去</p><p>打开动捕系统软件<strong>XING-NOKOV</strong>-&gt;<strong>Setting</strong>-&gt;<strong>勾选VRPN Enabled，并选中刚体Tracker0</strong>-&gt;<strong>数据单位设置为meters</strong></p></li><li><p>验证<strong>机载电脑</strong>是否能获取动捕数据，这里的<strong>10.1.1.198</strong>为动捕电脑<strong>IP</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch vrpn_client_ros sample.launch server:=10.1.1.198</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果未能获取到数据，先通过<code>ping 10.1.1.198</code>来检查是否存在网络问题</p></blockquote><ol start="3"><li><strong>机载电脑</strong>上运行下面的命令来将动捕数据发送给<strong>地面站QGroundContorl</strong>，这里的<strong>10.1.1.150</strong>为运行<strong>QGroundContorl</strong>主机的<strong>IP地址</strong>，一般为自己笔记本电脑的<strong>IP地址</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch mavros px4.launch gcs_url:=<span class="string">&quot;udp://@10.1.1.150:14550&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><strong>机载电脑</strong>上运行下面的命令来实现话题转发</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun topic_tools relay /vrpn_client_node/Tracker1/pose /mavros/vision_pose/pose</span><br></pre></td></tr></table></figure><ol start="5"><li><p>验证是否正常</p><ul><li>查看动捕数据是否显示：<strong>AnalyzeTools</strong> -&gt; <strong>MAVLINK Inspector</strong> -&gt; <strong>VISION_POSITION_ESTIMATE/ODOMETRY</strong></li></ul><img src="https://s2.loli.net/2023/10/03/G19cZar7JYCUF8b.png" alt="image-20230815153626076" style="zoom: 80%;" /><ul><li>查看<strong>QGroundContorl</strong>中飞行模式是否能切换为<strong>定点模式</strong></li></ul></li></ol><blockquote><p>参考：</p><ul><li><p>PX4官网：<a href="https://www.bitcraze.io/documentation/tutorials/"> 利用视觉或运动捕捉系统进行位置估计</a></p></li><li><p>Nokov应用相关博客：</p><ul><li><p><a href="https://crazyswarm.readthedocs.io/en/latest/index.html">Pixhawk+PX4+NOKOV+C++</a><a href="https://crazyswarm.readthedocs.io/en/latest/index.html">SDK动捕飞控方案</a></p></li><li><p><a href="https://blog.csdn.net/MocapLeader/article/details/125095669?spm=1001.2014.3001.5501">Pixhawk+PX4+NOKOV+VRPN动捕飞控方案</a></p></li></ul></li><li><p>NOKOV github：<a href="https://github.com/NOKOV-MOCAP">https://github.com/NOKOV-MOCAP</a></p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 知识分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-4-【PX4与Gazebo入门】</title>
      <link href="/posts/cfe889db.html"/>
      <url>/posts/cfe889db.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前言:</strong> 从上一篇的文章 <a href="https://www.mgodmonkey.cn/posts/eb82f52e.html">从0入门自主空中机器人-3-【环境与常用软件安装】 | MGodmonkeyの世界</a> 中我们的机载电脑已经安装了系统和常用的软件，这一篇文章中我们入门一下无人机常用的开源飞控<strong>PX4</strong>，以及<strong>ROS</strong>中无人机的仿真</p></blockquote><h2 id="1-PX4的安装">1. PX4的安装</h2><h3 id="1-1-PX4固件代码的下载与编译">1.1 PX4固件代码的下载与编译</h3><blockquote><p><strong>注：推荐使用已经配置好的PX4固件包，PX4版本==1.12：<a href="https://pan.quark.cn/s/9964d20e6c40">https://pan.quark.cn/s/9964d20e6c40</a> 提取码：g3ij</strong></p></blockquote><ul><li><s>通过github下载PX4代码（下载慢时可以找一些github的镜像网站）</s></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PX4/PX4-Autopilot.git --recursive</span><br></pre></td></tr></table></figure><ul><li>安装必要的依赖</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install protobuf-compiler libeigen3-dev libopencv-dev -y</span><br><span class="line"></span><br><span class="line">bash ./PX4-Autopilot/Tools/setup/ubuntu.sh</span><br></pre></td></tr></table></figure><blockquote><p>如果安装PX4的环境比较纯净，比如说<strong>刚装的Ubuntu系统，运行bash脚本过程中会报好几次错</strong>！因为他需要安装的依赖包比较多。解决方法其实也很简单，即 <strong>【确定导致报错的依赖包名，网上检索安装这个依赖包的方法】</strong>。我们只需要将导致报错的依赖包都安装好了，运行.sh文件时就能会跳过他们。</p></blockquote><p>在安装过程中确认并通过所有的提示，即出现以下提示，完成后重新启动计算机。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Relogin or reboot computer before attempting to build NuttX targets</span><br></pre></td></tr></table></figure><blockquote><p>如果在下载或编译过程中遇到任何问题都可以参考下面的博客：</p><ul><li><a href="https://blog.csdn.net/Iamsonice/article/details/120420066?spm=1001.2014.3001.5502">Ubuntu20.04或18.04下PX4（pixhawk）源码编译环境配置教程，及构建代码各种错误解决办法_ubuntu20安装px4_Iamsonice的博客-CSDN博客</a></li><li><a href="https://zhuanlan.zhihu.com/p/438147439">PX4固件下载及环境搭建小记（Ubuntu 18.04） - 知乎 (zhihu.com)</a></li></ul></blockquote><ul><li>jmavsim仿真环境编译</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> PX4-Autopilot   </span><br><span class="line">make px4_fmu-v3_default</span><br><span class="line">make px4_sitl jmavsim <span class="comment">#jmavsim仿真环境</span></span><br></pre></td></tr></table></figure><p>编译结束会自动启动仿真，出现一下画面则说明编译正常</p><img src="https://s2.loli.net/2023/10/03/FkoJaVUWDzgyZ7w.png" alt="image-20230811151646569" style="zoom:80%;" /><ul><li>gazebo仿真编译</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make px4_sitl gazebo </span><br></pre></td></tr></table></figure><p>出现gazebo界面代表成功</p><img src="https://s2.loli.net/2023/10/03/fzrQvZhuCaUo24m.png" alt="image-20230811154610450" style="zoom:50%;" /><h2 id="2-Gazebo仿真">2. Gazebo仿真</h2><blockquote><p>仿真一般用于验证算法，比较吃性能，机载电脑上运行仿真帧率会比较低，因此仿真推荐在性能比较好的电脑上运行，推荐使用<strong>WSL2</strong>或者<strong>虚拟机</strong></p></blockquote><ul><li>向<code>~/.bashrc</code>中添加launch启动路径</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 文件夹的路径或有出入，以自己的为准进行修改</span></span><br><span class="line"><span class="built_in">source</span> ~/PX4-Autopilot/Tools/setup_gazebo.bash ~/PX4-Autopilot/ ~/PX4-Autopilot/build/px4_sitl_default</span><br><span class="line"><span class="built_in">export</span> ROS_PACKAGE_PATH=<span class="variable">$ROS_PACKAGE_PATH</span>:~/PX4-Autopilot</span><br><span class="line"><span class="built_in">export</span> ROS_PACKAGE_PATH=<span class="variable">$ROS_PACKAGE_PATH</span>:~/PX4-Autopilot/Tools/sitl_gazebo</span><br></pre></td></tr></table></figure><p>添加成功后执行<code>source ~/.bashrc</code>来生效脚本</p><ul><li>测试</li></ul><p>可以通过下面这几条命令来测试</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行结果和 make px4_sitl gazebo一样</span></span><br><span class="line">roslaunch px4 mavros_posix_sitl.launch</span><br><span class="line"><span class="comment"># 或者下面这个launch，结果场景更丰富</span></span><br><span class="line">roslaunch px4 fast_test.launch</span><br></pre></td></tr></table></figure><h2 id="3-QGC地面站">3. QGC地面站</h2><ul><li>安装QGC地面站，可以在下面的网址下载</li></ul><blockquote><p><a href="https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html">https://docs.qgroundcontrol.com/master/en/qgc-user-guide/getting_started/download_and_install.html</a></p></blockquote><ul><li>安装依赖</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G dialout <span class="variable">$USER</span></span><br><span class="line">sudo apt-get remove modemmanager -y</span><br><span class="line">sudo apt install gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl -y</span><br><span class="line">sudo apt install libfuse2 -y</span><br><span class="line">sudo apt install libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor0 -y</span><br></pre></td></tr></table></figure><blockquote><p>注销并再次登录以启用对用户权限的更改</p></blockquote><ul><li>选择 Appimage格式下载：<a href="https://d176tv9ibo4jno.cloudfront.net/latest/QGroundControl.AppImage">下载地址</a></li><li>添加权限并启动</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ./QGroundControl.AppImage</span><br><span class="line">./QGroundControl.AppImage</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/10/03/RtLNCm71qybSZXB.png" alt="image-20230811163810309"></p><h2 id="4-MOVROS的基本使用">4. MOVROS的基本使用</h2><p>使用<strong>MOVROS</strong>来实现<strong>PX4</strong>飞控无人机的自主启动、悬停和定点飞行</p><p><video width="100%" autoplay="autoplay" controls="controls" __idm_id__="1105922"><source src="https://docs.px4.io/main/assets/media/gazebo_offboard.d8b1cf73.webm" type="video/webm"></video></p><ol><li>创建工作空间以及功能包</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line">catkin_init_workspace</span><br><span class="line">catkin_create_pkg offboard geometry_msgs mavros_msgs std_msgs rospy roscpp</span><br></pre></td></tr></table></figure><ol start="2"><li>创建文件<code>offboard/src/offb_node.cpp</code>并添加下面的代码</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @file offb_node.cpp</span><br><span class="line"> * @brief Offboard control example node, written with MAVROS version 0.19.x, PX4 Pro Flight</span><br><span class="line"> * Stack and tested <span class="keyword">in</span> Gazebo Classic SITL</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;ros/ros.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;geometry_msgs/PoseStamped.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;mavros_msgs/CommandBool.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;mavros_msgs/SetMode.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;mavros_msgs/State.h&gt;</span></span><br><span class="line"></span><br><span class="line">mavros_msgs::State current_state;</span><br><span class="line">void state_cb(const mavros_msgs::State::ConstPtr&amp; msg)&#123;</span><br><span class="line">    current_state = *msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    ros::init(argc, argv, <span class="string">&quot;offb_node&quot;</span>);</span><br><span class="line">    ros::NodeHandle nh;</span><br><span class="line"></span><br><span class="line">    ros::Subscriber state_sub = nh.subscribe&lt;mavros_msgs::State&gt;</span><br><span class="line">            (<span class="string">&quot;mavros/state&quot;</span>, 10, state_cb);</span><br><span class="line">    ros::Publisher local_pos_pub = nh.advertise&lt;geometry_msgs::PoseStamped&gt;</span><br><span class="line">            (<span class="string">&quot;mavros/setpoint_position/local&quot;</span>, 10);</span><br><span class="line">    ros::ServiceClient arming_client = nh.serviceClient&lt;mavros_msgs::CommandBool&gt;</span><br><span class="line">            (<span class="string">&quot;mavros/cmd/arming&quot;</span>);</span><br><span class="line">    ros::ServiceClient set_mode_client = nh.serviceClient&lt;mavros_msgs::SetMode&gt;</span><br><span class="line">            (<span class="string">&quot;mavros/set_mode&quot;</span>);</span><br><span class="line"></span><br><span class="line">    //the setpoint publishing rate MUST be faster than 2Hz</span><br><span class="line">    ros::Rate rate(20.0);</span><br><span class="line"></span><br><span class="line">    // <span class="built_in">wait</span> <span class="keyword">for</span> FCU connection</span><br><span class="line">    <span class="keyword">while</span>(ros::ok() &amp;&amp; !current_state.connected)&#123;</span><br><span class="line">        ros::spinOnce();</span><br><span class="line">        rate.sleep();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    geometry_msgs::PoseStamped pose;</span><br><span class="line">    pose.pose.position.x = 0;</span><br><span class="line">    pose.pose.position.y = 0;</span><br><span class="line">    pose.pose.position.z = 2;</span><br><span class="line"></span><br><span class="line">    //send a few setpoints before starting</span><br><span class="line">    <span class="keyword">for</span>(int i = 100; ros::ok() &amp;&amp; i &gt; 0; --i)&#123;</span><br><span class="line">        local_pos_pub.publish(pose);</span><br><span class="line">        ros::spinOnce();</span><br><span class="line">        rate.sleep();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mavros_msgs::SetMode offb_set_mode;</span><br><span class="line">    offb_set_mode.request.custom_mode = <span class="string">&quot;OFFBOARD&quot;</span>;</span><br><span class="line"></span><br><span class="line">    mavros_msgs::CommandBool arm_cmd;</span><br><span class="line">    arm_cmd.request.value = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    ros::Time last_request = ros::Time::now();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(ros::ok())&#123;</span><br><span class="line">        <span class="keyword">if</span>( current_state.mode != <span class="string">&quot;OFFBOARD&quot;</span> &amp;&amp;</span><br><span class="line">            (ros::Time::now() - last_request &gt; ros::Duration(5.0)))&#123;</span><br><span class="line">            <span class="keyword">if</span>( set_mode_client.call(offb_set_mode) &amp;&amp;</span><br><span class="line">                offb_set_mode.response.mode_sent)&#123;</span><br><span class="line">                ROS_INFO(<span class="string">&quot;Offboard enabled&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            last_request = ros::Time::now();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>( !current_state.armed &amp;&amp;</span><br><span class="line">                (ros::Time::now() - last_request &gt; ros::Duration(5.0)))&#123;</span><br><span class="line">                <span class="keyword">if</span>( arming_client.call(arm_cmd) &amp;&amp;</span><br><span class="line">                    arm_cmd.response.success)&#123;</span><br><span class="line">                    ROS_INFO(<span class="string">&quot;Vehicle armed&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                last_request = ros::Time::now();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        local_pos_pub.publish(pose);</span><br><span class="line"></span><br><span class="line">        ros::spinOnce();</span><br><span class="line">        rate.sleep();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>代码解释</strong>或者<strong>python版本</strong>见：<a href="https://docs.px4.io/main/zh/ros/mavros_offboard_cpp.html">MAVROS Offboard 控制示例 (C++) | PX4 自动驾驶用户指南</a></p></blockquote><ol start="3"><li>修改<strong>CMakeLists.txt</strong>，添加如下两行</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">add_executable(offboard src/offb_node.cpp)</span><br><span class="line">target_link_libraries(offboard <span class="variable">$&#123;catkin_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure><ol start="4"><li>编译</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line"><span class="built_in">source</span> devel/setup.sh</span><br></pre></td></tr></table></figure><ol start="5"><li>启动无人机仿真并运行节点</li></ol><p>在一个终端中运行下面指令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch px4 fast_test.launch <span class="comment"># 启动仿真</span></span><br></pre></td></tr></table></figure><p>在另一个终端中启动节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun offboard offboard</span><br></pre></td></tr></table></figure><blockquote><p>更多<strong>mavros</strong>的使用以及内置的消息、服务等使用详见官方文档：<a href="http://wiki.ros.org/mavros/">mavros - ROS Wiki</a></p></blockquote><blockquote><p><strong>注：gazebo仿真时可能遇到的问题</strong></p><ol><li><strong>无人无法控制时的BUG</strong></li></ol><p>gazebo仿真终端显示如下并不断重复</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMD: Unexpected <span class="built_in">command</span> 176, result 0</span><br><span class="line">INFO [commander] Failsafe mode deactivated</span><br><span class="line">INFO [commander] Failsafe mode activated</span><br></pre></td></tr></table></figure><p>且offboard节点端口不断出现如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ INFO] [1705027176.310554463, 727.708000000]: Offboard enabled</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/01/12/I8xSiO7z9fbYdrv.png" alt=""></p><p><strong>解决办法：</strong></p><ul><li><p>在前面的三个终端运行的时候，打开QGC地面站，在参数中搜索<code>COM_RCL_EXCEPT</code></p></li><li><p>将<code>COM_RCL_EXCEPT</code>参数改为<code>4</code>并保存</p></li></ul><img src="https://s2.loli.net/2024/01/12/31SIkYCRsGbg69F.png" style="zoom: 80%;" /><p><strong>参考博客：</strong></p><p><a href="https://blog.csdn.net/weixin_45031928/article/details/135142557">【PX4-AutoPilot教程-Offboard】MAVROS功能包控制无人机进入offboard模式飞行官方例程（C++实现）_mavros px4 实例-CSDN博客</a></p><ol start="2"><li><strong>启动single_vehicle_spawn_ssdf.launch时报错</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RLException: <span class="keyword">while</span> processing /home/laohanba/PX4-Autopilot/launch/single_vehicle_spawn_ssdf.launch:</span><br><span class="line">Invalid &lt;param&gt; tag: Cannot load <span class="built_in">command</span> parameter [model_description]: no such <span class="built_in">command</span> [[<span class="string">&#x27;xmlstarlet&#x27;</span>, <span class="string">&#x27;ed&#x27;</span>, <span class="string">&#x27;-d&#x27;</span>, <span class="string">&#x27;//plugin[@name=&quot;mavlink_interface&quot;]/mavlink_tcp_port&#x27;</span>, <span class="string">&#x27;-s&#x27;</span>, <span class="string">&#x27;//plugin[@name=&quot;mavlink_interface&quot;]&#x27;</span>, <span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;elem&#x27;</span>, <span class="string">&#x27;-n&#x27;</span>, <span class="string">&#x27;mavlink_tcp_port&#x27;</span>, <span class="string">&#x27;-v&#x27;</span>, <span class="string">&#x27;4560&#x27;</span>, <span class="string">&#x27;/home/laohanba/PX4-Autopilot/Tools/sitl_gazebo/models/iris_D435i/iris_D435i.sdf&#x27;</span>]]. </span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xmlstarlet</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>参考：</strong></p><ul><li><a href="https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html">Ubuntu LTS/Debian Linux 的开发环境 | PX4 自动驾驶用户指南</a></li><li><a href="https://docs.qq.com/doc/DZlNOVnhaV0hkaktL">PX4固件+mavros+QGC地面站安装 (qq.com)</a></li><li><a href="https://blog.csdn.net/qq_38768959/article/details/106041494">PX4从放弃到精通（二）：ubuntu18.04配置px4编译环境及mavros环境_超维空间科技的博客-CSDN博客</a></li><li><a href="https://www.ncnynl.com/archives/201709/2009.html">PX4开发指南-2.2.2.Linux - 创客智造/爱折腾智能机器人 (ncnynl.com)</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-2-2【无人机硬件选型-PX4篇】</title>
      <link href="/posts/39efaa44.html"/>
      <url>/posts/39efaa44.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-常用资料以及官方网站">1. 常用资料以及官方网站</h2><ul><li><p>无人机飞控PX4用户使用手册（无人机基本设置、地面站使用教程、软硬件搭建等）：<a href="https://docs.px4.io/main/en/">https://docs.px4.io/main/en/</a></p></li><li><p>PX4固件开源地址：<a href="https://github.com/PX4/PX4-Autopilot">https://github.com/PX4/PX4-Autopilot</a></p></li><li><p>飞控硬件、数传模块、GPS、分电板等—holybro官网：<a href="http://www.holybro.com/">http://www.holybro.com/</a></p></li><li><p>无人机动力系统–TMotor官网：<a href="https://uav-cn.tmotor.com/">https://uav-cn.tmotor.com/</a></p></li><li><p>无人机在线课程、开源项目—阿木实验室：<a href="https://amovlab.com/">https://amovlab.com/</a></p></li></ul><h2 id="2-机架推荐-可二次开发整机无人机">2. 机架推荐/可二次开发整机无人机</h2><ul><li><p>Holybro无人机（整机无人机以及无人机机架散件）：<a href="https://shop.holybro.com/c/development-kit_0502/2.html">【前往】</a></p></li><li><p>阿木实验室无人机：<a href="https://amovlab.taobao.com/category-1552064747.htm?spm=a1z10.5-c-s.0.0.37db7005JWCIiQ&amp;search=y&amp;parentCatId=1507493272&amp;parentCatName=%BF%AA%D4%B4%CF%EE%C4%BF%D3%EB%D5%FB%BB%FA&amp;catName=PX4%CF%B5%C1%D0">【前往】</a></p></li><li><p>FPV梦工厂（机架，专门为FPV竞赛设计）：<a href="https://shop67894743.taobao.com/?spm=a230r.7195193.1997079397.2.656a645dRmmwor">【前往】</a></p></li></ul><h2 id="3-无人机各个重要模块功能及选型">3. 无人机各个重要模块功能及选型</h2><p><img src="https://s2.loli.net/2023/10/03/ACUnrlyWkYcb5sT.png" alt="image-20230810152216490"></p><h3 id="3-1-航模电池">3.1 航模电池</h3><p><img src="https://s2.loli.net/2023/10/03/2sDSLa5M7NF438H.png" alt="image-20230810152716271"></p><ul><li>主要的参数及选型推荐</li></ul><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th><th style="text-align:center">推荐值</th></tr></thead><tbody><tr><td style="text-align:center">容量</td><td style="text-align:center">电池容量，表示电池可以放出的电量多少，以mh为单位</td><td style="text-align:center">5000mAH</td></tr><tr><td style="text-align:center">电芯节数</td><td style="text-align:center">电芯数量，决定了电池输出电压大小。通常有3S,4S,6S等，如4S电池代表一块电池内有4块电芯，4块电芯串联输出，每个电芯最高输出电压4.2V,则该电池最终最大输出16.8V</td><td style="text-align:center">4S</td></tr><tr><td style="text-align:center">放电倍率</td><td style="text-align:center">电池的倍率特性是指的电池的充放电性能，倍率越高的能够承受的放电电流就越大，倍率的单位是C</td><td style="text-align:center">50c/60c</td></tr><tr><td style="text-align:center">接口</td><td style="text-align:center">电池输出接口，通常有XT60,XT40,T插等</td><td style="text-align:center">XT60</td></tr></tbody></table><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.22.d2f349b7KJtvRq&amp;id=681311943685&amp;ns=1&amp;abbucket=9#detail">【前往】</a></p></blockquote><h3 id="3-2-飞控">3.2 飞控</h3><p><img src="https://s2.loli.net/2023/10/03/iKnzoFpG6ZfcjXq.png" alt="image-20230810153009268"></p><ul><li>介绍</li></ul><blockquote><p>**飞控：**飞行控制器，用于飞行器底层控制，如无人机姿态、高度以及位置等。同时也可以连接传感器以及其它模块，如GPS、遥控器接收机以及数传等。</p></blockquote><ul><li><p>选型推荐</p><ul><li>型号：<strong>pixhawk 6C</strong></li><li>使用说明：<a href="https://docs.px4.io/main/en/">【前往】</a></li><li>整体介绍及接口说明：<a href="https://docs.holybro.com/autopilot/pixhawk-6c/overview">【前往】</a></li></ul><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.1a6b466cVDqIXL&amp;id=679030751224&amp;ns=1&amp;abbucket=9#detail">【前往】</a></p></blockquote></li></ul><h3 id="3-3-分电板">3.3 分电板</h3><p><img src="https://s2.loli.net/2023/10/03/Qty1glEGfW3LvYx.png" alt="image-20230810153520742"></p><ul><li>介绍</li></ul><blockquote><p>**分电板：**分电板的作用是将电池供电分配给四个电调，并且将飞控的控制信号传递给电调。</p></blockquote><ul><li><p>选型推荐</p><ul><li>型号：<strong>PM07</strong></li><li>使用说明：<a href="https://docs.holybro.com/power-module-and-pdb/power-module/pm07-quick-start-guide">【前往】</a></li></ul><blockquote><p>推荐淘宝链接（和飞控一起购买）：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.1a6b466cVDqIXL&amp;id=679030751224&amp;ns=1&amp;abbucket=9#detail">【前往】</a></p></blockquote></li></ul><h3 id="3-4-电调">3.4 电调</h3><ul><li>介绍</li></ul><blockquote><p>**电调：**接收控制指令并控制电机旋转。</p></blockquote><ul><li>说明</li></ul><blockquote><p>电调有分体式和四合一两种型号，四合一顾名思义就是将四个分体式电调整合在一块PCB板上，四合一电调常用于穿越机上，这里所组装的四旋翼无人机推荐使用分体式电调。</p></blockquote><p><img src="https://s2.loli.net/2023/10/03/6w43rKXPpZnMT1i.png" alt="image-20230810153806629"></p><p>选型推荐</p><ul><li><p>型号：<strong>F45A</strong></p></li><li><p>使用说明：<a href="https://uav-cn.tmotor.com/html/2018/ESC_0410/76.html">【前往】</a></p><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?spm=a21n57.1.0.0.3806523cSZCB47&amp;id=543180212841&amp;ns=1&amp;abbucket=5#detail">【前往】</a></p></blockquote></li></ul><p><img src="https://s2.loli.net/2023/10/03/aYVXKoPRJfwNi5g.png" alt="image-20230810154350255"></p><ul><li><p>选型推荐</p><ul><li><p>型号：<strong>F55A PRO 6S 4IN1</strong></p></li><li><p>使用说明：<a href="https://uav-cn.tmotor.com/html/2018/ESC_1219/187.html">【前往】</a></p></li></ul><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?spm=a21n57.1.0.0.3806523cSZCB47&amp;id=719387596312&amp;ns=1&amp;abbucket=5#detail">【T-MOTOR 老虎动力】穿越机 航模电调 2代 F55A PROⅡ 6S 4IN1-淘宝网 (taobao.com)</a></p></blockquote></li></ul><h3 id="3-5-电机">3.5 电机</h3><p><img src="https://s2.loli.net/2023/10/03/kXLMx5Uf8neAVDJ.png" alt="image-20230810155304636"></p><ul><li><p>选型推荐</p><ul><li><p>型号：<strong>TmotorPro KV2200</strong></p></li><li><p>使用说明：<a href="https://uav-cn.tmotor.com/html/2018/Motor_0815/184.html">【前往】</a></p></li></ul><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.7c4d2af30pLyz1&amp;id=593544036760&amp;ns=1&amp;abbucket=9#detail">【前往】</a></p></blockquote></li></ul><h3 id="3-6-螺旋桨">3.6 螺旋桨</h3><p>四旋翼飞机螺旋桨安装方向如下图所示，在安装时，螺旋桨厚的一面在旋转方向的前方：</p><p><img src="https://s2.loli.net/2023/10/03/JDNCqiOnS95HsTr.png" alt="image-20230810155624729"></p><h3 id="3-7-数传">3.7 数传</h3><p><img src="https://s2.loli.net/2023/10/03/JPCIDt38Up4kAsO.png" alt="image-20230810155848145"></p><ul><li>介绍</li></ul><blockquote><p>**数传：**用于无人机和地面站（ <a href="http://qgroundcontrol.com/">http://qgroundcontrol.com/</a> ）进行实时通讯，在飞行时传递无人机电量、飞行姿态、GPS位置等信息。</p></blockquote><ul><li><p>选型推荐</p><ul><li><p>型号：<strong>SiK Telemetry Radio V3</strong></p></li><li><p>使用说明：<a href="https://docs.holybro.com/telemetry-radio/sik-telemetry-radio-v3">【前往】</a></p></li></ul></li></ul><blockquote><p>推荐淘宝链接：<a href="https://detail.tmall.com/item.htm?abbucket=9&amp;id=640015018502&amp;ns=1&amp;spm=a230r.1.14.44.275e1f72h2RcGZ">【前往】</a></p></blockquote><h3 id="3-8-遥控器及接收机">3.8 遥控器及接收机</h3><p><img src="https://s2.loli.net/2023/10/03/muBpyqskDOv3rYe.png" alt="image-20230810155932730"></p><ul><li>选型推荐<ul><li>型号：<strong>天地飞ET16S</strong></li></ul></li></ul><blockquote><p>推荐淘宝链接：<a href="https://item.taobao.com/item.htm?id=585674375898&amp;ali_refid=a3_430620_1006:1105273393:N:t7Nl5roNKstJRQdsBQHAyLeFzSCWa1Ia:8cc6b1226529ac8b9b5457799c0ef9e6&amp;ali_trackid=1_8cc6b1226529ac8b9b5457799c0ef9e6&amp;spm=a230r.1.14.1#detail">【前往】</a></p></blockquote><h3 id="3-9-机载电脑（可选）">3.9 机载电脑（可选）</h3><blockquote><p>Intel NUC(推荐)、Jetson Tx2，树莓派。用于无人机感知、路径规划等算法运算，向飞控发送指令。</p></blockquote><h2 id="4-其它无人机散件及选型">4. 其它无人机散件及选型</h2><ul><li><p>桨保：保护桨叶在碰撞时不会折坏。</p><ul><li>参考：<a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537/tb.1997196601.90.18807484bPqSeX&amp;id=550135021616">【淘宝链接】</a></li></ul></li><li><p>尼龙柱：用于固定机载电脑及其它模块。</p><ul><li>参考：<a href="https://detail.tmall.com/item_o.htm?id=535423340297">【淘宝链接】</a></li></ul></li><li><p>铝柱：用于连接无人机上下两层。</p><ul><li>参考：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.122.525111f9XQ2VUi&amp;id=693131457335&amp;ns=1&amp;abbucket=9#detail">【淘宝链接】</a></li></ul></li><li><p>减震球：用于降低在飞行时飞控模块的震动频率，保护其中的IMU。</p><ul><li>参考：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.163.28084a198uQJEJ&amp;id=584534547675&amp;ns=1&amp;abbucket=9#detail">【淘宝链接】</a></li></ul></li><li><p>锂电池充电器：</p><ul><li>参考：<a href="https://item.taobao.com/item.htm?spm=a230r.1.14.163.28084a198uQJEJ&amp;id=584534547675&amp;ns=1&amp;abbucket=9#detail">【淘宝链接】</a></li></ul></li><li><p>电池绑带：</p><ul><li>参考：<a href="https://detail.tmall.com/item.htm?abbucket=9&amp;id=696500113695&amp;ns=1&amp;skuId=5114520207331&amp;spm=a230r.1.14.167.12822e1fkSLylp">【淘宝链接】</a></li></ul></li><li><p>强力背胶魔术贴：用于固定电池。</p><ul><li>参考：<a href="https://detail.tmall.com/item.htm?abbucket=9&amp;id=696500113695&amp;ns=1&amp;skuId=5114520207331&amp;spm=a230r.1.14.167.12822e1fkSLylp">【淘宝链接】</a></li></ul></li><li><p>稳压模块：用于机载电脑和部分传感器的供电。</p><ul><li>参考：<a href="https://detail.tmall.com/item.htm?ali_refid=a3_430582_1006:1231260087:N:DZVEEzu0WOqQc0192VtMcLhdsOn917cy:64422440d684dfa33c08760a8e57cc37&amp;ali_trackid=1_64422440d684dfa33c08760a8e57cc37&amp;id=601488488830&amp;spm=a230r.1.14.1">【淘宝链接】</a></li></ul></li></ul><div class="note info flat"><p>本文参考自微信公众号：<a href="https://mp.weixin.qq.com/s/b5BIYmxXTzkaapnkMK6P8w">【交流分享】无人机资料汇总及选型推荐–PX4系列 (qq.com)</a></p></div>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-3-【环境与常用软件安装】</title>
      <link href="/posts/eb82f52e.html"/>
      <url>/posts/eb82f52e.html</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="关于本课程：">关于本课程：</h2><p>本次课程是一套面向对<strong>自主空中机器人</strong>感兴趣的学生、爱好者、相关从业人员的免费课程，包含了从<strong>硬件组装</strong>、<strong>机载电脑环境设置</strong>、<strong>代码部署</strong>、实机实验等全套详细流程，带你从0开始，组装属于自己的自主无人机，并让它可以在未知的环境中自由避障穿行。</p><p>本次课程的重心主要落在自主空中机器人的搭建、代码部署及调试上，关于自主空中机器人的一些理论基础，例如<strong>动力学模型</strong>，<strong>路径搜索</strong>，轨迹规划，<strong>地图构建</strong>等内容。</p><h3 id="课程视频">课程视频</h3><p><strong>B站：</strong><a href="https://www.bilibili.com/video/BV1WZ4y167me/?p=1">【完结】从0入门自主空中机器人 | 开源 | 浙江大学Fast-Lab</a></p><p><strong>深蓝学院：</strong><a href="https://www.shenlanxueyuan.com/course/470">从0入门自主空中机器人</a></p><h3 id="相关源码">相关源码</h3><p><strong>GitHub：</strong><a href="https://github.com/ZJU-FAST-Lab/Fast-Drone-250">https://github.com/ZJU-FAST-Lab/Fast-Drone-250</a></p><p><strong>Gitee：</strong><a href="https://gitee.com/pn_code/Fast-Drone-250">https://gitee.com/pn_code/Fast-Drone-250</a></p></blockquote><h2 id="1-机载电脑环境安装">1. 机载电脑环境安装</h2><blockquote><p>机载电脑推荐环境</p><p>系统：Ubuntu20.04 LST</p><p>ROS1：noetic</p><p>ROS2：foxy</p><p><strong>说明：ROS1和ROS2可以安装在同一个系统，但需要进行一点配置，见<a href="https://www.mgodmonkey.cn/posts/a344ec17.html">【ROS1和ROS2的共存问题】</a></strong></p><p><strong>目前很多算法，包括本教程都是基于ROS1的版本，但ROS2对比ROS1优势很大，而且ROS1目前已经宣布将会在2023年停止更新，因此ROS2已经是大众所趋，建议学有余力的同学在学完ROS1后可以顺带连ROS2也一起学了</strong></p></blockquote><h3 id="1-1-Ubuntu安装">1.1 Ubuntu安装</h3><p>视频教程如下：</p><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=382426906&bvid=BV1WZ4y167me&cid=557822079&page=7&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><ul><li>镜像站地址： <a href="http://mirrors.aliyun.com/ubuntu-releases/20.04/">http://mirrors.aliyun.com/ubuntu-releases/20.04/</a> 下载  <strong>ubuntu-20.04.4 desktop-amd64.iso</strong></li><li>烧录软件<strong>UltraISO</strong>官网：<a href="https://cn.ultraiso.net/">https://cn.ultraiso.net/</a></li><li>分区设置：<ul><li>**EFI系统分区（主分区）**512M</li><li>**交换空间（逻辑分区）**16000M（内存大小的两倍）</li><li>**挂载点/（主分区）**剩余所有容量</li></ul></li></ul><blockquote><p>教程中推荐笔记本上也安装<strong>Ubuntu</strong>，但实际用下来并不推荐安装<strong>Ubuntu</strong>在笔记本上，很多软件<strong>Windows</strong>也有，而且笔记本的作用主要就是编辑并发送代码文件到<strong>机载电脑</strong>上，用<strong>VScode</strong>+<strong>MobaXterm</strong>+<strong>ssh</strong>+<strong>nomachine</strong>即可</p></blockquote><h3 id="1-2-ROS安装">1.2  ROS安装</h3><p>推荐使用鱼香ros的一键安装脚本：一行代码搭建机器人开发环境(ROS/ROS2/ROSDEP)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; . fishros</span><br></pre></td></tr></table></figure><blockquote><p>开源地址：<a href="https://github.com/fishros/install">https://github.com/fishros/install</a><br>问题汇总：<a href="https://www.fishros.org.cn/forum/category/7/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85">一键安装 | 鱼香ROS (fishros.org.cn)</a></p><p>更多<strong>ROS</strong>的资源及教程参考：<a href="https://www.mgodmonkey.cn/posts/232d6cf1.html">ROS资源汇总 | MGodmonkeyの世界</a></p></blockquote><h2 id="2-必备软件安装">2. 必备软件安装</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=382426906&bvid=BV1WZ4y167me&cid=562685965&page=8&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h3 id="2-1-realsense驱动安装（RGB-D相机）">2.1 realsense驱动安装（RGB-D相机）</h3><blockquote><p>参考：<a href="https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md">https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md</a></p></blockquote><ol><li><s>添加秘钥</s></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/apt/keyrings</span><br><span class="line">curl -sSf https://librealsense.intel.com/Debian/librealsense.pgp | sudo <span class="built_in">tee</span> /etc/apt/keyrings/librealsense.pgp &gt; /dev/null</span><br></pre></td></tr></table></figure><ol start="2"><li><s>添加安装源</s></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/etc/apt/keyrings/librealsense.pgp] https://librealsense.intel.com/Debian/apt-repo `lsb_release -cs` main&quot;</span> | \</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/librealsense.list</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><blockquote><p>以下是README.pdf中的方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || </span><br><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb https://librealsense.intel.com/Debian/apt-repo <span class="subst">$(lsb_release -cs)</span> main&quot;</span> -u</span><br></pre></td></tr></table></figure></blockquote><ol start="3"><li>安装包</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面两个必装</span></span><br><span class="line">sudo apt-get install librealsense2-dkms</span><br><span class="line">sudo apt-get install librealsense2-utils</span><br><span class="line">sudo apt-get install ros-noetic-realsense2-camera</span><br><span class="line"><span class="comment"># 下面两个可选，主要是开发调试用</span></span><br><span class="line">sudo apt-get install librealsense2-dev</span><br><span class="line">sudo apt-get install librealsense2-dbg</span><br></pre></td></tr></table></figure><ol start="4"><li>测试</li></ol><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">realsense-viewer</span></span><br></pre></td></tr></table></figure><p>通过<code>realsense-viewer</code>的指令来检查深度相机是否正确安装并显示</p><h3 id="2-2-MAVROS">2.2 MAVROS</h3><ol><li>介绍</li></ol><p>MAVROS相当于PX4飞控中的MAVLINK模块。MAVROS将话题转为MAVLINK格式消息发送给飞控，飞控中的MAVLINK模块将MAVLINK格式消息转化为uORB消息给PX4各模块间传递消息使用，也可以反过来从uORB消息一直到ROS话题。</p><p>代码示例看<a href="https://docs.px4.io/main/en/ros/mavros_offboard_cpp.html">MAVROS Offboard control example</a>就好了，讲得很清楚。</p><ol start="2"><li>安装</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-noetic-mavros   <span class="comment"># 这里的noetic是ros的版本，其他版本自行更换名称</span></span><br><span class="line"><span class="built_in">cd</span> /opt/ros/noetic/lib/mavros</span><br><span class="line">sudo ./install_geographiclib_datasets.sh</span><br></pre></td></tr></table></figure><h3 id="2-3-git、gcc、g-、python与make">2.3 git、gcc、g++、python与make</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git<span class="comment"># git</span></span><br><span class="line">sudo apt install build-essential <span class="comment"># gcc、g++</span></span><br><span class="line">sudo apt install make<span class="comment"># make</span></span><br><span class="line">sudo apt install python3<span class="comment"># python3</span></span><br></pre></td></tr></table></figure><p>检查版本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">make --version</span><br><span class="line">python3 --version</span><br></pre></td></tr></table></figure><h3 id="2-4-ceres、glog与ddyanmic-reconfigure">2.4 ceres、glog与ddyanmic-reconfigure</h3><ul><li><p>介绍</p><ul><li><p><strong>ceres</strong>是什么<br><strong>Ceres Solver</strong>是一个开源**C++**库，用于建模和解决大型复杂的优化问题。它可以用于解决具有边界约束和一般无约束优化问题的非线性最小二乘问题。它是一个成熟，功能丰富且高性能的库。Ceres Solver是谷歌2010就开始用于解决优化问题的C++库，2014年开源。在Google地图，Tango项目，以及著名的SLAM系统OKVIS和Cartographer的优化模块中均使用了Ceres Solver。</p></li><li><p><strong>glog</strong>是什么</p><p><strong>glog</strong>是<strong>google</strong>出品的<strong>c++<strong>日志库，提供了很多非常不错的功能，例如</strong>日志分等级打印</strong>、<strong>条件打印</strong>、<strong>日志格式化</strong>、<strong>日志文件滚动大小</strong>等。</p></li><li><p><strong>ddynamic-reconfigure</strong>是什么</p><p><strong>ddynamic-reconfigure</strong>是一个ROS软件包，它提供了一个动态重新配置的框架，可以在运行时修改ROS节点的参数。它可以帮助用户在<br>不停止节点的情况下，实时地调整节点的参数，从而优化节点的性能。</p></li></ul></li><li><p>下载并解压<code>3rd_party.zip</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/pn_code/Fast-Drone-250/blob/master/3rd_party.zip</span><br><span class="line">unzip 3rd_party.zip</span><br></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./glog</span><br><span class="line">sudo <span class="built_in">chmod</span> 777 ./autogen.sh</span><br><span class="line">sudo <span class="built_in">chmod</span> 777 ./configure </span><br><span class="line">sudo ./autogen.sh &amp;&amp; sudo ./configure &amp;&amp; sudo make install</span><br><span class="line">sudo apt-get install liblapack-dev libsuitesparse-dev libcxsparse3 libgflags-dev libgoogle-glog-dev libgtest-dev</span><br><span class="line"><span class="built_in">cd</span> ../ceres-solver-2.0.0rc1</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">sudo make -j4</span><br><span class="line">sudo make install</span><br><span class="line">sudo apt-get install ros-noetic-ddynamic-reconfigure</span><br></pre></td></tr></table></figure><blockquote><p>这里的<code>libcxsparse3</code>如果有错误，参考下面这篇博客<a href="https://blog.csdn.net/qq_42257666/article/details/124598167">【安装Ceres相关依赖时libcxsparse3.1.2报错_安装ceres相关依赖项时显示找不到_振华OPPO的博客-CSDN博客】</a></p></blockquote><h3 id="2-4-ego-plannner">2.4 ego-plannner</h3><blockquote><p>参考：<a href="https://gitee.com/iszhouxin/ego-planner.git">ZJU-FAST-Lab/ego-planner (gitee.com)</a>的**<a href="https://gitee.com/iszhouxin/ego-planner/blob/master/README.md">Readme.md</a>**中的说明</p></blockquote><ul><li>安装<strong>uav_simulator</strong>需要的<strong>Armadillo</strong>库</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libarmadillo-dev</span><br></pre></td></tr></table></figure><ul><li><p>下载源码</p><p>From github</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ZJU-FAST-Lab/ego-planner.git</span><br></pre></td></tr></table></figure><p>Or from gitee</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/iszhouxin/ego-planner.git</span><br></pre></td></tr></table></figure><ul><li>编译源码</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ego-planner</span><br><span class="line">catkin_make -DCMAKE_BUILD_TYPE=Release</span><br></pre></td></tr></table></figure><ul><li>执行</li></ul><p>在<code>ego-planner</code>文件夹的一个终端中，打开rviz进行可视化和交互</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roslaunch ego_planner rviz.launch</span><br></pre></td></tr></table></figure><p>在<code>ego-planner</code>文件夹的另一个终端中，打开仿真</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> devel/setup.bash</span><br><span class="line">roslaunch ego_planner run_in_sim.launch</span><br></pre></td></tr></table></figure><h2 id="3-常用软件安装">3. 常用软件安装</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=382426906&bvid=BV1WZ4y167me&cid=562630601&page=9&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><ul><li><strong>vscode</strong><ul><li>前往<a href="https://code.visualstudio.com/">【vscode官网】</a>下载<strong>Linux x64 deb</strong>包</li><li>使用<code>sudo apt install ****.deb</code>进行安装</li></ul></li><li><strong>Terminator</strong><ul><li>多窗口命令行终端</li><li>使用<code>sudo apt install terminator</code>进行安装</li></ul></li><li><strong>Plotjuggler</strong><ul><li>可视化时间时序的工具</li><li>使用<code>sudo apt install ros-noetic-plotjuggler ros-noetic-plotjuggler-ros</code>进行安装</li><li>使用<code>rosrun plotjuggler plotjuggler</code>进行查看</li></ul></li><li><strong>Net-tools</strong><ul><li>网络工具包，用于查看linux的IP地址</li><li>使用<code>sudo apt install net-tools</code>进行安装</li><li>使用<code>ifconfig</code>进行查看IP地址</li></ul></li><li><strong>ssh</strong><ul><li>使用<code>sudo apt install openssh-server</code>进行安装</li><li>使用ssh终端等工具连接上机载电脑</li></ul></li></ul><blockquote><p>以上工具的使用方式请自行前往度娘搜索</p><p>以上工具的阿里云盘下载地址：【<a href="https://www.aliyundrive.com/s/xLxgkVG5wqA">下载入口</a>】</p></blockquote><div class="row">    <embed src="https://mybog.s3.bitiful.net/ros/word/readme.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SLAM优秀开源方案</title>
      <link href="/posts/1f501926.html"/>
      <url>/posts/1f501926.html</url>
      
        <content type="html"><![CDATA[<ul><li><strong>视觉SLAM</strong><ul><li>ORB SLAM2(单双目RGB-D)：<a href="https://github.com/raulmur/ORB_SLAM2">https://github.com/raulmur/ORB_SLAM2</a></li><li>DSO(单目)：<a href="https://github.com/JakobEngel/dso">https://github.com/JakobEngel/dso</a></li><li>InfiniTAM v3(RGB-D)：<a href="https://github.com/victorprad/InfiniTAM">https://github.com/victorprad/InfiniTAM</a></li></ul></li><li><strong>视觉+惯导SLAM</strong><ul><li>VINS-Fusion(单双目+IMU)：<a href="https://github.com/HKUST-Aerial-Robotics/VINS-Fusion">https://github.com/HKUST-Aerial-Robotics/VINS-Fusion</a></li><li>OKVIS(单双目 + IMU)：<a href="https://github.com/ethz-asl/okvis">https://github.com/ethz-asl/okvis</a></li><li>ORB SLAM33(单双目 + IMU)：<a href="https://github.com/UZ-SLAMLab/ORB_SLAM3">https://github.com/UZ-SLAMLab/ORB_SLAM3</a></li></ul></li><li><strong>激光SLAM</strong><ul><li>LeGO-LOAM：<a href="https://github.com/RobustFieldAutonomyLab/LeGO-LOAM">https://github.com/RobustFieldAutonomyLab/LeGO-LOAM</a></li><li>Cartographer(LIDAR + IMU)：<a href="https://github.com/googlecartographer/cartographer">https://github.com/googlecartographer/cartographer</a></li></ul></li><li><strong>多传感器融合</strong><ul><li>LVI-SAM(LIDAR + IMU + RTK + GPS)：<a href="https://github.com/TixiaoShan/LVI-SAM">https://github.com/TixiaoShan/LVI-SAM</a></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 资源汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> SLAM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS-PyQt小案例</title>
      <link href="/posts/37a8d87e.html"/>
      <url>/posts/37a8d87e.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>ROS与PyQt5结合的小demo，用于学习如何设计一个界面，并与ROS中的Service和Topic结合，从而控制多个小乌龟的运动</p></blockquote><p><img src="https://s2.loli.net/2023/10/03/7TVxjfRQZtNnqwy.gif" alt=""></p><p>环境：</p><ul><li>ROS2：foxy</li><li>python：3.8.10</li><li>PyQt：5.10.12</li></ul><blockquote><p>链接：<a href="https://github.com/MGod-monkey/ros2_pyqt_turtlesim_key">https://github.com/MGod-monkey/ros2_pyqt_turtlesim_key</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS1&amp;2之CmakeList.txt与package.xml</title>
      <link href="/posts/5d383f12.html"/>
      <url>/posts/5d383f12.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-CMakeLists-txt与package-xml的作用">1. CMakeLists.txt与package.xml的作用</h2><p>在<strong>ROS</strong>系统的功能包中 要包含 <strong>CMakeLists.txt</strong> 与 <strong>package.xml</strong> 文件来编译功能包的内容</p><p><strong>CMakeLists.txt</strong>原本是<strong>Cmake</strong>编译系统的规则文件，而<strong>Catkin</strong>编译系统基本沿用了<strong>CMake</strong>的编译风格，只是针对<strong>ROS</strong>工程添加了一些宏定义。所以在写法上，<strong>catkin</strong> 的 <strong>CMakeLists.txt</strong>与<strong>CMake</strong>的基本一致。用<strong>cmake</strong>命令创建<strong>功能包</strong>时，会自动生成<strong>CMakeList.txt</strong>文件，已配置了多数编译选项，且包含详细的注释，只需稍作修改便可编译自己的文件。</p><p>而<strong>package.xml</strong>文件是描述功能包清单的文件，包括功能包的<strong>名称</strong>、<strong>版本号</strong>、<strong>作者信息</strong>、<strong>许可信息</strong>、<strong>编译依赖</strong>和<strong>运行依赖</strong>等。</p><p>所以 <strong>CMakeLists.txt</strong> 非常重要，它指定了由源码到目标文件的规则，<strong>catkin</strong>编译系统在工作时首先会找到每个<strong>package</strong>下的 <strong>CMakeLists.txt</strong> ，然后按照规则来编译构建</p><h2 id="2-生成CMakeLists-txt">2. 生成CMakeLists.txt</h2><h3 id="2-1-ROS1">2.1 ROS1</h3><p><strong>ROS1</strong>可通过用<strong>catkin_create_pkg</strong>命令<strong>创建功能包</strong>，这会自动生成<strong>CMakeLists.txt</strong>和<strong>package.xml</strong>文件的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建工作空间</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/catkin_ws/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：std msgs rospy roscpp为创建功能时指定的铱赖，test为包名</span></span><br><span class="line"><span class="comment"># 也可以先不指定，后面在CMakeLists.txt和package.xmL中手动添加</span></span><br><span class="line">catkin_create_pkg <span class="built_in">test</span> std_msgs rospy roscpp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下在~/catkin_ws/src目录下自动生成了哪些文件夹和文件</span></span><br><span class="line">tree</span><br></pre></td></tr></table></figure><blockquote><p>通过上面的命令生成的<strong>工作空间</strong>如下</p><p><img src="https://s2.loli.net/2023/10/03/KUqakLAr3D5ibR6.png" alt=""></p><p><code>include</code>：存放**.h**的头文件</p><p><code>src</code>：可同时存放**.cpp<strong>或</strong>.py<strong>的源文件，但一般</strong>.py**文件存放在<code>scripts</code>目录中</p><p><code>scripts</code>：习惯存放**.py<strong>的</strong>python**文件，需要自己创建</p><p><strong>注：python代码和c++代码不分家，可同时存放在同一功能包中</strong></p></blockquote><h3 id="2-2-ROS2">2.2 ROS2</h3><p><strong>ROS2</strong>可通过如下的命令来<strong>创建功能包</strong>以及必要的<strong>CMakeList.txt</strong>和<strong>package.xml</strong>文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建工作空间</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/dev_ws/src</span><br><span class="line"><span class="built_in">cd</span> ~/dev_ws/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># ament_cmake和ament_python分别代表c++和python两种代码的功能包</span></span><br><span class="line"><span class="comment"># test_c和test_python代表包名</span></span><br><span class="line">ros2 pkg create --build-type ament_cmake test_c</span><br><span class="line">ros2 pkg create --build-type ament_python test_python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一下在~/dev_ws/src目录下自动生成了哪些文件夹和文件</span></span><br><span class="line">tree</span><br></pre></td></tr></table></figure><blockquote><p>通过以上命令生成的工作空间如下：</p><p><img src="https://s2.loli.net/2023/10/03/NgDJKjklTEWPo3c.png" alt=""></p><ul><li><p><code>test_c/include</code>：存放**.h**的头文件</p></li><li><p><code>test_c/src</code>：存放**.cpp<strong>的</strong>C++**源文件</p></li><li><p><code>test_python/test_python</code>：存放**.py<strong>的</strong>python**文件</p></li></ul><p><strong>注：与ROS1不同，同一功能包内只能同时包含python文件或者C++文件中的一种</strong></p></blockquote><h2 id="3-CMakeLists-txt编写">3. CMakeLists.txt编写</h2><h3 id="3-1-ROS1">3.1 ROS1</h3><ol><li>常用的<strong>ROS1</strong>中<strong>CMakeLists.txt</strong>架构如下</li></ol><blockquote><p>视频解析参考：<a href="https://www.bilibili.com/video/BV1mJ411R7Ni?p=7">中科院软件所-机器人操作系统入门（ROS入门教程）</a></p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>()<span class="comment">#CMake的最低版本号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>()<span class="comment">#项目名称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>()<span class="comment">#找到编译需要的其他CMake/Catkinpackage </span></span><br><span class="line"></span><br><span class="line">catkin_python_setup()<span class="comment">#catkin新加宏，打开catkin的Python Module的支持</span></span><br><span class="line"></span><br><span class="line">add_message_files()<span class="comment">#catkin新加宏，添加自定义Message文件 </span></span><br><span class="line"></span><br><span class="line">add_service_files()         <span class="comment">#catkin新加宏，添加自定义Service文件 </span></span><br><span class="line"></span><br><span class="line">add_action_files()          <span class="comment">#catkin新加宏，添加自定义Action文件 </span></span><br><span class="line"></span><br><span class="line">generate_message()<span class="comment">#catkin新加宏，生成不同语言版本的msg/srv/action接口 </span></span><br><span class="line"></span><br><span class="line">catkin_package()<span class="comment">#catkin新加宏，生成当前package的cmake配置，供依赖本包的其他软件包调用 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>()<span class="comment">#生成库 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>()<span class="comment">#生成可执行二进制文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_dependencies</span>()<span class="comment">#定义目标文件依赖于其他目标文件，确保其他目标已被构建 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>()<span class="comment">#链接</span></span><br><span class="line"></span><br><span class="line">catkin_add_gtest()<span class="comment">#catkin新加宏，生成测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">install</span>()<span class="comment">#生成可安装目标</span></span><br></pre></td></tr></table></figure><p>需要自己配置的项目一般就下面几种：</p><ul><li><p><strong>include_directories</strong></p><ul><li>用于设置头文件的相对路径</li><li>全局路径默认为功能包所在目录，功能包的头文件一般放在功能包根目录下的include文件夹，<br>所以需要此处添加此文件夹</li><li>还包含<strong>catkin</strong>编译器默认的其他头文件路径，如：ROS默认安装路径、Linux系统路径等</li></ul></li><li><p><strong>add_exectuable</strong></p><ul><li>用于设置需要编译的代码和可执行文件</li><li>第一个参数为期望生成的可执行文件（节点）名称</li><li>后面的参数为参与编译的源文件(.cpp)，若需要多个代码文件，可依次列出，空格分隔</li></ul></li><li><p><strong>target_link_libraries</strong></p><ul><li>用于设置链接库</li><li>有些功需要使用系统或第三方库函数，通过该选项可以配置执行文件链接的库文件</li><li>第一个参数与<strong>add_exectuable</strong>相同，为可执行文件（节点）名称</li><li>后面的参数为需要链接的库，依次列出，空格分隔</li></ul></li><li><p><strong>add_dependencies</strong></p><ul><li>用于设置依赖</li><li>有时候需要自定义消息类型，消息类型会在编译过程中产生相应语言的代码。若编译的可执行文<br>件依赖这些动态生成的代码，则需要添加${PROJECT NAME}generate messages_cpp配置</li></ul></li><li><p>自定义数据类型：消息<strong>msg</strong>、服务<strong>srv</strong>、动作<strong>action</strong></p><ul><li><strong>find_package</strong>(catkin REQUIRE COMPONENTS message_generation)</li><li><strong>catkin_package</strong>(CATKIN_DEPENDS message_runtime)</li><li><strong>add_message_files</strong>(FILES xxx.msg)</li><li><strong>add_service_files</strong>(FILES xxx.srv)</li><li><strong>add_action_files</strong>(FILES xxx.action)</li><li><strong>generate_messages</strong>(DEPENDENCIES std_msgs)</li></ul></li></ul><blockquote><p>CMakeLists.txt模板参考：<a href="https://mybog.s3.bitiful.net/ros/zero/CMakeLists.txt">CMakeLists.txt</a></p><p>更多教程参考：<a href="http://wiki.ros.org/catkin/CMakeLists.txt">catkin/CMakeLists.txt - ROS Wiki</a></p></blockquote><h3 id="3-2-ROS2">3.2 ROS2</h3><p>常用的<strong>ROS2</strong>中<strong>CMakeLists.txt</strong>架构如下</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>()<span class="comment">#CMake的最低版本号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>()     <span class="comment">#项目名称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>()       <span class="comment">#查找系统中的依赖项</span></span><br><span class="line"></span><br><span class="line">ament_target_dependencies()          <span class="comment">#依赖于其他目标文件，确保其他目标已被构建 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>()    <span class="comment">#生成可执行二进制文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">install</span>()   <span class="comment">#生成可安装目标</span></span><br><span class="line"></span><br><span class="line">ament_package()<span class="comment">#生成功能包</span></span><br><span class="line"></span><br><span class="line">rosidl_generate_interfaces()<span class="comment"># 自定义消息类型接口</span></span><br></pre></td></tr></table></figure><p>示例模板如下</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span>)</span><br><span class="line"><span class="keyword">project</span>(test_c)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Default to C99</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">NOT</span> CMAKE_C_STANDARD)</span><br><span class="line">  <span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">99</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Default to C++14</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">NOT</span> CMAKE_CXX_STANDARD)</span><br><span class="line">  <span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">14</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(CMAKE_COMPILER_IS_GNUCXX <span class="keyword">OR</span> CMAKE_CXX_COMPILER_ID <span class="keyword">MATCHES</span> <span class="string">&quot;Clang&quot;</span>)</span><br><span class="line">  <span class="keyword">add_compile_options</span>(-Wall -Wextra -Wpedantic)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># find dependencies</span></span><br><span class="line"><span class="keyword">find_package</span>(ament_cmake REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(rclcpp REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(std_msgs REQUIRED)</span><br><span class="line"><span class="comment"># uncomment the following section in order to fill in</span></span><br><span class="line"><span class="comment"># further dependencies manually.</span></span><br><span class="line"><span class="comment"># find_package(&lt;dependency&gt; REQUIRED)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(talker src/publisher_member_function.cpp)<span class="comment"># 修改2</span></span><br><span class="line">ament_target_dependencies(talker rclcpp std_msgs)<span class="comment"># 修改3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">install</span>(TARGETS</span><br><span class="line">  talker<span class="comment"># 修改4</span></span><br><span class="line">  DESTINATION lib/<span class="variable">$&#123;PROJECT_NAME&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(BUILD_TESTING)</span><br><span class="line">  <span class="keyword">find_package</span>(ament_lint_auto REQUIRED)</span><br><span class="line">  <span class="comment"># the following line skips the linter which checks for copyrights</span></span><br><span class="line">  <span class="comment"># uncomment the line when a copyright and license is not present in all source files</span></span><br><span class="line">  <span class="comment">#set(ament_cmake_copyright_FOUND TRUE)</span></span><br><span class="line">  <span class="comment"># the following line skips cpplint (only works in a git repo)</span></span><br><span class="line">  <span class="comment"># uncomment the line when this package is not in a git repo</span></span><br><span class="line">  <span class="comment">#set(ament_cmake_cpplint_FOUND TRUE)</span></span><br><span class="line">  ament_lint_auto_find_test_dependencies()</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自定义消息类型需要添加项</span></span><br><span class="line"><span class="keyword">find_package</span>(geometry_msgs REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(rosidl_default_generators REQUIRED)</span><br><span class="line"></span><br><span class="line">rosidl_generate_interfaces(<span class="variable">$&#123;PROJECT_NAME&#125;</span></span><br><span class="line">  <span class="string">&quot;msg/Num.msg&quot;</span><span class="comment"># 自定义1</span></span><br><span class="line">  <span class="string">&quot;msg/Sphere.msg&quot;</span><span class="comment"># 自定义2</span></span><br><span class="line">  <span class="string">&quot;srv/AddThreeInts.srv&quot;</span>     <span class="comment"># 自定义3</span></span><br><span class="line">  DEPENDENCIES geometry_msgs</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ament_package()</span><br></pre></td></tr></table></figure><blockquote><p>相较于基于<strong>catkin</strong>的<strong>CMake</strong>文件，基于<strong>ament</strong>的明显简洁很多</p></blockquote><p>假设你编写了<code>~/dev_ws/src/test.cpp</code>文件后，需要修改的步骤如下：</p><ol><li>链接源代码</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(<span class="keyword">test</span> src/<span class="keyword">test</span>.cpp)<span class="comment"># test为你输入节点后执行的名称，如ros2 run test_c test（前一个test_c为包名，后一个test则为这里的设置的名称，代表具体执行的代码）</span></span><br><span class="line">ament_target_dependencies(<span class="keyword">test</span> rclcpp)<span class="comment"># 添加依赖项</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加下面这两行代码的目的是让编译器编译<code>~/dev_ws/src/test_c/test.cpp</code>这个文件</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">install</span>(TARGETS</span><br><span class="line">  <span class="keyword">test</span></span><br><span class="line">  DESTINATION lib/<span class="variable">$&#123;PROJECT_NAME&#125;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>当你自定义消息类型时还需要消息类型文件</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加自定义消息类型需要添加项</span></span><br><span class="line"><span class="comment"># 下面两项是固定的，geometry_msgs是用于生成消息依赖包</span></span><br><span class="line"><span class="keyword">find_package</span>(geometry_msgs REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(rosidl_default_generators REQUIRED)</span><br><span class="line"></span><br><span class="line">rosidl_generate_interfaces(<span class="variable">$&#123;PROJECT_NAME&#125;</span></span><br><span class="line">  <span class="string">&quot;msg/Num.msg&quot;</span><span class="comment"># 自定义1</span></span><br><span class="line">  <span class="string">&quot;msg/Sphere.msg&quot;</span><span class="comment"># 自定义2</span></span><br><span class="line">  <span class="string">&quot;srv/AddThreeInts.srv&quot;</span>     <span class="comment"># 自定义3</span></span><br><span class="line">  DEPENDENCIES geometry_msgs</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="4-package-xml编写">4. package.xml编写</h2><p><strong>package.xml</strong>的框架如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">format</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>..<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>...<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maintainer</span> <span class="attr">email</span>=<span class="string">&quot;lanhanba@todo.todo&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">maintainer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">license</span>&gt;</span>...<span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">buildtool_depend</span>&gt;</span>...<span class="tag">&lt;/<span class="name">buildtool_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>...<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>...<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">export</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build_type</span>&gt;</span>...<span class="tag">&lt;/<span class="name">build_type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">export</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>相较于<strong>CMakeList.txt</strong>，<strong>package.xml</strong>的语法就简单许多，且<strong>ROS1</strong>和<strong>ROS2</strong>的标签语法通用</p><ul><li><strong>&lt;build_depend&gt;&lt;/build_depend&gt;</strong>: 标签定义了功能包中代码编译时所依赖的其他功能包</li><li><strong>&lt;exec_depend&gt;&lt;exec_depend&gt;</strong>: 标签定义了功能包中可执行程序运行时所依赖的其他功能包</li><li><strong>自定义数据类型</strong>：话题消息<strong>msg</strong>、服务数据<strong>srv</strong>、动作数据<strong>action</strong></li></ul></blockquote><p>模板如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-model href=<span class="string">&quot;http://download.ros.org/schema/package_format3.xsd&quot;</span> schematypens=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">format</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>test_c<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>TODO: Package description<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">maintainer</span> <span class="attr">email</span>=<span class="string">&quot;lanhanba@todo.todo&quot;</span>&gt;</span>lanhanba<span class="tag">&lt;/<span class="name">maintainer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">license</span>&gt;</span>TODO: License declaration<span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- ROS1 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">buildtool_depend</span>&gt;</span>catkin<span class="tag">&lt;/<span class="name">buildtool_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">build_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build_export_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">build_export_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>roscpp<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>rospy<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exec_depend</span>&gt;</span>std_msgs<span class="tag">&lt;/<span class="name">exec_depend</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- ROS2_C++ --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">buildtool_depend</span>&gt;</span>ament_cmake<span class="tag">&lt;/<span class="name">buildtool_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>ament_lint_auto<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>ament_lint_common<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">export</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build_type</span>&gt;</span>ament_cmake<span class="tag">&lt;/<span class="name">build_type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">export</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- ROS2_python --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>ament_copyright<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>ament_flake8<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>ament_pep257<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">test_depend</span>&gt;</span>python3-pytest<span class="tag">&lt;/<span class="name">test_depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">export</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build_type</span>&gt;</span>ament_python<span class="tag">&lt;/<span class="name">build_type</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">export</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- ROS2中C++功能包添加自定义消息类型还需添加下面三行（固定形式，和上面的CMake修改搭配使用，python不需要） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>rosidl_default_generators<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">depend</span>&gt;</span>geometry_msgs<span class="tag">&lt;/<span class="name">depend</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">member_of_group</span>&gt;</span>rosidl_interface_packages<span class="tag">&lt;/<span class="name">member_of_group</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-其他–Setup-py的修改">5. 其他–Setup.py的修改</h2><p>在<strong>ROS2-Python</strong>功能包中，如果添加类似<code>~/dev_ws/src/test_python/test.py</code>的<strong>python</strong>文件，则需要对功能包中的<strong><a href="http://Setup.py">Setup.py</a></strong>进行如下的修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">package_name = <span class="string">&#x27;test_python&#x27;</span></span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name=package_name,</span><br><span class="line">    version=<span class="string">&#x27;0.0.0&#x27;</span>,</span><br><span class="line">    packages=[package_name],</span><br><span class="line">    data_files=[</span><br><span class="line">        (<span class="string">&#x27;share/ament_index/resource_index/packages&#x27;</span>,</span><br><span class="line">            [<span class="string">&#x27;resource/&#x27;</span> + package_name]),</span><br><span class="line">        (<span class="string">&#x27;share/&#x27;</span> + package_name, [<span class="string">&#x27;package.xml&#x27;</span>]),</span><br><span class="line">    ],</span><br><span class="line">    install_requires=[<span class="string">&#x27;setuptools&#x27;</span>],</span><br><span class="line">    zip_safe=<span class="literal">True</span>,</span><br><span class="line">    maintainer=<span class="string">&#x27;lanhanba&#x27;</span>,</span><br><span class="line">    maintainer_email=<span class="string">&#x27;lanhanba@todo.todo&#x27;</span>,</span><br><span class="line">    description=<span class="string">&#x27;TODO: Package description&#x27;</span>,</span><br><span class="line">    license=<span class="string">&#x27;TODO: License declaration&#x27;</span>,</span><br><span class="line">    tests_require=[<span class="string">&#x27;pytest&#x27;</span>],</span><br><span class="line">    entry_points=&#123;</span><br><span class="line">        <span class="string">&#x27;console_scripts&#x27;</span>: [</span><br><span class="line">            <span class="comment"># 结构如下：节点名 = 功能包名.代码文件.执行入口函数名(一般执行入口函数名都是main，也就是说python代码中一般要有main函数)</span></span><br><span class="line">            <span class="comment"># 通过ros2 run test_python test 来执行test_python.test:main下的函数</span></span><br><span class="line">            <span class="comment"># 如果有多个python代码文件都需要一一添加，名称不能一样</span></span><br><span class="line">            <span class="string">&quot;test = test_python.test:main&quot;</span>,</span><br><span class="line">            <span class="string">&quot;test2 = test_python.test2:main&quot;</span></span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><strong>参考：</strong></p><ul><li><p><a href="http://wiki.ros.org/catkin/CMakeLists.txt">catkin/CMakeLists.txt - ROS Wiki</a></p></li><li><p><a href="https://docs.ros.org/en/humble/Tutorials">CMakeLists.txt - ROS Humble Wiki</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/94579820">【ROS 学习笔记】CMakeLists.txt 与 package.xml - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/shoufei403/article/details/125831552">详细分析一个ROS2 CMakeLists.txt文件_首飞爱玩机器人的博客-CSDN博客</a></p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 知识分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS-Launch的使用方式</title>
      <link href="/posts/891e492b.html"/>
      <url>/posts/891e492b.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>视频参考：<a href="https://www.bilibili.com/video/BV1zt411G7Vn?p=19">https://www.bilibili.com/video/BV1zt411G7Vn?p=19</a></p></blockquote><h2 id="1-roslaunch-命令">1. roslaunch 命令</h2><p><strong>roslaunch</strong> 命令允许我们一次启动 launch 文件中定义的多个 <strong>ROS</strong> 节点，启动参数等在启动文件（<strong>launch</strong> 文件）中配置，并且如果系统之前没有启动 <strong>roscore</strong>，则 <strong>roslaunch</strong> 会自动启动它。</p><p>roslaunch 的命令行用法如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch [package] [filename.launch]</span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch beginner_tutorials turtlemimic.launch</span><br></pre></td></tr></table></figure><p>其中 <strong>beginner_tutorials</strong> 是 <strong>turtlemimic.launch</strong> 文件中定义的一个节点，那 <strong>launch</strong> 文件是什么呢？我们来看下。</p><h2 id="2-解析-launch-文件">2. 解析 launch 文件</h2><p>简单来说 <strong>launch</strong> 文件就是一堆节点和参数的集合，使用 <strong>launch</strong> 文件的目的是为了一键启动。</p><p>因为目前运行在机器人上的 <strong>ROS</strong> 系统一般都要同时运行多个节点，如果我们开机启动时，一个一个的输入命令来启动每一个节点，想想就可怕，所以 <strong>ROS</strong> 系统就给我们提供了这么一个 <strong>launch</strong> 文件，可以方便我们将要启动的节点和对应的参数全部写到这个文件中，然后使用 <strong>roslaunch</strong> 命令一键启动！</p><p>一个 <strong>lanunch</strong> 文件例子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- local machine already has a definition by default.</span></span><br><span class="line"><span class="comment">       This tag overrides the default definition with</span></span><br><span class="line"><span class="comment">       specific ROS_ROOT and ROS_PACKAGE_PATH values --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">machine</span> <span class="attr">name</span>=<span class="string">&quot;local_alt&quot;</span> <span class="attr">address</span>=<span class="string">&quot;localhost&quot;</span> <span class="attr">default</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ros-root</span>=<span class="string">&quot;/u/user/ros/ros/&quot;</span> <span class="attr">ros-package-path</span>=<span class="string">&quot;/u/user/ros/ros-pkg&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- a basic listener node --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;listener-1&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;listener&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- pass args to the listener node --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;listener-2&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">args</span>=<span class="string">&quot;-foo arg2&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- a respawn-able listener node --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;listener-3&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- start listener node in the &#x27;wg1&#x27; namespace --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">ns</span>=<span class="string">&quot;wg1&quot;</span> <span class="attr">name</span>=<span class="string">&quot;listener-wg1&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- start a group of nodes in the &#x27;wg2&#x27; namespace --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;wg2&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- remap applies to all future statements in this scope. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;chatter&quot;</span> <span class="attr">to</span>=<span class="string">&quot;hello&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">name</span>=<span class="string">&quot;listener&quot;</span> <span class="attr">args</span>=<span class="string">&quot;--test&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;rospy_tutorials&quot;</span> <span class="attr">type</span>=<span class="string">&quot;talker&quot;</span> <span class="attr">name</span>=<span class="string">&quot;talker&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- set a private parameter for the node --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;talker_1_param&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a value&quot;</span> /&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- nodes can have their own remap args --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;chatter&quot;</span> <span class="attr">to</span>=<span class="string">&quot;hello-1&quot;</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- you can set environment variables for a node --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">&quot;ENV_EXAMPLE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;some value&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下面是一个简单的 <strong>launch</strong> 文件格式，我带你一步一步解析它的标签用法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">env</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">remap</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">group</span>&gt;</span>  <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-1-launch">2.1 launch</h3><p><strong>launch</strong> 标签是 <strong>launch</strong> 文件的根节点，它只作为其他子标签的容器，没有其他功能。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-node">2.2 node</h3><p><strong>node</strong> 标签指定一个将要运行的 ROS 节点，<strong>node</strong> 标签可以说是 <strong>launch</strong> 文件中最重要的标签，因为我们配置 <strong>launch</strong> 文件的目的就是一次启动多个 <strong>ROS node</strong>。</p><p>常见的用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">name</span>=<span class="string">&quot;bar1&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;foo_pkg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;bar&quot;</span> <span class="attr">args</span>=<span class="string">&quot;--test&quot;</span> <span class="attr">respawn</span>=<span class="string">&quot;true&quot;</span> <span class="attr">output</span>=<span class="string">&quot;sceen&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>name</strong>：节点名称 bar1</li><li><strong>pkg</strong>：节点所在的包 foo_pkg</li><li><strong>type</strong>：节点类型是可执行文件（节点）的名称，项目中必须要有一个相同名称的可执行节点</li><li><strong>args</strong>：命令行启动参数 --test</li><li><strong>respawn</strong>：是否自动重启，true 表示如何节点未启动，则自动重启，false 则不重启，默认 false</li><li><strong>output</strong>：是否将节点信息输出到屏幕，如果不设置该属性，则节点信息会被写入到日志文件</li></ul><p>在 <strong>node</strong> 标签下页可以嵌套使用以下标签：</p><ul><li><strong>env</strong>：为节点设置环境变量</li><li><strong>remap</strong>：为节点设置重映射参数</li><li><strong>rosparam</strong>：为节点加载 rosparam 文件</li><li><strong>param</strong>：为节点设置参数</li></ul><h3 id="2-3-param">2.3 param</h3><p>在项目中某些参数需要经常改变，如果在程序中写死了，以后我们每次修改参数都需要重新 <strong>build</strong> 一遍程序，非常麻烦，<strong>param</strong> 便签给我们提供了一个传递参数的方法。</p><p><strong>param</strong> 标签定义一个将要被设置到参数服务器的参数，它的参数值可以通过文本文件、二进制文件或命令等属性来设置，另外 <strong>param</strong> 标签可以嵌入到 <strong>node</strong> 标签中，以此来作为该 <strong>node</strong> 的私有参数。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;publish_frequency&quot;</span> <span class="attr">type</span>=<span class="string">&quot;double&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>name</strong>：参数名称 publish_frequency</li><li><strong>type</strong>：参数类型 double，str，int，bool，yaml</li><li><strong>value</strong>：参数值 10.0</li></ul><p><strong>param</strong> 标签也可以为一组 <strong>group</strong> 节点同时设置参数。</p><h3 id="2-4-remap">2.4 remap</h3><p><strong>remap</strong> 标签提供了一种节点名称的重映射方法，每个 <strong>remap</strong> 标签包含一个元素名称和一个新名称，在系统运行后原始名称会被替换为新名称。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">remap</span> <span class="attr">from</span>=<span class="string">&quot;chatter&quot;</span> <span class="attr">to</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>from</strong>：原始名称</li><li><strong>to</strong>：新名称</li></ul><p>可以这样理解这个替换标签：你有一个节点订阅了「<strong>chatter</strong>」主题，但是你只有一个节点发布「<strong>hello</strong>」主题，而「<strong>hello</strong>」和「<strong>chatter</strong>」的类型相同，所以我们可以将「<strong>chatter</strong>」简单地替换为「<strong>hello</strong>」，从而实现订阅「<strong>hello</strong>」主题。</p><h3 id="2-5-machine">2.5 machine</h3><p><strong>machine</strong> 标签定义了节点所运行的机器信息，如果只是在本地运行节点则不需要配置这个标签，它主要使用在 <strong>SSH</strong> 和远程机器，不过也可以用来配置本地机器的相关信息。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">machine</span> <span class="attr">name</span>=<span class="string">&quot;foo&quot;</span> <span class="attr">address</span>=<span class="string">&quot;foo-address&quot;</span> <span class="attr">env-loader</span>=<span class="string">&quot;/opt/ros/kinetic/env.sh&quot;</span> <span class="attr">user</span>=<span class="string">&quot;someone&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">machine</span>=<span class="string">&quot;foo&quot;</span> <span class="attr">name</span>=<span class="string">&quot;footalker&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;test_ros&quot;</span> <span class="attr">type</span>=<span class="string">&quot;talker.py&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>name</strong>：机器名称</li><li><strong>address</strong>：机器的网络地址</li><li><strong>env-loader</strong>：设置机器的环境变量，必须是一个设置了所有要求变量的 shell 脚本</li><li><strong>user</strong>：用户名称</li></ul><h3 id="2-6-rosparam">2.6 rosparam</h3><p><strong>rosparam</strong> 标签允许节点从参数服务器上 <strong>load</strong>、<strong>dump</strong> 和 <strong>delete YAML</strong> 文件，也可以使用在远程机器上，需要注意的是 <strong>delete</strong> 必须在 <strong>load</strong> 或者 <strong>dump</strong> 之后进行。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 参数较多使用 yaml 文件</span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;load&quot;</span> <span class="attr">file</span>=<span class="string">&quot;$(find rosparam)/example.yaml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">command</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">param</span>=<span class="string">&quot;my/param&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 传递数组</span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">param</span>=<span class="string">&quot;a_list&quot;</span>&gt;</span>[1, 2, 3, 4]<span class="tag">&lt;/<span class="name">rosparam</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span>&gt;</span></span><br><span class="line">    a: 1</span><br><span class="line">    b: 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">rosparam</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;whitelist&quot;</span> <span class="attr">default</span>=<span class="string">&quot;[3, 2]&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rosparam</span> <span class="attr">param</span>=<span class="string">&quot;whitelist&quot;</span> <span class="attr">subt_value</span>=<span class="string">&quot;True&quot;</span>&gt;</span>$(arg whitelist)<span class="tag">&lt;/<span class="name">rosparam</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>command</strong>：load，dump，delete</li><li><strong>file</strong>：参数文件的路径</li><li><strong>param</strong>：参数名称</li><li><strong>subt_value</strong>：是否允许在 YAML 中替换参数</li></ul><p>补充下 <strong>yaml</strong> 文件基本用法，<strong>yaml</strong> 文件就是单纯的来存储启动参数，格式如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a: 1</span><br><span class="line">str: hello</span><br><span class="line">c: 2.0</span><br></pre></td></tr></table></figure><p>其中不需要指定变量类型，<strong>yaml</strong> 文件会自动确定类型。使用 <strong>yaml</strong> 文件的目的就是方便配置参数，如果有很多参数需要配置，不需要写很多 <strong>rosparam</strong> 命令。</p><p><strong>yaml</strong> 文件还有挺多复杂的写法，后续项目中用到再总结出来。</p><h3 id="2-7-include">2.7 include</h3><p><strong>include</strong> 类似编程语言中的 <strong>include</strong> 预处理，它可以导入其他 <strong>roslaunch</strong> 的启动文件到当前 <strong>include</strong> 标签所在的位置。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;$(find package_name)/launch_file_name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>项目中使用绝对路径不太方便，可以使用 find 来查找。</p><h3 id="2-8-env">2.8 env</h3><p><strong>env</strong> 标签可以在启动的节点上设置环境变量，这个标签基本只会使用在 <strong>launch</strong>、<strong>include</strong>、<strong>node</strong>、<strong>machine</strong> 这 4 个标签内部，当使用在 <strong>launch</strong> 内部时，<strong>env</strong> 设置的环境标量会应用到内部定义的节点。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">env</span> <span class="attr">name</span>=<span class="string">&quot;ENV_EXAMPLE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;some value&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>name</strong>：环境变量名称</li><li><strong>value</strong>：环境变量值</li></ul><h3 id="2-9-test">2.9 test</h3><p><strong>test</strong> 标签在语法上类似 <strong>node</strong> 标签，但在功能上只表示当前的节点作为测试节点去运行。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">test-name</span>=<span class="string">&quot;test_1&quot;</span> <span class="attr">pkg</span>=<span class="string">&quot;my_pkg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;test_1.py&quot;</span> <span class="attr">time-limit</span>=<span class="string">&quot;10.0&quot;</span> <span class="attr">args</span>=<span class="string">&quot;--test1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>test-name</strong>：测试节点名称</li><li><strong>pkg</strong>：测试节点所在的包</li><li><strong>type</strong>：测试节点类型</li><li><strong>time-limit</strong>：超时时间</li><li><strong>arg</strong>：测试节点启动的命令参数</li></ul><h3 id="2-10-arg">2.10 arg</h3><p><strong>arg</strong> 标签表示启动参数，该标签允许创建更多可重用和可配置的启动文件，其可以通过命令行、include 标签、定义在高级别的文件这 3 种方式配置值。</p><p><strong>arg</strong> 标签声明的参数不是全局的，只能在声明的单个启动文件中使用，可以当成函数的局部参数来理解。</p><p>常见用法如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 1. 命令行传递启动参数</span><br><span class="line">roslaunch my_file.launch my_arg:=my_value</span><br><span class="line"># 2. 定义时赋值</span><br><span class="line">&lt;arg name=&quot;arg_name&quot; default=&quot;arg_name&quot;&gt;</span><br><span class="line">&lt;arg name=&quot;arg_name&quot; value=&quot;arg_name&quot;&gt;</span><br></pre></td></tr></table></figure><p>这两者有点区别，命令行传递的 <strong>arg</strong> 参数可以覆盖 <strong>default</strong>，但不能覆盖 <strong>value</strong>。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 3. 通过 launch 文件传递，两个 launch 文件中的 arg 参数值必须相同！</span><br><span class="line"></span><br><span class="line"># my_file.launch</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;include.launch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;hoge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fuga&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># include.launch</span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arg</span> <span class="attr">name</span>=<span class="string">&quot;hoge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;fuga&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意 <strong>arg</strong> 和 <strong>param</strong> 标签的区别：</p><ul><li><strong>arg</strong>：启动时参数，只在启动文件 launch 中有意义</li><li><strong>param</strong>：运行时参数，存储在参数服务器中</li></ul><h3 id="2-11-group">2.11 group</h3><p><strong>group</strong> 标签可以方便的将一组配置应用到组内的所有节点，它也具有命名空间 <strong>ns</strong> 特点，可以将不同的节点放入不同的 <strong>namespace</strong>。</p><p>常见用法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">ns</span>=<span class="string">&quot;namespace&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;pkg_name1&quot;</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;pkg_name2&quot;</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配合 <strong>if</strong> 和 <strong>unless</strong> 使用：</p><ul><li><strong>if=value</strong>：value 为 true 则包含内部信息</li><li><strong>unless=value</strong>：value 为 false 则包含内部信息</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">if</span>=<span class="string">&quot;$(arg foo1)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;pkg_name1&quot;</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">group</span> <span class="attr">unless</span>=<span class="string">&quot;$(arg foo2)&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;pkg_name2&quot;</span> <span class="attr">...</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>当 <strong>foo1 == true</strong> 时包含其标签内部</li><li>当 <strong>foo2 == false</strong> 时包含其标签内部</li></ul><blockquote><p>更多标签内容参考官方文档：<a href="https://wiki.ros.org/roslaunch/XML">https://wiki.ros.org/roslaunch/XML</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 知识分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rosrun tf view_frames时报错TypeError: cannot use a string pattern on a bytes-likeobject</title>
      <link href="/posts/bf2c6ce0.html"/>
      <url>/posts/bf2c6ce0.html</url>
      
        <content type="html"><![CDATA[<h2 id="错误过程">错误过程</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@laohanba-NUC11TNKi7:~/Doc<span class="comment"># rosrun tf view_frames </span></span><br><span class="line">Listening to /tf <span class="keyword">for</span> 5.0 seconds</span><br><span class="line">Done Listening</span><br><span class="line">b<span class="string">&#x27;dot - graphviz version 2.43.0 (0)\n&#x27;</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;/opt/ros/noetic/lib/tf/view_frames&quot;</span>, line 119, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    generate(dot_graph)</span><br><span class="line">  File <span class="string">&quot;/opt/ros/noetic/lib/tf/view_frames&quot;</span>, line 89, <span class="keyword">in</span> generate</span><br><span class="line">    m = r.search(vstr)</span><br><span class="line">TypeError: cannot use a string pattern on a bytes-like object</span><br></pre></td></tr></table></figure><h2 id="解决方法">解决方法</h2><blockquote><p>修改<code>/opt/ros/noetic/lib/tf/view_frames</code>文件中的代码</p><p>文件路径或有出入，<strong>noetic</strong>要根据自己的<strong>ROS</strong>版本进行修改</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /opt/ros/noetic/lib/tf/view_frames</span><br></pre></td></tr></table></figure><p>在大概89行的位置添加如下一行</p><p><img src="https://s2.loli.net/2023/10/03/mTRxtQna6h8rpYK.png" alt="image-20230719200946372"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vstr = str(vstr)</span><br></pre></td></tr></table></figure><p>再次运行就能正常生成坐标系文件了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@laohanba-NUC11TNKi7:~/Doc<span class="comment"># rosrun tf view_frames </span></span><br><span class="line">Listening to /tf <span class="keyword">for</span> 5.0 seconds</span><br><span class="line">Done Listening</span><br><span class="line">b<span class="string">&#x27;dot - graphviz version 2.43.0 (0)\n&#x27;</span></span><br><span class="line">Detected dot version 2.43</span><br><span class="line">frames.pdf generated</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 问题大全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS1和ROS2共存的问题</title>
      <link href="/posts/a344ec17.html"/>
      <url>/posts/a344ec17.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>说明：ROS1最高支持到Ubuntu20.04，ROS2最低支持Ubuntu20.04，综上，推荐使用的Ubuntu版本为20.04</p></div><h2 id="1-安装">1.安装</h2><blockquote><p>参考鱼c一键安装脚本来安装：<a href="https://www.mgodmonkey.cn/posts/232d6cf1.html">ROS资源汇总</a></p></blockquote><blockquote><p>说明：<strong>ROS1</strong>安装的版本为<strong>noetic</strong>，<strong>ROS2</strong>安装的版本为<strong>foxy</strong></p></blockquote><h2 id="2-配置">2.配置</h2><p>默认情况下ROS1和<strong>ROS2</strong>存在版本切换的问题，因为同一终端里无法同时使用<strong>ROS1</strong>和<strong>ROS2</strong>。</p><p>因此可通过修改<code>~/.bashrc</code>文件来选择每个终端中使用的ROS版本。</p><ol><li><p>打开并编辑<code>~/.bashrc</code>文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>往<code>~/.bashrc</code>文件的末尾添加以下代码(crtl+o-&gt;enter-&gt;crtl+x保存退出)：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ros noetic(1) or ros2 foxy(2)?&quot;</span></span><br><span class="line"><span class="built_in">read</span> edition</span><br><span class="line">ps=<span class="variable">$PS1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$edition</span>&quot;</span> -eq <span class="string">&quot;1&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">source</span> /opt/ros/noetic/setup.bash</span><br><span class="line">  <span class="comment"># echo &quot;ros noetic(1) has been chosen！&quot;</span></span><br><span class="line">  PS1=<span class="string">&quot;(ros1-noetic)<span class="variable">$ps</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">source</span> /opt/ros/foxy/setup.bash</span><br><span class="line">  <span class="comment"># echo &quot;ros2 foxy(2) has been chosen！&quot;</span></span><br><span class="line">  PS1=<span class="string">&quot;(ros2-foxy)<span class="variable">$ps</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ol><p>这样每次新建终端都会询问你使用的<strong>ROS</strong>版本，这时输入<strong>1</strong>或<strong>2</strong>来切换<strong>ROS</strong>版本即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ros noetic(1) or ros2 foxy(2)?</span><br><span class="line">2</span><br><span class="line">ros2 foxy(2) has been chosen！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 问题大全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu20.04之VNC的安装与使用</title>
      <link href="/posts/1b0bbd7b.html"/>
      <url>/posts/1b0bbd7b.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>笔者最近被VNC折磨了很久，网上的教程杂乱不堪，特此写一篇教程做笔记</p></div><div class="note info flat"><p>本教程适用于Ubuntu20.04及以下版本，Ubuntu22.04版本或有出入</p></div><h2 id="1-安装图形桌面">1.安装图形桌面</h2><blockquote><p>如果linux系统已经安装了图形桌面可跳过这一步</p></blockquote><p>Ubuntu20.04主流的图形桌面有<strong>gnome</strong>和<strong>xface</strong>两种，两种桌面的安装方式我都会写，但这里较推荐<strong>gnome</strong>桌面</p><h3 id="1-1选择安装gnome桌面">1.1选择安装gnome桌面</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update <span class="comment">#更新软件源</span></span><br><span class="line">sudo apt install ubuntu-gnome-desktop <span class="comment">#安装gnome</span></span><br><span class="line">sudo systemctl start gdm <span class="comment">#刚安装Gnome，需要启动GDM服务以初识化桌面</span></span><br></pre></td></tr></table></figure><h3 id="1-2选择安装xface桌面">1.2选择安装xface桌面</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update <span class="comment">#更新软件源</span></span><br><span class="line">sudo apt install xfce4 xfce4-goodies <span class="comment">#安装xface</span></span><br></pre></td></tr></table></figure><blockquote><img src="https://s2.loli.net/2023/10/03/PL6Ncl7Ep5VrSYo.png" style="zoom:50%;" /><p>这个选项选择是否启用<strong>显示管理器</strong>，选择第一个并Enter</p><p><strong>显示管理器</strong>是一个程序，使您的 Linux 发行版拥有图形登录功能。它还负责在您使用用户名和密码登录后启动显示服务器和桌面环境</p></blockquote><h2 id="2-安装VNC-Server">2.安装VNC-Server</h2><blockquote><p>主流的vnc软件有<a href="https://www.realvnc.com/">RealVNC</a>、<a href="https://www.tightvnc.com/">TightVNC</a>、x11vnc等</p><p><strong>RealVNC</strong>是由VNC团队部分成员开发，分为全功能商业版及免费版。<strong>TightVNC</strong>则强调节省带宽使用。<strong>UltraVNC</strong>加入了TightVNC的部分程序及加强效能的图形映射驱动程序，并结合Active Directory及<strong>NTLM</strong>的帐号密码认证，但仅有<strong>Windows</strong>版本。 <strong>Vine Viewer</strong>是<strong>MacOSX</strong>的VNC用户端。这些软件各有所长，例如UltraVNC支持文件传输以及全屏模式。而这些软件间大多遵循基本的VNC协议，因此大多可互通使用。</p><p>需要说明的是VNC分为<strong>Server</strong>（服务端，用于提供图像数据）和<strong>Client</strong> （客户端，用于接收图像数据），这里推荐使用<strong>TightVNC Server</strong> + <strong>RealVNC View</strong>的组合</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install tigervnc-standalone-server <span class="comment">#在ubuntu上安装tigervnc-server</span></span><br></pre></td></tr></table></figure><p>安装完<strong>tigervnc</strong>后需要启动一个<strong>vncserver</strong>来初识化密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vncserver <span class="comment">#启动vnc-server</span></span><br></pre></td></tr></table></figure><p>首次启动需要定义一个6-8位的密码，超8位密码会被自动截断</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">You will require a password to access your desktops.</span><br><span class="line"></span><br><span class="line">Password:</span><br><span class="line">Verify:</span><br><span class="line">Would you like to enter a view-only password (y/n)? n</span><br></pre></td></tr></table></figure><p>设置完<strong>vncserver</strong>的密码后先关闭<strong>vncserver</strong>做进一步的配置，否则现在连接你的客户端上是一篇空白的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vncserver -kill :*</span><br></pre></td></tr></table></figure><blockquote><p><strong>Tip:</strong> 你可以通过下面的命令修改你的<strong>vncserver</strong>的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vncpasswd</span><br></pre></td></tr></table></figure></blockquote><h2 id="3-配置VCN-Server">3.配置VCN-Server</h2><ol><li>创建并添加<strong>xstartup</strong>文件到<code>/etc/vnc/xstartup</code>（这步一定要做）</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> /etc/vnc <span class="comment">#创建VNC目录</span></span><br><span class="line">sudo nano /etc/vnc/xstartup <span class="comment">#创建并编辑xstartup文件</span></span><br></pre></td></tr></table></figure><ol start="2"><li>向<code>/etc/vnc/xstartup</code>文件中添加下面的内容（Ctrl+O-&gt;Enter-&gt;Ctrl+X保存文件）</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> x<span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> = x<span class="string">&quot;&quot;</span> &amp;&amp; SHELL=/bin/bash</span><br><span class="line"><span class="built_in">test</span> x<span class="string">&quot;<span class="variable">$1</span>&quot;</span>     = x<span class="string">&quot;&quot;</span> &amp;&amp; <span class="built_in">set</span> -- default</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> SESSION_MANAGER</span><br><span class="line"><span class="built_in">unset</span> DBUS_SESSION_BUS_ADDRESS</span><br><span class="line"></span><br><span class="line">vncconfig -iconic &amp;</span><br><span class="line"><span class="string">&quot;<span class="variable">$SHELL</span>&quot;</span> -l &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">export XDG_SESSION_TYPE=x11</span></span><br><span class="line"><span class="string">export GNOME_SHELL_SESSION_MODE=ubuntu</span></span><br><span class="line"><span class="string">dbus-launch --exit-with-session gnome-session --session=ubuntu</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">vncserver -<span class="built_in">kill</span> <span class="variable">$DISPLAY</span></span><br></pre></td></tr></table></figure><blockquote><p>使用<strong>xface</strong>桌面的添加下面的内容</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Start up the standard system desktop</span></span><br><span class="line"><span class="built_in">unset</span> SESSION_MANAGER</span><br><span class="line"><span class="built_in">unset</span> DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">/usr/bin/startxfce4</span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; <span class="built_in">exec</span> /etc/vnc/xstartup</span><br><span class="line">[ -r <span class="variable">$HOME</span>/.Xresources ] &amp;&amp; xrdb <span class="variable">$HOME</span>/.Xresources</span><br><span class="line">x-window-manager &amp;</span><br></pre></td></tr></table></figure></blockquote><ol start="3"><li>设置为可执行文件</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /etc/vnc/xstartup</span><br></pre></td></tr></table></figure><ol start="4"><li>创建并添加<strong>xstartup</strong>文件到<code>~/.vnc/xstartup</code>（区别于上一步，这步也要做）</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano ~/.vnc/xstartup <span class="comment">#创建并编辑xstartup文件</span></span><br></pre></td></tr></table></figure><ol start="5"><li>向<code>~/.vnc/xstartup</code>文件中添加下面的内容（Ctrl+O-&gt;Enter-&gt;Ctrl+X保存文件）</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; <span class="built_in">exec</span> /etc/vnc/xstartup</span><br><span class="line">[ -r <span class="variable">$HOME</span>/.Xresources ] &amp;&amp; xrdb <span class="variable">$HOME</span>/.Xresources</span><br></pre></td></tr></table></figure><ol start="6"><li>设置为可执行文件</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> a+x ~/.vnc/xstartup</span><br></pre></td></tr></table></figure><ol start="7"><li>启动<strong>VCN-Server</strong></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vncserver :1 -geometry 1920x1080 -depth 24 -localhost no</span><br></pre></td></tr></table></figure><blockquote><p><strong>注：-localhost no参数一定要有，没有的话可能无法正常连接，其余参数就是分辨率之类的了，可自定义参数</strong></p><p>如果输出下面的类似内容则说明服务器端正常运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">New <span class="string">&#x27;bytexd:1 (edxd)&#x27;</span> desktop at :1 on machine bytexd</span><br><span class="line">Use xtigervncviewer -SecurityTypes VncAuth -passwd /home/edxd/.vnc/passwd :1 to connect to the VNC server.</span><br></pre></td></tr></table></figure></blockquote><h2 id="4-连接VNC">4.连接VNC</h2><ol><li><p>安装<strong>VNC View</strong>，VNC View就有很多选择了</p><ul><li><strong>TigerVNC-Client</strong>：<a href="https://www.tightvnc.com/download/2.8.81/tightvnc-2.8.81-gpl-setup-64bit.msi">前往下载</a></li><li><strong>RealVNC-Client</strong>：<a href="https://downloads.realvnc.com/download/file/vnc.files/VNC-Connect-Installer-2.0.0-Windows.exe">前往下载</a></li><li><strong>MobaXterm（推荐）</strong>：<a href="https://download.mobatek.net/2322023060714555/MobaXterm_Installer_v23.2.zip">前往下载</a></li></ul></li><li><p>连接<strong>VNC</strong></p></li></ol><blockquote><p>大部分的<strong>VNC-Client</strong>都是只需要Ubuntu的 <strong>IP</strong> + <strong>端口</strong> + <strong>密码</strong> 即可，这里说明一下<strong>端口</strong></p><p><strong>端口号</strong>就是<strong>5900+服务器索引</strong>，如 <code>vncserver :1</code>指令开启的是第一个服务器，因此<strong>第一个服务器的端口</strong>就是<strong>5901</strong>，类推，<code>vncserver :2</code>的<strong>端口</strong>就是<strong>5902</strong></p></blockquote><h2 id="5-设置VNC-Server为系统服务（可选）">5.设置VNC-Server为系统服务（可选）</h2><p>为设置<strong>vnc</strong>开机自启，不用每次都需要输入指令开启，可以将<strong>vnc-server</strong>的开启指令添加到系统服务中</p><ol><li>创建并添加到 <code>/etc/systemd/system/vncserver@.service</code> 文件中</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/systemd/system/vncserver@.service</span><br></pre></td></tr></table></figure><p>向文件里面添加以下内容</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Start TigerVNC server at startup</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">PAMName=login</span><br><span class="line">PIDFile=/home/tom/.vnc/%H:%i.pid</span><br><span class="line">ExecStartPre=-/usr/bin/vncserver -<span class="built_in">kill</span> :%i &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">ExecStart=/usr/bin/vncserver -<span class="built_in">fg</span> -depth 24 -geometry 1920x1080 -localhost no :%i</span><br><span class="line">ExecStop=/usr/bin/vncserver -<span class="built_in">kill</span> :%i</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ol start="2"><li>开机自启<code>vncserver</code></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload <span class="comment">#加载引导程序</span></span><br><span class="line">sudo sudo systemctl <span class="built_in">enable</span> vncserver@1.service <span class="comment"># 设置开机自启</span></span><br></pre></td></tr></table></figure><blockquote><p>输出内容如下:</p><p>Created symlink /etc/systemd/system/multi-user.target.wants/vncserver@1.service → /etc/systemd/system/vncserver@.service.</p></blockquote><ol start="3"><li>启动服务</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sudo systemctl start vncserver@1.service</span><br></pre></td></tr></table></figure><ol start="4"><li>检查服务状态</li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sudo systemctl status vncserver@1.service</span><br></pre></td></tr></table></figure><blockquote><p>输出下面内容则服务启动正常:</p><p><img src="https://s2.loli.net/2023/10/03/ZfV45uTRpErjkCD.png" alt="image-20230717215921211"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 知识分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卡尔曼滤波与扩展卡尔曼滤波及实现</title>
      <link href="/posts/63a11c75.html"/>
      <url>/posts/63a11c75.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-原理">1.原理</h2><blockquote><p>下面的文章已经总结得够详细了，就不另起篇幅了</p><p><a href="https://www.bzarg.com/p/how-a-kalman-filter-works-in-pictures/">How a Kalman filter works, in pictures | Bzarg</a></p><p><a href="https://zhuanlan.zhihu.com/p/496822429">卡尔曼滤波+扩展卡尔曼滤波公式推导以及两者的关联 - 知乎 (zhihu.com)</a></p><p>在此推荐一篇最详细的教程：<a href="https://www.kalmanfilter.net/CN/default_cn.aspx">卡尔曼滤波教程 (kalmanfilter.net)</a></p></blockquote><h2 id="2-实现">2.实现</h2><p>实现的过程就是依据卡尔曼7大公式一步一步完成的</p><p><img src="https://s2.loli.net/2023/10/03/kqyRwcCF8pgmf29.png" alt="image-20230707113717898"></p><blockquote><p>待补充。。。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS指令大全</title>
      <link href="/posts/f1cb77fb.html"/>
      <url>/posts/f1cb77fb.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-ROS目录架构">1.ROS目录架构</h2><div class="tabs" id="ros1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="ros1-1">ROS1</button><button type="button" class="tab " data-href="ros1-2">ROS2</button></ul><div class="tab-contents"><div class="tab-item-content active" id="ros1-1"><img src="https://s2.loli.net/2023/10/03/m7ZlfG6kDNjprQX.png" alt="image-20230629234421096" style="zoom:60%;" /><blockquote><p><b>工作空间（Workspace）</b>是一个存放工程开发相关文件的文件夹</p><ul><li><b>src：</b>代码空间（Source Space）</li><li><b>build：</b>编译空间（Build Space）</li><li><b>devel：</b>开发空间（Development Space）</li><li><b>install：</b>安装空间（Install Space）</li></ul></blockquote></div><div class="tab-item-content" id="ros1-2"><img src="https://s2.loli.net/2023/10/03/pZtoijqfJGUw5ke.png" alt="image-20230630000753143" style="zoom:50%;" /><p><b>工作空间（Workspace）</b>是一个存放项目开发相关文件的文件夹；是开发过程的大本营。</p><ul><li><b>src：</b>代码空间（Source Space）</li><li><b>build：</b>编译空间（Build Space）</li><li><b>install：</b>安装空间（Install Space）</li><li><b>log：</b>日志空间（Log Space）</li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-ROS常用指令">2.ROS常用指令</h2><h3 id="2-1ROS1指令">2.1ROS1指令</h3><h4 id="2-1-1工作空间和功能包指令">2.1.1工作空间和功能包指令</h4><p><code>创建工作空间</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/catkin_ws/src</span><br><span class="line">cd ~/catkin_ws/src</span><br><span class="line">catkin_init_workspace</span><br></pre></td></tr></table></figure><p><code>编译工作空间</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/catkin_ws</span><br><span class="line">catkin_make</span><br></pre></td></tr></table></figure><p><code>设置环境变量</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source devel/setup.bash</span><br></pre></td></tr></table></figure><p><code>检查环境变量</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $ROS_PACKAGE_PATH</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/10/03/EzJXNk29qMKv5L1.png" alt="image-20230629233858309"></p><p><code>创建功能包</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/catkin_ws/src</span><br><span class="line">catkin_create_pkg test_pkg std_msgs rospy roscpp</span><br></pre></td></tr></table></figure><p><code>编译功能包</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/catkin_ws</span><br><span class="line">catkin_make</span><br><span class="line">source ~/catkin_ws/devel/setup.bash</span><br></pre></td></tr></table></figure><blockquote><p>注：同一工作空间下，不允许存在同名功能包；不同工作空间下，允许存在同名功能包！</p></blockquote><h4 id="2-1-2基本指令">2.1.2基本指令</h4><ul><li><code>source devel/setup.bash</code>：更新当前运行环境</li><li><code>roscorce</code>：启动master主节点，运行 ROS1 程序之前必须要执行的一个命令，执行后该程序将一直处于 <strong>运行/挂起</strong> 状态，直至结束</li><li><code>rosrun 包名 可执行程序名</code>：启动单个ros程序</li><li><code>roslaunch 包名 launch文件名</code>：一次性启动多个ros程序，同时launch文件中可能包含程序运行用到的参数</li></ul><h4 id="2-1-3节点命令">2.1.3节点命令</h4><ul><li><code>rosnode list</code>：查看当前存在的全部节点</li><li><code>rosnode info 节点名</code>：查看节点基本信息</li><li><code>rosnode ping 节点名</code>：查看节点是否能正常通信</li><li><code>rosnode machine 计算机主机名</code>：查看其他计算机中的节点信息</li></ul><blockquote><p>可在终端中查看计算机主机名：</p><ol><li>终端输入命令行开头有“xxx@xxx”格式的信息，@前代表当前所在的用户名，@之后代表的是计算机的主机名</li><li>②执行命令hostname查看计算机主机名</li></ol></blockquote><ul><li><code>rosnode kill 节点名</code>：杀死某一节点</li><li><code>rosnode clean</code>：彻底清楚已经结束却仍然残留的节点</li></ul><h4 id="2-1-4话题命令">2.1.4话题命令</h4><ul><li><code>rostopic list</code>：查看当前存在的所有话题</li><li><code>rostopic info 话题名</code>：查看某一话题的基本信息</li><li><code>rostopic echo 话题名</code>：输出某一话题发布的信息</li><li><code>rostopic hz 话题名</code>：查看某一话题发布频率</li><li><code>rostopic pub 话题名 参数信息</code>：动态的发布某一话题信息，该话题必须是处于运行状态的</li></ul><h4 id="2-1-5服务命令">2.1.5服务命令</h4><ul><li><code>rosservice list</code>：查看当前存在的所有服务</li><li><code>rosservice info 服务名</code>：查看某一服务的基本信息</li><li><code>rosservice call 服务名 参数信息</code>：动态请求服务</li></ul><h4 id="2-1-6消息命令">2.1.6消息命令</h4><ul><li><code>rosmsg show 消息名称 / rosmsg info 消息名称</code>：查看某一消息的数据结构</li><li><code>rosmsg md5 消息名称</code>：查看当前消息的md5值，常用于不同开发者使用同一自定义消息时，出现自定义消息被一方更改，而另一方不知情，导致程序运行失败的情况</li></ul><h4 id="2-1-7服务消息命令">2.1.7服务消息命令</h4><ul><li><code>rossrv show 消息名称 / rossrv info 消息名称</code>：查看某一服务消息的数据结构</li><li><code>rossrv md5 消息名称</code>：查看当前服务消息的md5值</li></ul><h4 id="2-1-8录包命令">2.1.8录包命令</h4><ul><li><code>rosbag record [-O bag_name.bag] 话题</code>：录制指定话题到文件中</li><li><code>rosbag info 包名</code>：显示一个bag包的基本信息，比如包含哪些话题</li><li><code>rosbag play [--pause] [-l] 包名</code>：回放一个或多个bag，–pause：空格控制暂停，-l：循环播放</li><li><code>rosbag check 包名</code>：检查一个bag包在当前系统中是否可以回放和迁移</li><li><code>rosbag compress 包名</code>：解压缩一个或多个bag包</li><li><code>rosbag decompress 包名</code>：解压缩一个或多个bag包</li><li><code>rosbag reindex 包名</code>：重新索引一个或多个损坏的bag包</li></ul><h4 id="2-1-9数据可视化命令">2.1.9数据可视化命令</h4><ul><li><code>rviz (rviz文件名)</code>：可视化展示话题、服务等数据信息</li><li><code>gazebo</code>：3D展示 ROS 程序</li><li><code>rqt</code>：展示节点之间的通信关系</li><li><code>rosrun rqt_publisher rqt_publisher</code>：动态发送话题信息，常用于动态调试机器运动速度</li></ul><blockquote><p><strong>更高阶的可视化指令移步古大佬的论坛观看：</strong><a href="https://www.guyuehome.com/34172">ROS 常用GUI测试工具 - 古月居 (guyuehome.com)</a></p></blockquote><h3 id="2-2ROS2指令">2.2ROS2指令</h3><h4 id="2-2-1工作空间和功能包指令">2.2.1工作空间和功能包指令</h4><p><code>创建工作空间</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/dev_ws/src</span><br><span class="line">cd ~/dev_ws/src</span><br></pre></td></tr></table></figure><p><code>编译工作空间</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-colcon-ros</span><br><span class="line">cd ~/dev_ws</span><br><span class="line">colcon build</span><br></pre></td></tr></table></figure><p><code>设置环境变量</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source install/local_setup.sh</span><br><span class="line">echo &quot;source ~./dev_ws/install/local_setup.sh&quot; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure><p><code>创建功能包</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/dev_ws/src</span><br><span class="line">ros2 pkg create --build-type ament_cmake 包名</span><br><span class="line">ros2 pkg create --build-type ament_python 包名</span><br></pre></td></tr></table></figure><blockquote><p>注：<strong>ament_cmake</strong>和<strong>ament_python</strong>分别为c++和python格式的功能包，两种功能包格式不同</p></blockquote><p><code>编译功能包</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~/dev_ws/src</span><br><span class="line">colcon build</span><br><span class="line">cd ~/dev_ws</span><br><span class="line">source install/local_setup.bash</span><br></pre></td></tr></table></figure><blockquote><p>注：同一工作空间下，不允许存在同名功能包；不同工作空间下，允许存在同名功能包！</p></blockquote><p><code>自动安装依赖</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y python3-pip</span><br><span class="line">sudo pip3 install rosdepc</span><br><span class="line">sudo rosdepc init &amp; rosdepc update</span><br><span class="line">cd ~/dev_ws</span><br><span class="line">rosdepc install -i --from-path src --rosdistro humble -y</span><br></pre></td></tr></table></figure><blockquote><p>注：自动安装依赖常用于从其余地方copy的代码文件，一般都需要先安装一些依赖包才能正常编译。</p><p><strong>humble</strong>要根据自己的ros2版本型号来进行修改</p><p>由于国外网络受限，推荐使用鱼香ROS大佬的rosdepc，更适用于国内环境</p></blockquote><h4 id="2-2-3包管理工具-ros2-pkg">2.2.3包管理工具-ros2 pkg</h4><ul><li><code>ros2 pkg create 包名</code>：创建功能包，指定包名、编译方式、依赖项、节点名等</li><li><code>ros2 pkg list</code>：查看系统中功能包列表</li><li><code>ros2 pkg executables 包名</code>：查看包内可执行文件列表</li></ul><h4 id="2-2-4节点运行工具-ros2-run">2.2.4节点运行工具-ros2 run</h4><ul><li><code>ros2 run 包名 节点名</code>：运行包内节点功能</li></ul><h4 id="2-2-5节点查看工具-ros2-node">2.2.5节点查看工具-ros2 node</h4><ul><li><code>ros2 node list</code>：查看当前域内（ROS_DOMAIN_ID相同的节点组）活动的节点列表</li><li><code>ros2 node info 节点名</code>：查看节点详细信息，包括订阅、发布的消息，开启的服务和动作等</li></ul><h4 id="2-2-6主题操作工具-ros2-topic">2.2.6主题操作工具-ros2 topic</h4><ul><li><code>ros2 topic list</code>：列出域内可使用的主题列表</li><li><code>ros2 topic info 主题名</code>：显示主题消息类型，订阅者数量，发布者数量等</li><li><code>ros2 topic find 消息类型</code>：按消息类型查找相关主题</li><li><code>ros2 topic hz 主题名</code>：显示主题平均发布频率</li><li><code>ros2 topic bw 主题名</code>：显示所查阅主题的带宽</li><li><code>ros2 topic delay 主题名</code>：通过header中的时间戳计算消息延迟</li><li><code>ros2 topic echo 主题名</code>：在控制台显示主题消息</li><li><code>ros2 topic pub 主题名 消息类型 消息内容</code>：通过命令行发布指定主题消息</li></ul><h4 id="2-2-7接口操作工具-ros2-interface">2.2.7接口操作工具-ros2 interface</h4><ul><li><code>ros2 interface list</code>：分类显示系统内所有的接口，包括消息（Messages）、服务（Services）、动作（Actions）</li><li><code>ros2 interface package 接口名</code>：显示指定接口包内的子接口</li><li><code>ros2 interface packages</code>：显示指定接口包</li><li><code>ros2 interface show 接口名</code>：显示指定接口的详细内容</li><li><code>ros2 interface proto 消息名</code>：显示消息模板</li></ul><h4 id="2-2-8服务操作工具-ros2-service">2.2.8服务操作工具-ros2 service</h4><ul><li><code>ros2 service list</code>：列出域内服务列表，-t可同时列出服务消息类型</li><li><code>ros2 service type 服务名</code>：列出指定服务的数据类型</li><li><code>ros2 service find 服务类型</code>：列出域内使用指定数据类型的服务</li><li><code>ros2 service call 服务名 类型名 请求数据</code>：通过命令行同步请求服务<ul><li>示例：<code>ros2 service call /change_map_name duckietown_interface/srv/ChangeMap &quot;&#123;map_name: '4way'&#125;&quot;</code></li></ul></li></ul><h4 id="2-2-9动作操作工具-ros2-action">2.2.9动作操作工具-ros2 action</h4><ul><li><code>ros2 action list</code>：列出域内动作列表，-t可同时列出服务消息类型</li><li><code>ros2 action info 动作名</code>：查看指定action信息，可以看到服务端和客户端情况</li><li><code>ros2 action send_goal 动作名 类型 数据 --feedback</code>：模拟客户端发起动作请求<ul><li>示例：<code>ros2 action send_goal /crossing_acton duckietown_interface/action/Crossing &quot;&#123;speed: 0.2, direction: 'right'&#125;&quot; --feedback</code></li></ul></li></ul><h4 id="2-2-10参数操作工具-ros2-param">2.2.10参数操作工具-ros2 param</h4><ul><li><code>ros2 param list</code>：列出域内可用参数列表</li><li><code>ros2 param get 节点名 参数名</code>：查看指定参数当前的值</li><li><code>ros2 param set 节点名 参数名</code>：设置指定参数的值</li><li><code>ros2 param delete 节点名 参数名</code>：删除参数</li><li><code>ros2 param describe 节点名 参数名</code>：显示有关已声明参数的描述性信息，声明参数时添加描述性信息可查看</li><li><code>ros2 param dump 节点名 --output-dir &lt;保存路径&gt;</code>：所有当前参数值“转储”到文件中保存以供以后使用<ul><li>示例：<code>ros2 param dump /line_detect_node --output-dir ~/ros2_ws/src/line_detect/line_detect/</code></li></ul></li><li><code>ros2 run 包名 节点名 --ros-args --params-file 文件名</code>：加载已有参数到节点中<ul><li>示例：<code>ros2 run line_detect line_detect_node --ros-args --params-file src/line_detect/line_detect/line_detect_node.yaml</code></li></ul></li></ul><h4 id="2-2-11数据可视化命令">2.2.11数据可视化命令</h4><ul><li><code>rviz2 (rviz2 文件名)</code>：可视化展示话题、服务等数据信息</li><li><code>rqt</code>：展示节点之间的通信关系</li><li><code>ros2 run rqt_console rqt_console</code>：启动rqt_console</li></ul><blockquote><p><strong>更多命令行参数移步下面的网址观看：</strong></p><p><a href="https://blog.csdn.net/aibingjin/article/details/123899829">(70条消息) ROS2学习笔记（五）-- ROS2命令行操作常用指令总结（一）_溪风沐雪的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/aibingjin/article/details/124056012">(70条消息) ROS2学习笔记（九）-- ROS2命令行操作常用指令总结（二）_ros2 run_溪风沐雪的博客-CSDN博客</a></p><p><a href="https://www.guyuehome.com/35608">ROS2常用命令行工具 - 古月居 (guyuehome.com)</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 指令大全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物体路径规划项目笔记</title>
      <link href="/posts/934e71d1.html"/>
      <url>/posts/934e71d1.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-文献解析">1.文献解析</h2><div class="row">    <embed src="https://mybog.s3.bitiful.net/ros/word/Perception_and_Avoidance_of_Multiple_Small_Fast_Moving_Objects_for_Quadrotors_With_Only_Low-Cost_RGBD_Camera.pdf" width="100%" height="550" type="application/pdf"></div><div class="note info flat"><blockquote><p>相关论文：<a class="btn-anzhiyu " href="https://mybog.s3.bitiful.net/ros/word/Perception_and_Avoidance_of_Multiple_Small_Fast_Moving_Objects_for_Quadrotors_With_Only_Low-Cost_RGBD_Camera.pdf"   title="前往下载"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>前往下载</span></a></p><p>论文代码：<a href="https://github.com/arclab-hku/fast-dodging">arclab-hku/fast-dodging: dodging fast small moving objects with RGBD sensor (github.com)</a></p></blockquote></div><blockquote><h3 id="Chatpaper">Chatpaper</h3><h4 id="Basic-Information">Basic Information:</h4><ul><li>Title: Perception and Avoidance of Multiple Small Fast Moving Objects for Quadrotors With Only Low-Cost RGBD Camera (基于低成本RGBD相机的四旋翼机器人对多个小型快速移动物体的感知和避障)</li><li>Authors: Minghao Lu, Han Chen, and Peng Lu</li><li>Affiliation: Department of Mechanical Engineering, The University of Hong Kong, Hong Kong, SAR, China (Minghao Lu and Peng Lu); Department of Aeronautical and Aviation Engineering, The Hong Kong Polytechnic University, Hong Kong, SAR, China (Han Chen)</li><li>Keywords: Aerial systems, collision avoidance, motion and path planning, perception and autonomy</li><li>URLs: <a href="https://ieeexplore.ieee.org/document/9635587">Paper</a>, <a href="https://github.com/arclab-hku/fast-dodging">GitHub</a></li></ul><h4 id="论文简要">论文简要 :</h4><ul><li>本文提出了一种基于低成本RGBD相机的四旋翼机器人感知和避障系统，能够快速准确地感知和避开小型动态障碍物，实现在复杂环境中的导航。</li></ul><h4 id="背景信息">背景信息:</h4><ul><li>论文背景: 随着机器人技术的发展，人们希望机器人能够帮助人类完成一些繁重和危险的工作，如探索危险和未知的环境。无人机，特别是微型无人机，由于其在空间中的灵活性，已成为探索未知环境的最佳选择。</li><li>过去方案: 过去的研究已经实现了无人机在静态未知环境中的自主飞行，但是环境中的快速移动物体仍然对无人机构成严重威胁。现有的研究主要基于事件相机来避免快速移动物体，但是事件相机的分辨率较低，对于小型快速移动物体的定位误差较大。此外，现有的方法在感知和避障方面仍存在一些挑战，如多目标跟踪和动态障碍物避免。</li><li>论文的Motivation: 鉴于现有方法的局限性，本文旨在提出一种基于低成本RGBD相机的系统，实现对小型快速移动物体的感知和避障。与现有研究相比，本文使用了低成本的RGBD相机，并考虑了多个物体，从而引入了更多的挑战。本文的目标是实现四旋翼机器人对小型快速移动物体的感知和避障，为无人机在复杂环境中的自主导航提供解决方案。</li></ul><h4 id="方法">方法:</h4><ul><li>a. 理论背景:<ul><li>本文提出了一种使用低成本RGBD相机进行四旋翼机器人感知和避障的系统。该系统使用Yolo-Fastest算法在RGB帧中检测移动物体，从深度图像中获取3D信息，并使用3D-SORT算法跟踪物体。它还生成优化的平滑轨迹以避开静态和动态障碍物。该系统在仿真和实际实验中进行了测试。</li></ul></li><li>b. 技术路线:<ul><li>本文使用低成本深度相机来感知和避免小型快速移动物体的挑战。系统使用3D-SORT算法进行物体跟踪，并使用轨迹优化进行动态避障。</li></ul></li></ul><h4 id="结果">结果:</h4><ul><li>a. 详细的实验设置:<ul><li>本文未提及实验设置。</li></ul></li><li>b. 详细的实验结果:<ul><li>该自主无人机系统成功避开了从不同方向投掷的四个球。无人机与球之间的距离约为5米，球投掷后的速度约为5米/秒。该系统使用价格较低的传感器实现了令人满意的感知精度，相比使用事件相机的其他工作。运动规划方法在时间和能量成本方面表现出更好的安全性和最优性，同时仍能执行导航任务。然而，与相机的视野相关的一些故障情况存在。如果球飞出相机的视野，跟踪将失败。尽管如此，由于球在视野之外，它没有与无人机发生碰撞。未来的工作可以通过增加更多相机来扩大视野，并增强在不同光照条件下的感知鲁棒性。</li></ul></li></ul></blockquote><h2 id="2-名词解析">2.名词解析</h2><ul><li><p><strong>RGB-D(RGB+Depth)相机</strong></p><ul><li><p>1、深度图(Depth Texture)定义</p><blockquote><p>深度图就是从图像采集器到场景中各点的距离（深度）作为像素值的图像。<br>下图右侧两栏图像就是我们说的深度图。</p><img src="https://img1.imgtp.com/2023/06/28/iL7OUB26.png" style="zoom:50%;" /></blockquote></li><li><p>2、RGB-D定义</p><blockquote><p>RGB-D=RGB+D(Depth Map)<br>如果我们严格的定义深度图，那么应该是纯深度的图。但好多地方都把深度图和RGB-D感念当作同一个了</p></blockquote></li><li><p>3、深度图相机和RGBD相机的区别</p><blockquote><p><em>深度相机</em>就是能够直接输出深度的相机，或者是能够通过软件间接计算出深度，或者通过物理方法直接测量深度。<br><em>RGBD相机</em>就是特指通过物理方式测距的。得到的是RGB图+深度图。</p><p>深度相机的分类：</p><ul><li><strong>单目结构光</strong>：有一个发射器，一个接收器</li><li><strong>双目结构光</strong>：一个发射器，两个接收器，得到是两个红外图</li></ul><p>RGBD相机的分类：</p><ul><li><p>一类是<strong>结构光法</strong>，比如Kinect v1、Iphone X；</p><p>结构光法是为了解决双目匹配问题产生的，解决对环境光照敏感问题，是红外光，晚上也可以用，不依赖光照和纹理。<br>其中Kinect v1是最早的结构光法，是以色列的PrimeSense公司，后来被苹果收购了，用于Iphone X，人脸解锁非常稳定。在空间上的分辨率是3mm，深度上的分辨率是1cm。（2m距离）</p></li><li><p>一类是<strong>飞行时间（ToF）法</strong>，比如Kinect v2、Phab 2 Pro。<br>飞行时间法就是发射一束光脉冲（一般为不可见光），然后经过物体反射回去，再接收到光脉冲。通过探测飞行的这段时间来计算被测物体离相机的距离。<br>TOF的测量精度不会随着测量距离的增大而降低，而且抗干扰能力比较强，适合测量距离要求比较远的场合，比如无人驾驶、AR等等。但是他的功耗比较大，分辨率较低、深度图的质量较差。</p></li></ul></blockquote></li><li><p>4、RGB-D相机的问题</p><blockquote><p><strong>深黑色物体的影响：</strong></p><p>白光中存在光的互补，即：黄光和蓝光经过一定比例进行混合会得到白光。而物体对光的选择性吸收决定了物体本身的颜色。比如一束白光经过一个溶液，溶液吸收掉黄光，那么透出溶液的就是蓝光，溶液表现的颜色也就是蓝色。<strong>深黑色物体可以吸收大量的红外光所以会导致测量不准</strong>，这就使接收到的红外光很少。</p><img src="https://img1.imgtp.com/2023/06/28/6jofE1L4.png" style="zoom:50%;" /><p><strong>表面光滑物体的影响：</strong></p><p>漫反射是多个角度清晰成像的基础<br>镜面反射容易发生过曝光和欠曝光，比如金属表面、反光表面等</p><img src="https://s2.loli.net/2023/10/03/cvX5DhVlWJC2EeY.png" alt="image-20230628223356768" style="zoom:50%;" /><p><strong>（半）透明物体的影响：</strong></p><p>半透明物体会经过两次反射，如果是透明物体，就会直接穿过了，导致深度测量不准。</p><img src="https://s2.loli.net/2023/10/03/UqO3dtoGyNYB1sl.png" alt="image-20230628223551597" style="zoom:50%;" /><p>玻璃透射导致接收不到红外光。</p><p><strong>视差的影响：</strong></p><p>结构光深度相机的红外发射端和接收端有一定的距离，因此在物体的边缘有明显视差。</p><p><strong>总结：</strong></p><ul><li>不适合室外使用</li><li>受到深黑色物体、半透明物体、镜面反射物体、视差的影响</li><li>功耗大</li><li>分辨率比较低</li><li>深度图质量和硬件关系密切</li><li>成本较高，比双目相机贵</li></ul><p><strong>改进：</strong></p><p><a href="https://mybog.s3.bitiful.net/ros/word/Practical_and_accurate_calibration_of_RGB-D_cameras_using_spheres.pdf">使用球体对rgb-d相机进行实用且准确的校准</a></p></blockquote></li></ul></li><li><p><strong>Yolo-Fast</strong></p></li></ul><blockquote><p><strong>介绍：</strong></p><p>基于Yolo的低功耗，超轻量级通用目标检测算法，参数仅为250k，智能手机移动终端的速度可以达到300fps</p><p><strong>实现：</strong></p><p><a href="https://blog.csdn.net/weixin_37598106/article/details/112544854">(72条消息) 全网最最最轻量级检测网络 yolo-fastest 快速上手_Lebhoryi的博客-CSDN博客</a></p><p><strong>对比：</strong></p><table><thead><tr><th style="text-align:center">Network</th><th style="text-align:center">mAPval 0.5</th><th style="text-align:center">mAPval 0.5:0.95</th><th style="text-align:center">Resolution</th><th style="text-align:center">Run Time(4xCore)</th><th style="text-align:center">Run Time(1xCore)</th><th style="text-align:center">Params(M)</th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://github.com/ultralytics/yolov5">yolov5s</a></td><td style="text-align:center">56.8%</td><td style="text-align:center">37.4%</td><td style="text-align:center">640X640</td><td style="text-align:center">395.31ms</td><td style="text-align:center">1139.16ms</td><td style="text-align:center">7.2M</td></tr><tr><td style="text-align:center"><a href="https://github.com/meituan/YOLOv6">yolov6n</a></td><td style="text-align:center">-</td><td style="text-align:center">30.8%</td><td style="text-align:center">416X416</td><td style="text-align:center">109.24ms</td><td style="text-align:center">445.44ms</td><td style="text-align:center">4.3M</td></tr><tr><td style="text-align:center"><a href="https://github.com/Megvii-BaseDetection/YOLOX">yolox-nano</a></td><td style="text-align:center">-</td><td style="text-align:center">25.8%</td><td style="text-align:center">416X416</td><td style="text-align:center">76.31ms</td><td style="text-align:center">191.16ms</td><td style="text-align:center">0.91M</td></tr><tr><td style="text-align:center"><a href="https://github.com/RangiLyu/nanodet">nanodet_m</a></td><td style="text-align:center">-</td><td style="text-align:center">20.6%</td><td style="text-align:center">320X320</td><td style="text-align:center">49.24ms</td><td style="text-align:center">160.35ms</td><td style="text-align:center">0.95M</td></tr><tr><td style="text-align:center"><a href="https://github.com/dog-qiuqiu/Yolo-Fastest/tree/master/ModelZoo/yolo-fastest-1.1_coco">yolo-fastestv1.1</a></td><td style="text-align:center">24.40%</td><td style="text-align:center">-</td><td style="text-align:center">320X320</td><td style="text-align:center">26.60ms</td><td style="text-align:center">75.74ms</td><td style="text-align:center">0.35M</td></tr><tr><td style="text-align:center"><a href="https://github.com/dog-qiuqiu/Yolo-FastestV2/tree/main/modelzoo">yolo-fastestv2</a></td><td style="text-align:center">24.10%</td><td style="text-align:center">-</td><td style="text-align:center">352X352</td><td style="text-align:center">23.8ms</td><td style="text-align:center">68.9ms</td><td style="text-align:center">0.25M</td></tr><tr><td style="text-align:center">FastestDet</td><td style="text-align:center">25.3%</td><td style="text-align:center">13.0%</td><td style="text-align:center">352X352</td><td style="text-align:center">23.51ms</td><td style="text-align:center">70.62ms</td><td style="text-align:center">0.24M</td></tr></tbody></table><p><strong>开源地址：</strong><br><a href="https://github.com/dog-qiuqiu/Yolo-Fastest">dog-qiuqiu/Yolo-Fastest: :zap: (github.com)</a></p><p><a href="https://github.com/dog-qiuqiu/Yolo-FastestV2">dog-qiuqiu/Yolo-FastestV2:  (github.com)</a></p><p><a href="https://github.com/dog-qiuqiu/FastestDet">dog-qiuqiu/FastestDet: :zap:(github.com)</a></p></blockquote><h2 id="3-演示视频">3.演示视频</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=936752450&bvid=BV1uT4y1Q7zx&cid=751282034&page=1&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="4-卡尔曼滤波和粒子滤波">4.卡尔曼滤波和粒子滤波</h2><blockquote><p><strong>理解：</strong></p><p><a href="https://blog.csdn.net/qq_42995327/article/details/124340804">(70条消息) SLAM–卡尔曼滤波、粒子滤波_卡尔曼滤波和粒子滤波_机器人学渣的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/karen99/article/details/7771743">(70条消息) 关于卡尔曼滤波和粒子滤波最直白的解释_粒子滤波和卡尔曼滤波区别_karen99的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/zkl99999/article/details/46619771/">(70条消息) 从卡尔曼滤波到粒子滤波 很详细，很明了。。_kalman 滤波_learn deep learning的博客-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/395738793">SLAM算法工程师之路：运动状态估计之卡尔曼滤波详解 - 知乎 (zhihu.com)</a></p><p><strong>实现：</strong></p><p><a href="https://blog.csdn.net/weixin_39561673/article/details/111362255?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-9-111362255-blog-130592279.235%5Ev38%5Epc_relevant_sort&amp;spm=1001.2101.3001.4242.6&amp;utm_relevant_index=12">(70条消息) 卡尔曼滤波原理_【机器人位置估计】卡尔曼滤波的原理与实现_weixin_39561673的博客-CSDN博客</a></p></blockquote><blockquote><p><strong>参考博客：</strong></p><p><a href="https://blog.csdn.net/weixin_42749102/article/details/125642520">(61条消息) RGBD相机的介绍和使用_骑驴去学习的博客-CSDN博客</a></p><p><a href="https://www.bilibili.com/video/av78570902/?vd_source=73fb4054e8596a168f02a53f50e6de20">深度/RGB-D相机简介_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/400474142">Yolo-FastestV2:更快，更轻，移动端可达300FPS，参数量仅250k - 知乎 (zhihu.com)</a></p><p><strong>参考代码：</strong></p><p><code>论文代码：</code><a href="https://github.com/arclab-hku/fast-dodging">arclab-hku/fast-dodging: dodging fast small moving objects with RGBD sensor (github.com)</a></p><p><code>yolo-ros实现：</code><a href="https://github.com/leggedrobotics/darknet_ros">leggedrobotics/darknet_ros: YOLO ROS: Real-Time Object Detection for ROS (github.com)</a></p><p><code>yolo-fast2升级版：</code><a href="https://github.com/dog-qiuqiu/FastestDet/tree/main">dog-qiuqiu/FastestDet: :zap:(github.com)</a></p></blockquote><h2 id="5-环境">5.环境</h2><blockquote><p>带补充</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 算法 </tag>
            
            <tag> yolo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-2-1【无人机硬件框架】</title>
      <link href="/posts/3dddf2fb.html"/>
      <url>/posts/3dddf2fb.html</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="关于本课程：">关于本课程：</h2><p>本次课程是一套面向对<strong>自主空中机器人</strong>感兴趣的学生、爱好者、相关从业人员的免费课程，包含了从<strong>硬件组装</strong>、<strong>机载电脑环境设置</strong>、<strong>代码部署</strong>、实机实验等全套详细流程，带你从0开始，组装属于自己的自主无人机，并让它可以在未知的环境中自由避障穿行。</p><p>本次课程的重心主要落在自主空中机器人的搭建、代码部署及调试上，关于自主空中机器人的一些理论基础，例如<strong>动力学模型</strong>，<strong>路径搜索</strong>，轨迹规划，<strong>地图构建</strong>等内容。</p><h3 id="课程视频">课程视频</h3><p><strong>B站：</strong><a href="https://www.bilibili.com/video/BV1WZ4y167me/?p=1">【完结】从0入门自主空中机器人 | 开源 | 浙江大学Fast-Lab</a></p><p><strong>深蓝学院：</strong><a href="https://www.shenlanxueyuan.com/course/470">从0入门自主空中机器人</a></p><h3 id="相关源码">相关源码</h3><p><strong>GitHub：</strong><a href="https://github.com/ZJU-FAST-Lab/Fast-Drone-250">https://github.com/ZJU-FAST-Lab/Fast-Drone-250</a></p><p><strong>Gitee：</strong><a href="https://gitee.com/pn_code/Fast-Drone-250">https://gitee.com/pn_code/Fast-Drone-250</a></p></blockquote><h2 id="1-无人机硬件框架">1.无人机硬件框架</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=382426906&bvid=BV1WZ4y167me&cid=555703026&page=3&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><p><img src="https://img1.imgtp.com/2023/06/27/96Lbo7Lb.png" alt="传统无人机硬件框架"></p><blockquote><p>传统无人机框架如上图所示，但本课程中所使用到的科研无人机与上图有所出入，下面介绍无人机中一些关键组件功能以及选购建议</p></blockquote><h3 id="1-1飞控">1.1飞控</h3><p><img src="https://img1.imgtp.com/2023/06/27/XXJbwD5N.png" alt=""></p><p><strong>介绍</strong></p><ul><li>飞控又称飞行控制器，用于根据输入指令解算电机推理</li><li>内置了IMU，气压计，磁罗盘等</li><li>包含I2C，UART，CAN，GPS等接口</li></ul><p><strong>建议型号</strong></p><table><thead><tr><th style="text-align:center">型号</th><th style="text-align:center">数量</th><th style="text-align:center">单价</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center">Holybro pixhawk4 mini（最推荐）</td><td style="text-align:center">1</td><td style="text-align:center">1269</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-4512157496.9.5426eed470KxTy&amp;id=584372514369">https://item.taobao.com/item.htm?spm=a1z10.3-c.w4002-4512157496.9.5426eed470KxTy&amp;id=584372514369</a></td></tr><tr><td style="text-align:center">Holybro pixhawk4</td><td style="text-align:center">1</td><td style="text-align:center">1330</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.16.4ec8482f6NDN6X&amp;id=622652205393&amp;ns=1&amp;abbucket=13#detail">https://item.taobao.com/item.htm?spm=a230r.1.14.16.4ec8482f6NDN6X&amp;id=622652205393&amp;ns=1&amp;abbucket=13#detail</a></td></tr><tr><td style="text-align:center">CUAV V5（比较厚且长）</td><td style="text-align:center">1</td><td style="text-align:center">1799</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a1z10.5-c-s.w4002-22188405087.10.6be2688auoxM9A&amp;id=594262853015">https://item.taobao.com/item.htm?spm=a1z10.5-c-s.w4002-22188405087.10.6be2688auoxM9A&amp;id=594262853015</a></td></tr><tr><td style="text-align:center">CUAV X7（比较厚且长）</td><td style="text-align:center">1</td><td style="text-align:center">1999</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a1z10.5-c-s.w4002-22188405087.16.6be2688auoxM9A&amp;id=617384615131">https://item.taobao.com/item.htm?spm=a1z10.5-c-s.w4002-22188405087.16.6be2688auoxM9A&amp;id=617384615131</a></td></tr></tbody></table><h3 id="1-2电调">1.2电调</h3><p><img src="https://img1.imgtp.com/2023/06/27/KJ5idN6Z.png" alt=""></p><p><strong>介绍</strong></p><ul><li>电调，全称电子调速器，英文Electronic Speed Control,简称ESC</li><li>相当于电机驱动器</li></ul><p><strong>建议型号</strong></p><table><thead><tr><th style="text-align:center">型号</th><th style="text-align:center">数量</th><th style="text-align:center">单价</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center">银燕45A</td><td style="text-align:center">5</td><td style="text-align:center">186</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.1.3f8f12601zxOa6&amp;id=652264033077&amp;ns=1&amp;abbucket=3#detail">https://item.taobao.com/item.htm?spm=a230r.1.14.1.3f8f12601zxOa6&amp;id=652264033077&amp;ns=1&amp;abbucket=3#detail</a></td></tr><tr><td style="text-align:center">银燕30A</td><td style="text-align:center">5</td><td style="text-align:center">75</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.26.7cd558e1qyMpXO&amp;id=544650621044&amp;ns=1&amp;abbucket=13#detail">https://item.taobao.com/item.htm?spm=a230r.1.14.26.7cd558e1qyMpXO&amp;id=544650621044&amp;ns=1&amp;abbucket=13#detail</a></td></tr></tbody></table><blockquote><p>注：额定电流35A以上，且须支持Dshot协议</p></blockquote><h3 id="1-3电机">1.3电机</h3><img src="https://img1.imgtp.com/2023/06/27/0bn4hgf2.png" style="zoom:50%;" /><p><strong>介绍</strong></p><ul><li>电机型号<ul><li>如2212，3508，4010，这些数字表示电机定子的直径和高度（注意看是电机定子，不是转子）。</li><li>前两位是定子直径，后两位是定子高度，单位是毫米。前两位越大，电机越肥。</li><li>后两位越大，电机越高。一般来说，定子越粗，扭力越大，也就是力气越大。</li><li>至于高度，要看所选机架选择。</li></ul></li><li>KV值<ul><li>KV值是每1V的电压下电机每分钟空转的转速。例如KV800,在1V的电压下空转转速是800转每分钟。那么10V的电压下是8000转每分钟的空转转速。</li><li>KV值越小，同等电压下转速越低，扭力越大，可带更大的桨。</li><li>KV值越大，同等电压下转速越高，扭力越小，只能带小桨。</li><li>相对的说KV值越小，效率就越高。</li><li>航拍要选用低KV电机配大桨，转速低，效率高，同样低转速电机的震动也小。对航拍来说这些都是极为有利的。 四旋翼电池、电机、螺旋桨选型与搭配</li></ul></li></ul><p><strong>建议型号</strong></p><table><thead><tr><th style="text-align:center">型号</th><th style="text-align:center">数量</th><th style="text-align:center">单价</th><th style="text-align:center">链接</th></tr></thead><tbody><tr><td style="text-align:center">Tmotor 2306 2400KV</td><td style="text-align:center">5</td><td style="text-align:center">69</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a1z0d.6639537.1997196601.70.7b117484yJpUkV&amp;id=640533613167">https://item.taobao.com/item.htm?spm=a1z0d.6639537.1997196601.70.7b117484yJpUkV&amp;id=640533613167</a></td></tr><tr><td style="text-align:center">Tmotor F60 2550KV</td><td style="text-align:center">5</td><td style="text-align:center">149</td><td style="text-align:center"><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.1.430128b7kVows1&amp;id=650719152882&amp;ns=1&amp;abbucket=13#detail">https://item.taobao.com/item.htm?spm=a230r.1.14.1.430128b7kVows1&amp;id=650719152882&amp;ns=1&amp;abbucket=13#detail</a></td></tr></tbody></table><blockquote><p>注：电机型号选择2306，KV值一定要在2400左右！！！</p></blockquote><h3 id="1-4机载电脑">1.4机载电脑</h3><img src="https://img1.imgtp.com/2023/06/27/drglPCF2.png" style="zoom:80%;" /><p><strong>介绍</strong></p><p>无人机机载计算机可以做的事情非常多，以下是一些主要的应用：</p><ul><li><p>飞行控制：无人机的机载计算机是无人机进行飞行控制的核心部件。它可以读取传感器信息、计算数据并控制舵机和电机等部件，从而让无人机稳定地在空中飞行。</p></li><li><p>视觉识别：机载计算机可以使用数百万像素的高清摄像头捕捉影像，通过图像处理算法实现目标识别、跟踪和定位，例如，卫星图像、气象预报、环保水质检测、森林火灾等。</p></li><li><p>数据采集和处理：机载计算机可以将传感器收集到的数据进行处理和存储，例如，传感器监控环境（温度、湿度、光照、气体浓度等），卫星数据、地理信息数据等。</p></li><li><p>无线数据传输：无人机机载计算机可以将无线网络之间的信息传输，例如，人脸识别、景区巡游信息、医疗应用、物流等。</p></li><li><p>物流配送：无人机机载计算机是实现无人机指挥中心的关键要素之一，可以实现在空中统一协调、指挥和监控，实现全天候、无人值守、自主配送、快速、准确、稳定等属性。</p></li></ul><p><strong>建议型号</strong></p><table><thead><tr><th>型号</th><th>数量</th><th>单价</th><th>链接</th></tr></thead><tbody><tr><td>Intel NUC 猛虎峡谷 准系统 i5 薄款</td><td>1</td><td>2590</td><td><a href="https://item.taobao.com/item.htm?spm=a230r.1.14.18.42652f8frC214K&amp;id=638758423001&amp;ns=1&amp;abbucket=3#detail">https://item.taobao.com/item.htm?spm=a230r.1.14.18.42652f8frC214K&amp;id=638758423001&amp;ns=1&amp;abbucket=3#detail</a></td></tr></tbody></table><h3 id="1-5传感器">1.5传感器</h3><p><strong>介绍</strong></p><h2 id="2-相关下载">2.相关下载</h2><ul><li><strong>课程硬件清单选型：</strong><a href="https://mybog.s3.bitiful.net/ros/zero/purchase_list.xlsx">下载地址</a></li></ul><div class="note warning modern"><p><b>本网站只做课程笔记和资源整合，资源全部来源B站和深蓝学院，如有侵权，请联系站长删除！</b></p></div>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从0入门自主空中机器人-1【课程介绍】</title>
      <link href="/posts/aa750162.html"/>
      <url>/posts/aa750162.html</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="关于本课程：">关于本课程：</h2><p>本次课程是一套面向对<strong>自主空中机器人</strong>感兴趣的学生、爱好者、相关从业人员的免费课程，包含了从<strong>硬件组装</strong>、<strong>机载电脑环境设置</strong>、<strong>代码部署</strong>、实机实验等全套详细流程，带你从0开始，组装属于自己的自主无人机，并让它可以在未知的环境中自由避障穿行。</p><p>本次课程的重心主要落在自主空中机器人的搭建、代码部署及调试上，关于自主空中机器人的一些理论基础，例如<strong>动力学模型</strong>，<strong>路径搜索</strong>，轨迹规划，<strong>地图构建</strong>等内容。</p><h3 id="课程视频">课程视频</h3><p><strong>B站：</strong><a href="https://www.bilibili.com/video/BV1WZ4y167me/?p=1">【完结】从0入门自主空中机器人 | 开源 | 浙江大学Fast-Lab</a></p><p><strong>深蓝学院：</strong><a href="https://www.shenlanxueyuan.com/course/470">从0入门自主空中机器人</a></p><h3 id="相关源码">相关源码</h3><p><strong>GitHub：</strong><a href="https://github.com/ZJU-FAST-Lab/Fast-Drone-250">https://github.com/ZJU-FAST-Lab/Fast-Drone-250</a></p><p><strong>Gitee：</strong><a href="https://gitee.com/pn_code/Fast-Drone-250">https://gitee.com/pn_code/Fast-Drone-250</a></p></blockquote><h2 id="1-课程介绍">1.课程介绍</h2><div align=center class="video">    <iframe src="//player.bilibili.com/player.html?aid=382426906&bvid=BV1WZ4y167me&cid=554101966&page=1&autoplay=0&high_quality=1"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div><h2 id="2-相关下载">2.相关下载</h2><ul><li><strong>碳板图纸：</strong><a href="https://mybog.s3.bitiful.net/ros/zero/%E7%A2%B3%E6%9D%BF%E5%9B%BE%E7%BA%B8.zip">下载地址</a></li><li><strong>README.pdf：</strong><a href="https://mybog.s3.bitiful.net/ros/zero/readme.pdf">下载地址</a></li></ul><div class="note warning modern"><p><b>本网站只做课程笔记和资源整合，资源全部来源B站和深蓝学院，如有侵权，请联系站长删除！</b></p></div>]]></content>
      
      
      <categories>
          
          <category> 从0入门自主空中机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
            <tag> 无人机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS资源汇总</title>
      <link href="/posts/232d6cf1.html"/>
      <url>/posts/232d6cf1.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-环境安装">1.环境安装</h2><p>推荐使用鱼香ros的一键安装脚本：一行代码搭建机器人开发环境(ROS/ROS2/ROSDEP)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; . fishros</span><br></pre></td></tr></table></figure><h3 id="支持工具">支持工具</h3><ul><li>一键安装:ROS(支持ROS和ROS2,树莓派Jetson) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键安装:VsCode(支持amd64和arm64) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键安装:github桌面版(小鱼常用的github客户端) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键安装:nodejs开发环境(通过nodejs可以预览小鱼官网噢) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键配置:rosdep(小鱼的rosdepc,又快又好用) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键配置:ROS环境(快速更新ROS环境设置,自动生成环境选择) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键配置:系统源(更换系统源,支持全版本Ubuntu系统) <a href="https://github.com/fishros">贡献@小鱼</a></li><li>一键安装:Docker(支持amd64和arm64) <a href="https://github.com/alyssa1024">贡献@alyssa</a></li><li>一键安装:cartographer <a href="https://github.com/fishros">贡献@小鱼&amp;Catalpa</a></li><li>一键安装:微信客户端 <a href="https://github.com/fishros">贡献@小鱼</a></li></ul><blockquote><p>开源地址：<a href="https://github.com/fishros/install">https://github.com/fishros/install</a></p><p>问题汇总：<a href="https://www.fishros.org.cn/forum/category/7/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85">一键安装 | 鱼香ROS (fishros.org.cn)</a></p></blockquote><h2 id="2-入门教程">2.入门教程</h2><h3 id="2-1视频教程">2.1视频教程</h3><ul><li>古月居（重点推荐）<ul><li>ros1：<a href="https://www.bilibili.com/video/BV1zt411G7Vn/?spm_id_from=333.999.0.0">【古月居】古月·ROS入门21讲 | 一学就会的ROS机器人入门教程_哔哩哔哩_bilibili</a></li><li>ros2：<a href="https://www.bilibili.com/video/BV16B4y1Q7jQ/?spm_id_from=333.999.0.0">【古月居】古月·ROS2入门21讲 | 带你认识一个全新的机器人操作系统_哔哩哔哩_bilibili</a></li></ul></li><li>鱼香ROS（较基础，推荐）<ul><li>ros2：<a href="https://www.bilibili.com/video/BV1gr4y1Q7j5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=73fb4054e8596a168f02a53f50e6de20">【鱼香ROS】动手学ROS2|ROS2基础入门到实践教程|小鱼带你手把手学习ROS2_哔哩哔哩_bilibili</a></li></ul></li><li>中科院ROS教程<ul><li>ros1：<a href="https://www.bilibili.com/video/BV1mJ411R7Ni/?spm_id_from=333.337.search-card.all.click&amp;vd_source=73fb4054e8596a168f02a53f50e6de20">中科院软件所-机器人操作系统入门（ROS入门教程）_哔哩哔哩_bilibili</a></li></ul></li><li>Autolabor_ROS教程<ul><li>ros1：<a href="https://www.bilibili.com/video/BV1Ci4y1L7ZZ/?spm_id_from=333.337.search-card.all.click">【Autolabor初级教程】ROS机器人入门_哔哩哔哩_bilibili</a></li></ul></li></ul><h3 id="2-2图文教程">2.2图文教程</h3><ul><li>古月居：<a href="https://book.guyuehome.com/">ROS2入门教程 (guyuehome.com)</a></li><li>鱼香ROS：<a href="https://fishros.com/d2lros2/#/">动手学ROS2 (fishros.com)</a></li><li>ROS官方文档：<a href="https://docs.ros.org/en/humble/index.html">ROS 2 Documentation — ROS 2 Documentation: Humble documentation</a></li><li>中科院MOOC：<a href="https://sychaichangkun.gitbooks.io/ros-tutorial-icourse163/content/chapter1/">中国大学MOOC—《机器人操作系统入门》课程讲义</a></li></ul><h2 id="3-常用框架">3.常用框架</h2><h3 id="3-1自主导航">3.1<a href="https://navigation.ros.org/">自主导航</a></h3><blockquote><p>比如移动机器人基本都会具备的自主导航功能，ROS2提供了完整的自主导航系统框架和各种实现好的算法，即便我们不开发任何代码，也可以在自己的机器人上，使用这套系统，快速实现自主导航的基本功能。</p><p>大家如果要进行相关的应用开发，可以参考这个链接中的内容：<a href="https://navigation.ros.org/">https://navigation.ros.org/</a></p></blockquote><p><img src="https://s2.loli.net/2023/06/23/nZGf7wpHQRL8qsy.png" alt=""></p><h3 id="3-2自动驾驶">3.2<a href="https://www.autoware.org/">自动驾驶</a></h3><blockquote><p>在ROS社区中，有一个著名的自动驾驶框架——Autoware，包含了自动驾驶中的感知、规划、控制等模块和实现，功能非常丰富，很多商业化的自动驾驶系统，也参考了这个框架。</p><p>大家如果对自动驾驶感兴趣，可以参考这几个链接：</p><p><a href="https://www.autoware.org/">https://www.autoware.org/</a></p><p><a href="https://autowarefoundation.gitlab.io/autoware.auto/AutowareAuto/">https://autowarefoundation.gitlab.io/autoware.auto/AutowareAuto/</a></p></blockquote><p><img src="https://s2.loli.net/2023/06/23/2oJtpqnvFMlKULu.png" alt=""></p><h3 id="3-3路径规划">3.3<a href="https://moveit.ros.org/">路径规划</a></h3><blockquote><p>此外还有机械臂相关的运动规划、碰撞检测、视觉分拣等功能，也都可以使用ROS中的MoveIt框架。</p><p>这也是ROS中非常经典的功能，大家可以在这个链接中找到更多内容:</p><p><a href="https://moveit.ros.org/">https://moveit.ros.org/</a></p></blockquote><p><img src="https://s2.loli.net/2023/06/23/vf9wlsUr2C1pz3h.png" alt=""></p><h3 id="3-4机器人学">3.4机器人学</h3><p><img src="https://s2.loli.net/2023/06/23/1iu9VPDWo6TYjrX.png" alt=""></p><blockquote><p>ROS是机器人开发的工具，重在学习实操技能。至于内功的修炼，就得学习机器人学相关的理论知识，比如《机器人学导论》，被称为机器人工程师人手必备的一本理论书籍，推荐大家仔细阅读。</p></blockquote><ul><li><a href="https://www.bilibili.com/video/av4506104/">斯坦福大学公开课——机器人学_哔哩哔哩_bilibili</a></li><li><a href="https://www.bilibili.com/video/BV1v4411H7ez/">台大机器人学之运动学——林沛群（含课件+书籍）_哔哩哔哩_bilibili</a></li><li><a href="https://www.youtube.com/watch?v=XTmlhvlmcf8&amp;list=PLL57Sz4fhxLpCXgN0lvCF7aHAlRA5FoFr">Autoware Course Lecture 1: Development Environment - YouTube</a></li></ul><h2 id="4-问答论坛">4.问答论坛</h2><p><a href="https://www.guyuehome.com/blog/index">古月居 (guyuehome.com)</a></p><p><img src="https://image.thum.io/get/allowJPG/wait/20/width/600/crop/950/https://www.guyuehome.com/blog/index" alt=""></p><p><a href="https://www.fishros.org.cn/forum/">主页 | 鱼香ROS (fishros.org.cn)</a></p><p><img src="https://image.thum.io/get/allowJPG/wait/20/width/600/crop/950/https://www.fishros.org.cn/forum/" alt=""></p><h2 id="5-常用链接">5.常用链接</h2><ul><li><p>ROS：<a href="https://www.ros.org/">https://www.ros.org</a></p></li><li><p>ROS 2 Documentation：<a href="https://docs.ros.org/en/humble/index.html">https://docs.ros.org/en/humble/index.html</a></p></li><li><p>古月居：<a href="https://www.guyuehome.com/">https://www.guyuehome.com/</a></p></li><li><p>ROS : <a href="https://www.ros.org/">https://www.ros.org</a></p></li><li><p>ROS Wiki : <a href="http://wiki.ros.org/">http://wiki.ros.org/</a></p></li><li><p>ROSCon : <a href="https://roscon.ros.org/">https://roscon.ros.org</a></p></li><li><p>ROS Robots : <a href="https://robots.ros.org/">https://robots.ros.org/</a></p></li><li><p>Ubuntu Wiki ： <a href="https://wiki.ubuntu.org.cn/">https://wiki.ubuntu.org.cn</a></p></li><li><p>ROS2 Github ： <a href="https://github.com/ros2">https://github.com/ros2</a></p></li><li><p>Gazebo : <a href="https://classic.gazebosim.org/">https://classic.gazebosim.org</a></p></li></ul><div class="note info flat"><p>注意：相关链接还在持续补充中，有失效或更好的资源链接请评论补充，感谢大家！</p></div>]]></content>
      
      
      <categories>
          
          <category> 资源汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ros </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5技术分享_制作一个个性的音乐播放器</title>
      <link href="/posts/97fc50d1.html"/>
      <url>/posts/97fc50d1.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/109672766">PyQt5技术分享_制作一个个性的音乐播放器</a></p></blockquote></div><blockquote><p>前前言：额，正如你所见，这个项目在鸽了几个月后终于宣布停更了。原因呢，自该项目发布以来，反响平平，更新的动力都没了，其实更主要的原因在于我发现我现在学习的方向渐渐偏离了专业的轨道，以后的项目会逐渐往硬件方面靠。奉劝各位，要是你还在学习pyqt5的话，学到为止，做小GUI，tk足以，做大项目，pyqt5真的不是什么好选择。</p></blockquote><blockquote><p>前言：距上一个项目进程的实现：<a href="https://blog.csdn.net/qq_45516773/article/details/109436722">Dock栏的实现</a> 已经过去大概两周了,在这两周内终于又完成了一个组件：音乐播放器(在此，有人会问:啊？你一个阅读器要音乐播放功能干嘛？答：为满足那些阅读时喜欢听歌的人的需求，比如，我)，“才”花两周也是我加班加点，翘了无数个晚自习，努力的成果，在这里我就不得不吐槽一下我们学校的早晚自习制度(阿巴阿巴````)话不多说，来吧，展示!</p></blockquote><h3 id="1-界面展示">1.界面展示</h3><p><img src="https://img1.imgtp.com/2023/06/29/vpUqOLaV.gif" alt="20201113132506341"></p><blockquote><p>为了融合项目需求，播放器就设定为小型的，但麻雀虽小，五脏俱全，播放器应有的功能一个没落，额，，除了音效调节外，不过这也不是必须的，是吧(极力掩饰自己能力不足中···)，在界面实现时遇到的小困难：</p></blockquote><h4 id="QSlider无法实现点击跳转到指定位置：PyQt5之实现QSlider进度条的点哪指哪">QSlider无法实现点击跳转到指定位置：<a href="https://blog.csdn.net/qq_45516773/article/details/109527375">PyQt5之实现QSlider进度条的点哪指哪</a></h4><h4 id="QGraphicsView之实现唱片的转动：PyQt5之实现网易云播放唱片的动作-图片的旋转">QGraphicsView之实现唱片的转动：<a href="https://blog.csdn.net/qq_45516773/article/details/109560962">PyQt5之实现网易云播放唱片的动作(图片的旋转)</a></h4><h3 id="2-一键导入歌单">2.一键导入歌单</h3><blockquote><p>播放器支持网易云歌单导入和本地歌单导入</p></blockquote><p><img src="https://img1.imgtp.com/2023/06/29/xpHon3aq.gif" alt="20201113170049484"></p><h4 id="网络导入歌单">网络导入歌单</h4><blockquote><ol><li>从pc客户端或手机客户端歌单中获取到歌单的分享链接（可以是自己的歌单，也可以是大厅中任意的一个歌单，可一次性输入多个歌单链接，可以不用分隔符）</li></ol></blockquote><p><img src="https://img1.imgtp.com/2023/06/29/OpS4j7Kx.png#pic_center" alt="在这里插入图片描述"></p><blockquote><p>2.输入完链接后，耐心等待一会，后台会根据链接内容爬取歌单所有的歌曲信息，包括ID，歌名，歌手名，歌手ID，专辑名，专辑ID，爬取的歌曲信息会以json数据导入到./Music/json目录下<br>3.爬取完数据后就会根据爬取到的内容导入到播放器歌单中了</p></blockquote><p><img src="https://img1.imgtp.com/2023/06/29/oqRuUpCF.gif" alt=""></p><h4 id="本地导入歌单">本地导入歌单</h4><blockquote><p>其实就是提供从之前爬取到的歌单json数据中直接导入到播放器歌单中的入口，这里的json数据一定是之前爬取到的文件，不合规范的json数据是无法导入成功的</p></blockquote><h3 id="歌曲搜索">歌曲搜索</h3><blockquote><p>歌单内容太多，找不到想要听的歌曲？没关系，歌单支持歌名，歌手，专辑等内容搜索，还支持模糊搜索，只需输入一两个字，歌曲即可为你呈现</p></blockquote><p><img src="https://img1.imgtp.com/2023/06/29/kdQT7awG.gif" alt=""></p><h3 id="播放演示">播放演示</h3><p><img src="https://img1.imgtp.com/2023/06/29/4wf51iD1.gif#pic_center" alt="在这里插入图片描述"></p><blockquote><p>另歌手和专辑我都设为了超链接形式，点击即可跳转到对应的歌手或专辑界面。播放器还设置了记忆功能，程序执行时会自动导入上次的歌单</p></blockquote><p>代码入口:<a href="https://github.com/MGod-monkey/ABAB_Book/blob/master/main_play_UI.py">PyQt5音乐播放器</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5之实现网易云播放唱片的动作</title>
      <link href="/posts/957217de.html"/>
      <url>/posts/957217de.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/109560962">《ESP32-Arduino》LVGL之输入设备详解及实例(触摸屏,实体按键,编码器,多功能按键)</a></p></blockquote></div><blockquote><p>最近在做项目的播放器部分，在实现播放器像网易云那样点击播放唱片就会自动转动时遇到了问题，经过一套搜索引擎组合拳，终于是实现了该功能，成品如下<br><img src="https://img1.imgtp.com/2023/06/29/1LjhX8nH.gif#pic_center" alt="成品"></p></blockquote><p>闲话少说，上代码（代码部分做了大量的注释和个人理解，就不额外的解释了，因为我也是查大佬的案例过来的，所以理解仅供参考）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;唱片&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cp_Comp_1</span>(<span class="title class_ inherited__">QObject</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Cp_Comp_1, self).__init__()</span><br><span class="line">        <span class="comment"># 加载图片资源</span></span><br><span class="line">        pixmap_1 = QPixmap(<span class="string">&#x27;./img/main_UI/play/play_cp_comp1.png&#x27;</span>)</span><br><span class="line">        <span class="comment"># 按比例设置图片大小</span></span><br><span class="line">        scaledPixmap_1 = pixmap_1.scaled(<span class="number">150</span>,<span class="number">150</span>)</span><br><span class="line">        <span class="comment"># 初始化动作</span></span><br><span class="line">        self.animation()</span><br><span class="line">        <span class="comment"># 定义QGraphicsPixmapItem</span></span><br><span class="line">        self.pixmap_item_1 = QGraphicsPixmapItem(scaledPixmap_1)</span><br><span class="line">        <span class="comment"># 设置item旋转的中心点</span></span><br><span class="line">        self.pixmap_item_1.setTransformOriginPoint(<span class="number">75</span>,<span class="number">75</span>)   <span class="comment"># 中心</span></span><br><span class="line">        <span class="comment"># 设置图片的初始位置</span></span><br><span class="line">        self.pixmap_item_1.setPos(<span class="number">0</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_set_rotation</span>(<span class="params">self,degree</span>):</span><br><span class="line">        self.pixmap_item_1.setRotation(degree)    <span class="comment"># 自身改变角度</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">animation</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 创建唱片360°无死角转动</span></span><br><span class="line">        self.anim = QPropertyAnimation(self, <span class="string">b&#x27;rotation&#x27;</span>)   <span class="comment"># 动画类型(&#x27;rotation&#x27;:转动,&#x27;pos&#x27;:位置移动)</span></span><br><span class="line">        self.anim.setDuration(<span class="number">40000</span>)     <span class="comment"># 运行的秒速(经测试，网易云用户每播放40s的歌曲，世界上就会有一张无辜唱片被转动一周)</span></span><br><span class="line">        self.anim.setStartValue(<span class="number">0</span>)  <span class="comment"># 起始角度</span></span><br><span class="line">        self.anim.setEndValue(<span class="number">360</span>)  <span class="comment"># 结束角度</span></span><br><span class="line">        self.anim.setLoopCount(-<span class="number">1</span>)  <span class="comment"># 设置循环次数</span></span><br><span class="line">    rotation = pyqtProperty(<span class="built_in">int</span>, fset=_set_rotation)    <span class="comment"># 属性动画改变自身数值(传递信号？？)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;把柄&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cp_Comp_2</span>(<span class="title class_ inherited__">QObject</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Cp_Comp_2, self).__init__()</span><br><span class="line">        <span class="comment"># 加载图片资源</span></span><br><span class="line">        pixmap_2 = QPixmap(<span class="string">&#x27;./img/main_UI/play/play_cp_comp2.png&#x27;</span>)</span><br><span class="line">        <span class="comment"># 按比例设置图片大小</span></span><br><span class="line">        scaledPixmap_2 = pixmap_2.scaled(<span class="number">85</span>,<span class="number">50</span>)</span><br><span class="line">        <span class="comment"># 初始化动作</span></span><br><span class="line">        self.animation()</span><br><span class="line">        <span class="comment"># 定义QGraphicsPixmapItem</span></span><br><span class="line">        self.pixmap_item_2 = QGraphicsPixmapItem(scaledPixmap_2)</span><br><span class="line">        <span class="comment"># 设置item旋转的中心点</span></span><br><span class="line">        self.pixmap_item_2.setTransformOriginPoint(<span class="number">0</span>,<span class="number">0</span>) <span class="comment"># 左上角</span></span><br><span class="line">        <span class="comment"># 设置图片的初始位置</span></span><br><span class="line">        self.pixmap_item_2.setPos(<span class="number">70</span>,-<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_set_rotation</span>(<span class="params">self,degree</span>):</span><br><span class="line">        self.pixmap_item_2.setRotation(degree)    <span class="comment"># 自身改变角度</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">animation</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 转轴转动的动画之开和关</span></span><br><span class="line">        self.anim_1 = QPropertyAnimation(self, <span class="string">b&#x27;rotation&#x27;</span>)</span><br><span class="line">        self.anim_1.setStartValue(<span class="number">0</span>)  <span class="comment"># 起始角度</span></span><br><span class="line">        self.anim_1.setEndValue(<span class="number">30</span>)  <span class="comment"># 结束角度</span></span><br><span class="line">        self.anim_1.setLoopCount(<span class="number">1</span>)  <span class="comment"># 设置循环次数</span></span><br><span class="line">        self.anim_2 = QPropertyAnimation(self, <span class="string">b&#x27;rotation&#x27;</span>)</span><br><span class="line">        self.anim_2.setStartValue(<span class="number">30</span>)  <span class="comment"># 起始角度</span></span><br><span class="line">        self.anim_2.setEndValue(<span class="number">0</span>)  <span class="comment"># 结束角度</span></span><br><span class="line">        self.anim_2.setLoopCount(<span class="number">1</span>)  <span class="comment"># 设置循环次数</span></span><br><span class="line"></span><br><span class="line">    rotation = pyqtProperty(<span class="built_in">int</span>, fset=_set_rotation)    <span class="comment"># 属性动画改变自身数值(传递信号？？)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;呈现动画的界面&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;因为QWeidget之类的是静态的，所以不能用来作为动画的呈现界面(是这样子理解的吧)&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">View</span>(<span class="title class_ inherited__">QGraphicsView</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(View, self).__init__()</span><br><span class="line">        self.resize(<span class="number">180</span>,<span class="number">220</span>)</span><br><span class="line">        self.setAttribute(Qt.WA_TranslucentBackground)  <span class="comment"># 透明背景</span></span><br><span class="line">        self.setWindowFlags(Qt.FramelessWindowHint) <span class="comment"># 无边框</span></span><br><span class="line">        self.setStyleSheet(<span class="string">&#x27;background:cyan&#x27;</span>)</span><br><span class="line">        self.initView()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">initView</span>(<span class="params">self</span>):</span><br><span class="line">        self.cp_comp_1 = Cp_Comp_1()</span><br><span class="line">        self.cp_comp_2 = Cp_Comp_2()</span><br><span class="line">        self.scene = QGraphicsScene(self)</span><br><span class="line">        self.scene.setSceneRect(-<span class="number">10</span>,<span class="number">0</span>,<span class="number">170</span>,<span class="number">210</span>)    <span class="comment"># 设置动画区域，在此区域内的控件会被动态刷新</span></span><br><span class="line">        self.scene.addItem(self.cp_comp_1.pixmap_item_1)   <span class="comment"># 往容器里面添加item</span></span><br><span class="line">        self.scene.addItem(self.cp_comp_2.pixmap_item_2)   <span class="comment"># 往容器里面添加item</span></span><br><span class="line">        self.setScene(self.scene)       <span class="comment"># 英文翻译:设置场景？？</span></span><br><span class="line"></span><br><span class="line">        btn_1 = QPushButton(<span class="string">&#x27;播放&#x27;</span>,self)</span><br><span class="line">        btn_1.setGeometry(<span class="number">10</span>,<span class="number">178</span>,<span class="number">40</span>,<span class="number">40</span>)</span><br><span class="line">        btn_1.clicked.connect(self.start)</span><br><span class="line">        btn_2 = QPushButton(<span class="string">&#x27;暂停&#x27;</span>,self)</span><br><span class="line">        btn_2.setGeometry(<span class="number">138</span>,<span class="number">178</span>,<span class="number">40</span>,<span class="number">40</span>)</span><br><span class="line">        btn_2.clicked.connect(self.stop)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        self.cp_comp_1.anim.start()</span><br><span class="line">        self.cp_comp_2.anim_1.start()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        self.cp_comp_1.anim.pause()</span><br><span class="line">        self.cp_comp_2.anim_2.start()</span><br><span class="line"></span><br><span class="line">app = QApplication(argv)</span><br><span class="line">vi = View()</span><br><span class="line">vi.show()</span><br><span class="line">exit(app.exec_())</span><br></pre></td></tr></table></figure><p>这里的动作演示仅是作为案例分享</p><p>项目进程：<a href="https://blog.csdn.net/qq_45516773/category_10511272.html">PyQt5初级实战项目-ABAB阅读器</a><br>参考文献：<a href="https://blog.csdn.net/weixin_33858336/article/details/94482658?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160482441219724842944488%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=160482441219724842944488&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-3-94482658.pc_first_rank_v2_rank_v28p&amp;utm_term=pyqt5%20%E6%97%8B%E8%BD%AC%E5%8A%A8%E7%94%BB&amp;spm=1018.2118.3001.4449">pyqt5 动画学习（四） 旋转动画</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5之实现QSlider进度条的点哪指哪</title>
      <link href="/posts/ad7b2ecb.html"/>
      <url>/posts/ad7b2ecb.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/109527375">《ESP32-Arduino》LVGL之输入设备详解及实例(触摸屏,实体按键,编码器,多功能按键)</a></p></blockquote></div><blockquote><p>前言：最近在做项目的播放器部分，但在进度条部分却遭遇了问题，QSlider本身是支持滑块拖动和点击事件的，但QSlider的点击事件并不是点哪跳哪，而是点一下，会根据QSLider的步进增一步或减一步。</p></blockquote><p>无论遇到什么问题，我们都要···干就完了,OLG！</p><h4 id="但理想是丰满的，现实总是刺骨的">但理想是丰满的，现实总是刺骨的</h4><p>不搜不知道，一搜才发现关于pyqt5的资料是真的少，不是说没有，而是大部分都是讲述基础部分，进阶的，额，也就那样，难道都没人有进度条随意点动的需求么，还是说用python做GUI的不多。</p><p>好吧，无奈，我只能从pyqt5的老父亲Qt的身上寻找答案了</p><p>结果千辛万苦搜到了了几条结果，结果如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *ev)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="comment">//注意应先调用父类的鼠标点击处理事件，这样可以不影响拖动的情况</span></span><br><span class="line">       QSlider::<span class="built_in">mousePressEvent</span>(ev);</span><br><span class="line">       <span class="comment">//获取鼠标的位置，这里并不能直接从ev中取值（因为如果是拖动的话，鼠标开始点击的位置没有意义了）</span></span><br><span class="line">       <span class="type">double</span> pos = ev-&gt;<span class="built_in">pos</span>().<span class="built_in">x</span>() / (<span class="type">double</span>)<span class="built_in">width</span>();</span><br><span class="line">       <span class="built_in">setValue</span>(pos * (<span class="built_in">maximum</span>() - <span class="built_in">minimum</span>()) + <span class="built_in">minimum</span>());</span><br><span class="line">       <span class="comment">//向父窗口发送自定义事件event type，这样就可以在父窗口中捕获这个事件进行处理</span></span><br><span class="line">       <span class="function">QEvent <span class="title">evEvent</span><span class="params">(<span class="keyword">static_cast</span>&lt;QEvent::Type&gt;(QEvent::User + <span class="number">1</span>))</span></span>;</span><br><span class="line">       QCoreApplication::<span class="built_in">sendEvent</span>(<span class="built_in">parentWidget</span>(), &amp;evEvent);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到大致流程如下：</p><ul><li>重写QSlider.mousePressEvent(鼠标单击事件)</li><li>调用父类的鼠标单击处理事件(这里是必须的，因为滑动条的拖动也是一个鼠标单击事件，这样滑动条原有的滑动功能就没有了)</li><li>获取鼠标单击的位置，计算鼠标位置在进度条上的比值</li><li>进度条当前值=比值*进度条总值</li></ul><p>这下就好办了，转python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">    <span class="keyword">if</span> event.button() == Qt.LeftButton:</span><br><span class="line">        <span class="built_in">super</span>().mousePressEvent(event)      <span class="comment"># 调用父级的单击事件，听说这样能不影响进度条原来的拖动</span></span><br><span class="line">        val_por = event.pos().x() / self.width()    <span class="comment"># 获取鼠标在进度条的相对位置</span></span><br><span class="line">        self.setValue(<span class="built_in">int</span>(val_por * self.maximum()))<span class="comment"># 改变进度条的值</span></span><br><span class="line">        <span class="comment"># self.cliecked.emit(self.value())# 点击发送信号，这里可不要</span></span><br></pre></td></tr></table></figure><blockquote><p>注：C++中所指的父类千万别照搬下来也写成QSlider.mousePressEvent(event),也不要以为父类指的是self.parent()，这两种都是错误的，别问我为什么，说多了都是泪</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5技术分享_制作一个美观的Dock栏</title>
      <link href="/posts/7265cf3f.html"/>
      <url>/posts/7265cf3f.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/109436722">《ESP32-Arduino》LVGL之输入设备详解及实例(触摸屏,实体按键,编码器,多功能按键)</a></p></blockquote></div><blockquote><p>一周一小步，一年一大步！欧！耶！<br>这周我完成了软件项目的一个重要的部件–dock栏，闲话少说，先上成品！！！</p></blockquote><p><img src="https://img1.imgtp.com/2023/06/29/9qWmEetq.gif#pic_center" alt=""></p><h3 id="1-创建透明窗口">1.创建透明窗口</h3><p>要实现这样一个小窗口当然需要先创建一个QWidget类，并对QWidget的背景，窗口大小，边框等等做一些小设置，这里的背景用QPinter动态描绘上边框和背景色(具体的paintEvent代码的也是从某大师那里抄的，具体哪个，我给忘了，，，)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dock_Win</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Dock_Win, self).__init__(parent)</span><br><span class="line">        self.bg_color = QColor(<span class="number">170</span>, <span class="number">248</span>, <span class="number">248</span>, <span class="number">230</span>)  <span class="comment"># 设置背警色</span></span><br><span class="line">        self.fill_color = QColor(<span class="number">0</span>,<span class="number">250</span>,<span class="number">255</span>,<span class="number">50</span>) <span class="comment"># 阴影颜色</span></span><br><span class="line">        self.initUI()</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">def</span> <span class="title function_">initUI</span>(<span class="params">self</span>):</span><br><span class="line">       <span class="comment"># 设置窗口透明，无边框</span></span><br><span class="line">       self.setAttribute(Qt.WA_TranslucentBackground)  <span class="comment"># 透明背景</span></span><br><span class="line">       self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog)</span><br><span class="line">       <span class="comment"># 设置窗口的大小</span></span><br><span class="line">       self.resize(<span class="number">462</span>, <span class="number">110</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置窗口圆角+边框阴影</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paintEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># 设置阴影</span></span><br><span class="line">        painter_path = QPainterPath()</span><br><span class="line">        painter_path.setFillRule(Qt.WindingFill)</span><br><span class="line"></span><br><span class="line">        painter = QPainter(self)</span><br><span class="line">        painter.setRenderHint(QPainter.Antialiasing)</span><br><span class="line">        painter.fillPath(painter_path, QBrush(Qt.white))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">            i_path = QPainterPath()</span><br><span class="line">            i_path.setFillRule(Qt.WindingFill)</span><br><span class="line">            ref = QRectF(<span class="number">10</span> - i, <span class="number">10</span> - i, self.width() - (<span class="number">10</span> - i) * <span class="number">2</span>, self.height() - (<span class="number">10</span> - i) * <span class="number">2</span>)</span><br><span class="line">            i_path.addRoundedRect(ref, <span class="number">20</span>, <span class="number">20</span>)</span><br><span class="line">            self.fill_color.setAlpha(<span class="built_in">int</span>(<span class="number">150</span> - i ** <span class="number">0.5</span> * <span class="number">50</span>))</span><br><span class="line">            painter.setPen(self.fill_color)</span><br><span class="line">            painter.drawPath(i_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 圆角</span></span><br><span class="line">        self.painter_rect = QPainter(self)</span><br><span class="line">        self.painter_rect.setRenderHint(QPainter.Antialiasing)  <span class="comment"># 抗锯齿</span></span><br><span class="line">        self.painter_rect.setBrush(self.bg_color)</span><br><span class="line">        self.painter_rect.setPen(Qt.transparent)</span><br><span class="line"></span><br><span class="line">        self._rect = self.rect()</span><br><span class="line">        self._rect.setLeft(<span class="number">15</span>)</span><br><span class="line">        self._rect.setTop(<span class="number">15</span>)</span><br><span class="line">        self._rect.setWidth(self._rect.width() - <span class="number">15</span>)</span><br><span class="line">        self._rect.setHeight(self._rect.height() - <span class="number">15</span>)</span><br><span class="line">        self.painter_rect.begin(self)</span><br><span class="line">        self.painter_rect.drawRoundedRect(self._rect, <span class="number">15</span>, <span class="number">15</span>)</span><br><span class="line">        self.painter_rect.end()</span><br></pre></td></tr></table></figure><p><img src="https://img1.imgtp.com/2023/06/29/vgePnp7l.png" alt="在这里插入图片描述"><br>这样我们就得到了一个时尚而不失优雅的背景窗口</p><h3 id="2-为窗口添加移动事件">2.为窗口添加移动事件</h3><p>无边框的窗口在美观的同时，也失去了边框所带来的移动便利，没有了边框的窗口，你左击并移动鼠标，跟在一个空白窗口上乱画没啥区别，所以要对主窗口的mouseMoveEvent()鼠标移动事件进行重写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置窗口移动事件</span></span><br><span class="line">    <span class="comment"># 当鼠标左击并且移动时触发窗口移动事件</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> event.button() == Qt.LeftButton:</span><br><span class="line">            self.is_move = <span class="literal">True</span></span><br><span class="line">            self.move_xy = event.globalPos() - self.pos()  <span class="comment"># 获取鼠标的移动事件</span></span><br><span class="line">            <span class="comment"># self.parent_rect = self.parent().pos()</span></span><br><span class="line">            self.setCursor(QCursor(Qt.OpenHandCursor))  <span class="comment"># 设置鼠标为抓手</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseMoveEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> self.is_move:</span><br><span class="line">            <span class="comment"># 移动dock栏（dock栏的坐标位置+鼠标的偏移量-dock栏的边框位置）</span></span><br><span class="line">            self.move(event.globalPos() - self.move_xy)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseReleaseEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        self.is_move = <span class="literal">False</span></span><br><span class="line">        self.setCursor(QCursor(Qt.ArrowCursor))  <span class="comment"># 设置鼠标为正常</span></span><br></pre></td></tr></table></figure><p>这样窗口就被你牢牢的把握在手心了</p><h3 id="3-添加组件">3.添加组件</h3><p>光有窗口肯定是不够的，肯定要有选项啊，这里的选项我尝试了很多种，有QPushButton，有QListWidget，但由于知识储备量不够，都一一失败了(尬``)，最后还不如QLabel来的痛快，这里直接定制一个QLabel</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重写QLabel，让其能够支持点击事件</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QLabel_Item</span>(<span class="title class_ inherited__">QLabel</span>):</span><br><span class="line">    cliecked = pyqtSignal()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,index,QIcon_no,QIcon_on,text=<span class="literal">None</span>,parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(QLabel_Item, self).__init__(parent)</span><br><span class="line">        self.icon_no = QIcon_no <span class="comment"># 关闭时的图标</span></span><br><span class="line">        self.icon_on = QIcon_on <span class="comment"># 打开时的图标</span></span><br><span class="line">        self.is_clieck = <span class="literal">True</span>   <span class="comment"># 默认鼠标单击为单击事件</span></span><br><span class="line">        <span class="keyword">if</span> index != <span class="number">1</span>:</span><br><span class="line">            self.is_open = <span class="literal">False</span>    <span class="comment"># 默认为关闭状态</span></span><br><span class="line">            self.setScaledContents(<span class="literal">True</span>)  <span class="comment"># 设置图标铺满</span></span><br><span class="line">            self.setPixmap(QPixmap(QIcon_no))  <span class="comment"># 设置默认图标</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.is_open = <span class="literal">True</span>     <span class="comment"># 默认第一个图标为打开状态</span></span><br><span class="line">            self.setScaledContents(<span class="literal">True</span>)  <span class="comment"># 设置图标铺满</span></span><br><span class="line">            self.setPixmap(QPixmap(QIcon_on))  <span class="comment"># 设置默认图标</span></span><br><span class="line">        <span class="keyword">if</span> index != <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> index &gt; <span class="number">3</span>:</span><br><span class="line">                _plus = <span class="number">26</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                _plus = <span class="number">0</span></span><br><span class="line">            self.setGeometry(<span class="number">36</span>*index+<span class="number">46</span>*(index-<span class="number">1</span>)+_plus, <span class="number">26</span>, <span class="number">46</span>, <span class="number">46</span>)</span><br><span class="line">            self.bottom_text = QLabel(text, parent)</span><br><span class="line">            self.bottom_text.setFont(QFont(<span class="string">&#x27;华文新魏&#x27;</span>, <span class="number">10</span>))</span><br><span class="line">            self.bottom_text.setAlignment(Qt.AlignCenter)</span><br><span class="line">            self.bottom_text.setGeometry(<span class="number">36</span>*index+<span class="number">46</span>*(index-<span class="number">1</span>)+_plus, <span class="number">74</span>, <span class="number">46</span>, <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.setScaledContents(<span class="literal">True</span>)  <span class="comment"># 设置图标铺满</span></span><br><span class="line">            self.setPixmap(QPixmap(QIcon_no))  <span class="comment"># 设置默认图标</span></span><br><span class="line">            self.setGeometry(<span class="number">200</span>, <span class="number">20</span>, <span class="number">72</span>, <span class="number">72</span>)</span><br><span class="line">            self.setObjectName(<span class="string">&#x27;play&#x27;</span>)</span><br><span class="line">            self.setToolTip(<span class="string">&#x27;点击播放&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_no</span>(<span class="params">self</span>):   <span class="comment"># 设置关闭状态</span></span><br><span class="line">        self.setPixmap(QPixmap(self.icon_no))  <span class="comment"># 设置默认图标</span></span><br><span class="line">        <span class="comment"># self.setStyleSheet(&#x27;background-color:blue&#x27;)</span></span><br><span class="line">        self.bottom_text.setStyleSheet(<span class="string">&#x27;text-decoration:normal;&#x27;</span>)   <span class="comment"># 设置正常</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">set_on</span>(<span class="params">self</span>):   <span class="comment"># 设置打开状态</span></span><br><span class="line">        self.setPixmap(QPixmap(self.icon_on))  <span class="comment"># 设置默认图标</span></span><br><span class="line">        <span class="comment"># self.setStyleSheet(f&#x27;background-color:red&#x27;)</span></span><br><span class="line">        self.bottom_text.setStyleSheet(<span class="string">&#x27;text-decoration:underline;&#x27;</span>)    <span class="comment"># 设置下滑线</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 正常情况下鼠标单击为触发事件，点击并移动为移动事件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> event.button() == Qt.LeftButton:</span><br><span class="line">            self.is_clieck = <span class="literal">True</span></span><br><span class="line">            self.move_xy = event.globalPos() - self.pos()  <span class="comment"># 获取鼠标的移动事件</span></span><br><span class="line">            self.parent_rect = self.parent().pos()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseMoveEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        self.is_clieck = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 移动dock栏（dock栏的坐标位置+鼠标的偏移量-控件本身坐标）</span></span><br><span class="line">        self.parent().move(self.parent_rect + event.globalPos() - self.move_xy - self.pos())</span><br><span class="line">        self.setCursor(QCursor(Qt.OpenHandCursor))  <span class="comment"># 设置鼠标为抓手</span></span><br><span class="line">        self.moved = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseReleaseEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> event.button() == Qt.LeftButton:</span><br><span class="line">            self.setCursor(QCursor(Qt.ArrowCursor))  <span class="comment"># 设置鼠标为正常</span></span><br><span class="line">            <span class="keyword">if</span> self.is_clieck <span class="keyword">and</span> <span class="keyword">not</span> self.is_open:</span><br><span class="line">                self.is_open = <span class="literal">True</span></span><br><span class="line">                self.cliecked.emit()</span><br><span class="line">            <span class="keyword">elif</span> self.is_clieck:</span><br><span class="line">                self.is_open = <span class="literal">False</span></span><br><span class="line">                self.cliecked.emit()</span><br></pre></td></tr></table></figure><ol><li>因为QLabel本身是不支持点击事件的，所以要创建一个clieck信号</li><li>为了让鼠标移动到图标上和点击图标时有更好的反馈效果，QLabel_Item()创建需要传入打开时的图标，关闭时的图标，底部文本和父窗口（使用绝对布局时需要）</li><li>另图标的鼠标事件也是很重要的啊，鼠标的点击，移动，出入都需要图标进行一个很好的反馈效果</li><li>因为中间的播放按钮不是用来进行主界面口切换的，所以要进行特殊关照（你懂的&lt;-.&lt;-）</li></ol><blockquote><p>注：因为QLabel和QLabel是同一类的，所以创建底部文字时，不能将图标的QLabel设为父类，QLabel只能作为图片，文本的容器</p></blockquote><h3 id="4-窗口的右击菜单">4.窗口的右击菜单</h3><p>窗口的右击菜单可以用来对dock栏进行一些设置，这就需要对contextMenuEvent()进行重写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">contextMenuEvent</span>(<span class="params">self, event</span>):  <span class="comment"># 连接菜单事件</span></span><br><span class="line">    <span class="comment"># 设置右击菜单</span></span><br><span class="line">    right_menu = QMenu(self)</span><br><span class="line">    set_bg_color = QAction(<span class="string">&#x27;背景色&#x27;</span>)</span><br><span class="line">    right_menu.addAction(set_bg_color)</span><br><span class="line">    <span class="comment"># tkl_bg_color = QAction(&#x27;天空蓝&#x27;)</span></span><br><span class="line">    <span class="comment"># lyh_bg_color = QAction(&#x27;烈焰红&#x27;)</span></span><br><span class="line">    <span class="comment"># mmh_bg_color = QAction(&#x27;柠檬黄&#x27;)</span></span><br><span class="line">    <span class="comment"># sll_bg_color = QAction(&#x27;深林绿&#x27;)</span></span><br><span class="line">    <span class="comment"># jlz_bg_color = QAction(&#x27;基佬紫&#x27;)</span></span><br><span class="line">    <span class="comment"># other_bg_color = QAction(&#x27;自定义颜色&#x27;)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(tkl_bg_color)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(lyh_bg_color)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(mmh_bg_color)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(sll_bg_color)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(jlz_bg_color)</span></span><br><span class="line">    <span class="comment"># set_bg_color.addSeparator()  # 添加分隔线</span></span><br><span class="line">    <span class="comment"># set_bg_color.addAction(set_bg_color)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># tkl_bg_color.triggered.connect(lambda: self.changeBgColor(tkl_bg_color.text()))</span></span><br><span class="line">    <span class="comment"># lyh_bg_color.triggered.connect(lambda: self.changeBgColor(lyh_bg_color.text()))</span></span><br><span class="line">    <span class="comment"># mmh_bg_color.triggered.connect(lambda: self.changeBgColor(mmh_bg_color.text()))</span></span><br><span class="line">    <span class="comment"># jlz_bg_color.triggered.connect(lambda: self.changeBgColor(jlz_bg_color.text()))</span></span><br><span class="line">    <span class="comment"># sll_bg_color.triggered.connect(lambda: self.changeBgColor(sll_bg_color.text()))</span></span><br><span class="line">    set_bg_color.triggered.connect(<span class="keyword">lambda</span>: self.changeBgColor(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    set_gh_color = QAction(<span class="string">&#x27;光圈色&#x27;</span>)</span><br><span class="line">    right_menu.addAction(set_gh_color)</span><br><span class="line">    <span class="comment"># right_menu.addMenu(set_gh_color)</span></span><br><span class="line">    <span class="comment"># tkl_gh_color = QAction(&#x27;天空蓝&#x27;)</span></span><br><span class="line">    <span class="comment"># lyh_gh_color = QAction(&#x27;烈焰红&#x27;)</span></span><br><span class="line">    <span class="comment"># mmh_gh_color = QAction(&#x27;柠檬黄&#x27;)</span></span><br><span class="line">    <span class="comment"># sll_gh_color = QAction(&#x27;深林绿&#x27;)</span></span><br><span class="line">    <span class="comment"># jlz_gh_color = QAction(&#x27;基佬紫&#x27;)</span></span><br><span class="line">    <span class="comment"># other_gh_color = QAction(&#x27;自定义颜色&#x27;)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(tkl_gh_color)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(lyh_gh_color)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(mmh_gh_color)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(sll_gh_color)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(jlz_gh_color)</span></span><br><span class="line">    <span class="comment"># set_gh_color.addSeparator()  # 添加分隔线</span></span><br><span class="line">    <span class="comment"># set_gh_color.addAction(other_gh_color)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># tkl_gh_color.triggered.connect(lambda: self.changeGhColor(tkl_gh_color.text()))</span></span><br><span class="line">    <span class="comment"># lyh_gh_color.triggered.connect(lambda: self.changeGhColor(lyh_gh_color.text()))</span></span><br><span class="line">    <span class="comment"># mmh_gh_color.triggered.connect(lambda: self.changeGhColor(mmh_gh_color.text()))</span></span><br><span class="line">    <span class="comment"># jlz_gh_color.triggered.coonnect(lambda: self.changeGhColor(jlz_gh_color.text()))</span></span><br><span class="line">    <span class="comment"># sll_gh_color.triggered.connect(lambda: self.changeGhColor(sll_gh_color.text()))</span></span><br><span class="line">    set_gh_color.triggered.connect(<span class="keyword">lambda</span>: self.changeGhColor(<span class="string">&#x27;&#x27;</span>))</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line"></span><br><span class="line">    exit_menu = QAction(<span class="string">&#x27;退 出&#x27;</span>,right_menu)</span><br><span class="line">    exit_menu.triggered.connect(right_menu.close)</span><br><span class="line">    auto_hide = QAction(<span class="string">&#x27;自动隐藏&#x27;</span>)</span><br><span class="line">    right_menu.addAction(auto_hide)</span><br><span class="line">    right_menu.addSeparator()   <span class="comment"># 添加分割符</span></span><br><span class="line">    right_menu.addAction(exit_menu)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self.childAt(event.globalPos()-self.pos()):<span class="comment"># 当鼠标右击不在图标范围内时</span></span><br><span class="line">        right_menu.exec_(event.globalPos())<span class="comment"># 传入鼠标的坐标</span></span><br></pre></td></tr></table></figure><p>可以看到我这里原本预定了很多好看的颜色，尝试过直接对self.bg_color()进行改变，刷新界面，但不知道为什么最后只有QColorDialog成功了，无奈，只能摸摸自己所剩无几的头发，叹了叹气，放弃了，如果有大神愿为后辈指点一二，吾辈定当无比感谢！(拜托了，yyy)<br><img src="https://img1.imgtp.com/2023/06/29/qKnUqwMJ.png#pic_center" alt="背景色设定关联的方法"></p><blockquote><p>因为项目的主窗口还在画饼中，所以dock栏的些许功能尚未完善</p></blockquote><p>最后源码献上：<a href="https://github.com/MGod-monkey/ABAB_Book/blob/master/main_dock_UI.py">代码入口</a></p><p>题外：<br>原本项目的登录界面已经做好的，而登录账号用来桂电的VPN账号，方便后续直接访问校内资源，写了篇关于调用桂电VPN接口的博客，但奈何官方对这方面的博客把控太严，无奈只能设为私密了（这里没有抱怨，而是称赞审查大大的一丝不苟，兢兢业业···(此处省略一万字)）<br><img src="https://img1.imgtp.com/2023/06/29/tIiaj0Ry.png#pic_center" alt="(╥╯^╰╥)"><br>这里的UI还没美化完全，后期会定制qss文件专门美化的，而项目的进程不能因为部分而拖太久了<br><img src="https://img1.imgtp.com/2023/06/29/9CqkPa3C.png#pic_center" alt="登录UI"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5技术分享_实现加载界面GIF的呈现</title>
      <link href="/posts/bcf5ea53.html"/>
      <url>/posts/bcf5ea53.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/109271698">PyQt5技术分享_实现加载界面GIF的呈现</a></p></blockquote></div><h3 id="需求">需求</h3><p>要实现加载界面我们的需求有：首先GIF的呈现，加载窗口的呈现，主窗口的虚化及不可操作，下面我们一一实现上面的需求。</p><h3 id="GIF的呈现">GIF的呈现</h3><p>QLabel类是Qt中一种用来呈现普通文本，HTML文本和静态图片的容器，要实现标签呈现动图需要用到QLabel.setMovie(self,QMovie)函数，其中QMovie是Qt中用来实现GIF图片动起来的容器<br><img src="https://s2.loli.net/2023/10/03/aZMUOTQEgv1nbcL.png" alt="image-20230629125048896"><br>下面我们用代码来说明上述过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载动画画面</span></span><br><span class="line">       self.loading_gif = QMovie(<span class="string">&#x27;./img/loading_b.gif&#x27;</span>)<span class="comment"># 加载动图</span></span><br><span class="line">       self.loading_label = QLabel(self)<span class="comment"># 创建QLabel标签</span></span><br><span class="line">       self.loading_label.setMovie(self.loading_gif)<span class="comment"># 将动图装载到标签容器里面</span></span><br><span class="line">       self.loading_gif.start()<span class="comment"># 让动图开始动起来</span></span><br><span class="line">       <span class="comment"># self.loading_gif.stop()# 让动图停止，一般情况下不需要停止动图，只需要关闭动图呈现的窗口界面即可</span></span><br></pre></td></tr></table></figure><p>这样一个能呈现动图的QLabel就创建好了</p><h3 id="加载窗口的呈现">加载窗口的呈现</h3><p>我们要实现加载窗口就需要创建一个QWidget界面，而整个界面就动图一个标签，界面还需要进行透明化设置<br>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载动画的窗口</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Loading_Win</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,mainWin</span>):</span><br><span class="line">        <span class="built_in">super</span>(Loading_Win, self).__init__()</span><br><span class="line">        <span class="comment"># 获取主窗口的坐标</span></span><br><span class="line">        self.m_winX = mainWin.x()</span><br><span class="line">        self.m_winY = mainWin.y()</span><br><span class="line">        self.initUI()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">initUI</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 设置窗口基础类型</span></span><br><span class="line">        self.resize(<span class="number">250</span>,<span class="number">250</span>)<span class="comment"># 设置加载界面的大小</span></span><br><span class="line">        self.move(self.m_winX+<span class="number">340</span>,self.m_winY+<span class="number">155</span>)<span class="comment"># 移动加载界面到主窗口的中心</span></span><br><span class="line">        self.setWindowFlags(Qt.FramelessWindowHint | Qt.Dialog | Qt.WindowStaysOnTopHint) <span class="comment"># 设置窗口无边框|对话框|置顶模式</span></span><br><span class="line">        <span class="comment"># 设置背景透明</span></span><br><span class="line">        self.setAttribute(Qt.WA_TranslucentBackground)</span><br><span class="line">        <span class="comment"># 加载动画画面</span></span><br><span class="line">        self.loading_gif = QMovie(<span class="string">&#x27;./img/loading_b.gif&#x27;</span>)</span><br><span class="line">        self.loading_label = QLabel(self)</span><br><span class="line">        self.loading_label.setMovie(self.loading_gif)</span><br><span class="line">        self.loading_gif.start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主窗口背景虚化即不可操作">主窗口背景虚化即不可操作</h3><p>要实现主窗口不可操作就需要设置窗口的mainWindow.WindowModality属性<br>Qt中WindowModality属性有三种：</p><table><thead><tr><th>常量</th><th>含义</th></tr></thead><tbody><tr><td>Qt.NonModal</td><td>窗口不是模式窗口（默认）</td></tr><tr><td>Qt.WindowModal</td><td>窗口是单窗口层次结构模式，并阻止其父窗口及其他父窗口和组父窗口的所有兄弟窗口获得输入</td></tr><tr><td>Qt.ApplicationModal</td><td>窗口是应用的模式窗口，阻塞所有其他应用窗口获得输入</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">self.setWindowModality(Qt.ApplicationModal)<span class="comment"># 设置主窗口不可操作</span></span><br><span class="line">Loading_Gif.show()<span class="comment"># 呈现加载界面</span></span><br><span class="line">self.setWindowModality(Qt.NonModal)<span class="comment"># 恢复正常模式</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《ESP32-Arduino》LVGL之输入设备详解及实例</title>
      <link href="/posts/a56fc1a5.html"/>
      <url>/posts/a56fc1a5.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><blockquote><p>原文链接（本人写的啊，不算抄袭😎）：<a href="https://blog.csdn.net/qq_45516773/article/details/123182714">《ESP32-Arduino》LVGL之输入设备详解及实例(触摸屏,实体按键,编码器,多功能按键)</a></p></blockquote></div><blockquote><p>前言: 好久没写博客了，一方面是平时着实没有时间，另一方面是知识还是欠缺，实在没啥技术拿得出手(其实更主要的还是懒!!!)最近玩的比较多的就是LVGL了，自己也是做了几个小项目(后续考虑开源)，考虑到网上LVGL入门教程还是比较少，特此出来写篇博客。</p></blockquote><p>对于LVGL就不过多介绍了，能点进来的应该都知道LVGL是什么吧，本篇博客不讲UI中的相关组件，而侧重于讲解对于LVGL中的输入设备，什么是输入设备呢?对于LVGL来说，输入设备有：</p><ul><li>LV_INDEV_TYPE_POINTER：触摸板或鼠标</li><li>LV_INDEV_TYPE_KEYPAD： 键盘</li><li>LV_INDEV_TYPE_ENCODER：编码器</li><li>LV_INDEV_TYPE_BUTTON：外部虚拟按钮</li></ul><p>而对于大多数项目来说，用触摸屏，实体按键，编码器的比较多(打死我也不说是其他的我都没用过)，那么如何将这些设备与LVGL中的组件相关联就是本篇博客的主要目的。</p><h1>前期准备</h1><h2 id="环境">环境</h2><ul><li>VScode+Platformio+LVGL工程（相关教程见【<a href="https://blog.csdn.net/qq_45516773/article/details/119673328">传送门</a>】）</li></ul><blockquote><p>注：本博客虽是基于Arduino写的，但掌握原理，在其他平台一样能使用</p></blockquote><h2 id="硬件">硬件</h2><ul><li>ESP32</li><li>带触摸或不带触摸的TFT显示屏</li><li>物理按键 / 编码器（如EC11）/ 多功能按键（如SLLB120200）</li></ul><h2 id="知识储备">知识储备</h2><ul><li>对应的LVGL文档页面<ul><li>原版英文文档【<a href="https://docs.lvgl.io/master/porting/indev.html">传送门</a>】</li><li>百问网翻译版文档【<a href="http://lvgl.100ask.net/8.2/porting/indev.html">传送门</a>】</li></ul></li></ul><hr><h1>流程讲解</h1><p>在摆代码之前，先过一下流程，因为所有的输入设备都是基于这一套流程走的，代码都大同小异<br><img src="https://bu.dusays.com/2023/10/03/651bdf615cfbb.png" alt="image-20230629123828017"><br>这里面my_indev_read是一个函数名，其作用就是不断读取输入设备的状态，当检测到输入设备的状态与之前的状态不同时就会更新状态并做出相应的响应，响应事件见【<a href="http://lvgl.100ask.net/master/overview/event.html">传送门</a>】</p><h1>实例</h1><blockquote><p>所有的实例都是基于LVGL官方模板所写的，模板详见【<a href="https://github.com/lvgl/lvgl/tree/master/examples/porting">传送门</a>】,以下实例的使用方法就是将其建成一个.cpp文件，并新建一个同名.h文件，.h文件用于函数声明且和在其他文件中调用，.c文件用于函数定义(这些都是c语言的基础知识，实在不懂的自行百度吧)，这里的输入设备初识化只需要在你工程初识化的地方调用lv_port_indev_init()函数即可</p></blockquote><h2 id="触摸屏">触摸屏</h2><blockquote><p>触摸屏反馈及初识化函数用的是第三方库【<a href="https://github.com/Bodmer/TFT_eSPI">TFT_eSPI</a>】中的相关内容</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 触摸屏状态更新函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_touchpad_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint16_t</span> touchX, touchY;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> touched = tft.getTouch( &amp;touchX, &amp;touchY, <span class="number">600</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( !touched )</span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*Set the coordinates*/</span></span><br><span class="line">        data-&gt;point.x = touchX;</span><br><span class="line">        data-&gt;point.y = touchY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Serial.print( &quot;Data x &quot; );</span></span><br><span class="line">        <span class="comment">//Serial.println( touchX );</span></span><br><span class="line">        <span class="comment">//Serial.print( &quot;Data y &quot; );</span></span><br><span class="line">        <span class="comment">//Serial.println( touchY );</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触摸屏初识化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_touchpad_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 以下两种方式的功能都是触摸屏的校准，TFT_eSPI用的是第一种，而LVGL官方用的是第二种，我也不知道那种方式更好</span></span><br><span class="line"> <span class="comment">// Calibrate the touch screen and retrieve the scaling factors</span></span><br><span class="line"> touch_calibrate();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> // Replace above line with the code sent to Serial Monitor</span></span><br><span class="line"><span class="comment"> // once calibration is complete, e.g.:</span></span><br><span class="line"><span class="comment"> uint16_t calData[5] = &#123; 286, 3534, 283, 3600, 6 &#125;;</span></span><br><span class="line"><span class="comment"> tft.setTouch(calData);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入设备初识化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">lv_port_indev_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 初识化触摸屏</span></span><br><span class="line">my_touchpad_init();</span><br><span class="line"><span class="comment">// 注册输入设备</span></span><br><span class="line"><span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">lv_indev_drv_init( &amp;indev_drv );</span><br><span class="line">indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line">indev_drv.read_cb = my_touchpad_read;</span><br><span class="line">lv_indev_drv_register( &amp;indev_drv );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实体按键">实体按键</h2><blockquote><p>实体按键可以使用第三方库【<a href="https://github.com/MajicDesigns/MD_UISwitch">MD_UISwitch</a>】作为按键的反馈（支持长按阶段性反馈，即长按的话隔一段时间就切换下一个组件，但这样就不能响应LV_EVENT_LONG_PRESSED中的长按响应事件了），也可以直接使用Arduino中digitalWrite()读取引脚电平或者其他单片机中读取引脚电平的方法（这种方式支持LV_EVENT_LONG_PRESSED中的长按响应事件，但不能长按阶段性反馈），看各位取舍吧，我的建议就是一般导航键都有3个按键，左右及确定键，左右键使用MD_UISwitch，中间确定键使用digitalWrite()</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MD_UISwitch.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinA 1<span class="comment">// 左键引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinB 2  <span class="comment">// 右键引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinC 3  <span class="comment">// 确定键引脚</span></span></span><br><span class="line"></span><br><span class="line">MD_UISwitch_Digital <span class="title function_">Key_L</span><span class="params">(PinA, (<span class="type">uint8_t</span>)LOW)</span>;</span><br><span class="line">MD_UISwitch_Digital <span class="title function_">Key_R</span><span class="params">(PinB, (<span class="type">uint8_t</span>)LOW)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键扫描函数，用于区分哪个按键按下了</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Key_Scan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (digitalRead(PinC) == LOW)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Serial.Println(&quot;[Navigation] click&quot;);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">MD_UISwitch::keyResult_t k_r = Key_R.read();</span><br><span class="line">MD_UISwitch::keyResult_t k_l = Key_L.read();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (k_l == MD_UISwitch::KEY_PRESS)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Serial.Println(&quot;[Navigation] prev&quot;);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (k_r == MD_UISwitch::KEY_PRESS)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Serial.Println(&quot;[Navigation] next&quot;);         </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 没按下返回0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键状态更新函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_key_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> act_enc = Key_Scan();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(act_enc != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span>(act_enc) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            act_enc = LV_KEY_ENTER;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_PRESSED;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            act_enc = LV_KEY_RIGHT;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_RELEASED;</span><br><span class="line">            data-&gt;enc_diff++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            act_enc = LV_KEY_LEFT;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_RELEASED;</span><br><span class="line">            data-&gt;enc_diff--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last_key = (<span class="type">uint32_t</span>)act_enc;</span><br><span class="line">&#125;</span><br><span class="line">data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键初识化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_key_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Key_L.enableDoublePress(<span class="literal">false</span>);<span class="comment">// 是否允许双击</span></span><br><span class="line">Key_L.enableLongPress(<span class="literal">false</span>);<span class="comment">// 是否允许长按</span></span><br><span class="line">Key_R.enableDoublePress(<span class="literal">false</span>);<span class="comment">// 是否允许双击</span></span><br><span class="line">Key_R.enableLongPress(<span class="literal">false</span>);<span class="comment">// 是否允许长按</span></span><br><span class="line">pinMode(PinC, INPUT_PULLUP);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入设备初识化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">lv_port_indev_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 初识化按键</span></span><br><span class="line">my_key_init();</span><br><span class="line"><span class="comment">// 注册输入设备</span></span><br><span class="line"><span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">lv_indev_drv_init( &amp;indev_drv );</span><br><span class="line"><span class="comment">// 说一下这里的类型为什么要设置为编码器类型，因为我试过很多遍LV_INDEV_TYPE_KEYPAD都没成功，</span></span><br><span class="line"><span class="comment">// 我觉得是这里的KEYPAD可能指的是键盘鼠标的那种键盘，所以就没成功，当然也可能单纯是我菜</span></span><br><span class="line">indev_drv.type = LV_INDEV_TYPE_ENCODER;</span><br><span class="line">indev_drv.read_cb = my_key_read;</span><br><span class="line">lv_indev_drv_register( &amp;indev_drv );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多功能按键-或叫波轮按键">多功能按键(或叫波轮按键)</h2><blockquote><p>多功能按键并不属于编码器类型，虽然它们之间有些形状类似，但原理截然不同，多功能按键本质上就是按键<br><img src="https://s2.loli.net/2023/10/03/fOBuTg9x1InFHdj.png" alt="image-20230629123925089" style="zoom: 80%;" /><br>多功能按键一共有6个引脚，其中C为公共脚，一般接地或接VCC<br><img src="https://img1.imgtp.com/2023/06/29/GKQFLI7s.png" alt="image-20230629124010790"><br>当多功能按键中间键按下时，C脚和T脚接通，因此C+T脚可以组成一个按键开关<br><img src="https://s2.loli.net/2023/10/03/qpiESJnkwWFtObN.png" alt="image-20230629124030837"><br>如图，图中黑色部分表示接通，如当波轮开关顺时针旋转11°时1，C脚接通，当波轮开关继续旋转到21.5°时1,2，C脚接通，因此1,2都可以分别和C脚组成一个开关，当转动角度不同时，1,2引脚被相继置为低电平或高电平（根据C引脚决定)</p></blockquote><p>知道了多功能按键的原理，使用起来也非常简单，只需要把多功能按键看做按键使用，将1,4，T（或2,3，T）引脚分别接到单片机IO口上，C引脚接地就能组成上述实体按键一样的效果，代码就不展示了，稍微变通一下就行</p><h2 id="编码器">编码器</h2><blockquote><p>编码器的类型有各式各样，但原理都相同（原理我也没怎么明白，就不丢人了）,其都有ABC及S四个引脚（有些有多个S引脚），A，B引脚为左右旋的时候触发，C引脚为按下时触发，因此可以将S引脚接地，AB及C引脚接单片机IO口组成导航键，这里的编码器反馈用到了第三方库【<a href="https://github.com/MajicDesigns/MD_REncoder">MD_REncoder</a>】，没办法，Arduino好就好在第三方库多，完全不用懂原理就能用（窃喜）</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MD_REncoder.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinA 1<span class="comment">// 左键引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinB 2  <span class="comment">// 右键引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PinC 3  <span class="comment">// 确定键引脚</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> MD_REncoder R = MD_REncoder(PinA, PinB);<span class="comment">//旋转编码器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器扫描函数，用于判断左右及按下状态</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Encoder_Scan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (digitalRead(PinC) == LOW)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Serial.Println(&quot;[Navigation] click&quot;);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">uint8_t</span> x = R.read();</span><br><span class="line"><span class="keyword">if</span> (x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// x == DIR_CW;</span></span><br><span class="line"><span class="keyword">if</span> (x == DIR_CW ) &#123;</span><br><span class="line"><span class="comment">//Serial.println(&quot;[Navigation] next&quot;);         </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Serial.println(&quot;[Navigation] prev&quot;);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 没按下返回0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码器状态更新函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_encoder_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> act_enc = Encoder_Scan();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(act_enc != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span>(act_enc) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            act_enc = LV_KEY_ENTER;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_PRESSED;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            act_enc = LV_KEY_RIGHT;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_RELEASED;</span><br><span class="line">            data-&gt;enc_diff++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            act_enc = LV_KEY_LEFT;</span><br><span class="line">            data-&gt;state = LV_INDEV_STATE_RELEASED;</span><br><span class="line">            data-&gt;enc_diff--;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last_key = (<span class="type">uint32_t</span>)act_enc;</span><br><span class="line">&#125;</span><br><span class="line">data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按键初识化函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_encoder_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">R.begin();</span><br><span class="line">pinMode(PinC, INPUT_PULLUP);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输入设备初识化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">lv_port_indev_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 初识化编码器</span></span><br><span class="line">my_encoder_init();</span><br><span class="line"><span class="comment">// 注册输入设备</span></span><br><span class="line"><span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">lv_indev_drv_init( &amp;indev_drv );</span><br><span class="line">indev_drv.type = LV_INDEV_TYPE_ENCODER;</span><br><span class="line">indev_drv.read_cb = my_encoder_read;</span><br><span class="line">lv_indev_drv_register( &amp;indev_drv );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>将输入设备与组件绑定</h1><blockquote><p>输入设备初识化成功后如何将其与LVGL中的组件进行绑定呢？这是很多教程中没有说明的，也是我踩了很多坑之后才知道的。这里就需要知道一个lv_group_t的概念，group是LVGL中很重要的一部分，其作用就是将许多LVGL中的组件划分为不同的组，输入设备可以通过切换绑定的组从而控制不同组中的组件，这里介绍几个group中常用的函数，更多函数见【<a href="">传送门</a>】</p></blockquote><ul><li>lv_group_t * lv_group_create(void)<ul><li>作用：创建一个lv_group_t实例，如 lv_group_t* group = lv_group_create()</li></ul></li><li>void lv_group_del(lv_group_t* group)<ul><li>作用：删除一个lv_group_t实例</li></ul></li><li>void lv_group_set_default(lv_group_t * group)<ul><li>作用：设置一个group实例为默认组</li></ul></li><li>lv_group_t * lv_group_get_default(void)<ul><li>作用：获取默认组</li></ul></li><li>void lv_group_add_obj(lv_group_t * group, lv_obj_t * obj)<ul><li>作用：group填加组件，只有在group中添加的组件才能受到控制</li></ul></li><li>void lv_group_remove_obj(struct _lv_obj_t * obj)<ul><li>作用：group移除组件</li></ul></li><li>void lv_group_remove_all_objs(lv_group_t * group)<ul><li>作用：group移除所有组件</li></ul></li><li>void lv_group_set_editing(lv_group_t * group, bool edit)<ul><li>作用：设置group为编辑模式或者导航模式，这里的编辑模式只对如下拉列表，按键矩阵等有二级控件时有用，一般来说这些在导航模式都需要先点击确定才能编辑，而在编辑模式下，无需确定即可编辑</li></ul></li><li>void lv_indev_set_group(lv_indev_t * indev, lv_group_t * group)<ul><li>作用：将输入设备与group相绑定，这里的输入设备指lv_indev_drv_register()返回的值，这个最重要了， 前面初识化，添加组件都弄了，要是最后没绑定，一切都白搭</li></ul></li></ul><p>这里给个例子吧</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">lv_obj_t</span>* btn1 = lv_btn_create(<span class="literal">NULL</span>);</span><br><span class="line"><span class="type">lv_obj_t</span>* btn2 = lv_btn_create(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// group可以在void lv_port_indev_init()函数中就创建，而在窗口中通过</span></span><br><span class="line"><span class="comment">// lv_group_t* group = lv_group_get_default();</span></span><br><span class="line"><span class="comment">// lv_group_add_obj(group, obj);</span></span><br><span class="line"><span class="comment">// 的方式添加组件,更多的自己慢慢探索吧</span></span><br><span class="line">group = lv_group_create();</span><br><span class="line">lv_group_set_default(group);</span><br><span class="line">lv_group_remove_all_objs(group);</span><br><span class="line">lv_group_add_obj(group, btn1);</span><br><span class="line">lv_group_add_obj(group, btn2);</span><br><span class="line"><span class="comment">// 这里的indev_encoder是lv_indev_drv_register( &amp;indev_drv )的返回值</span></span><br><span class="line"><span class="comment">// 案例中均没有使用到这个值</span></span><br><span class="line">lv_indev_set_group(indev_encoder, group);</span><br></pre></td></tr></table></figure><h1>最后</h1><div class="note info flat"><blockquote><p>LVGL官方最近出了一个图形化工具，根据简单的拖拽即可导出UI代码，支持最新的LVGL8.2版本，不过目前支持的组件不多，而且是付费应用（有30天试用期），感兴趣的见【<a href="https://squareline.io/">传送门</a>】。<br>我还是建议自己敲代码，尽管这样会踩很多坑，但毕竟踩坑才能进步，才能成长。<br>最后，看反馈不定期更下一期！</p></blockquote></div>]]></content>
      
      
      <categories>
          
          <category> lvgl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lvgl </tag>
            
            <tag> ESP32 </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署项目指引</title>
      <link href="/posts/c76bd3e9.html"/>
      <url>/posts/c76bd3e9.html</url>
      
        <content type="html"><![CDATA[<h1>ChatGPT项目</h1><h2 id="仿官网ChatGPT项目">仿官网ChatGPT项目</h2></br><blockquote><p>描述：对接ChatGPT API的个人网页项目(所使用的都是作者个人OpenAI账户的额度，且行且珍惜)</p></blockquote></br><p><img src="https://img1.imgtp.com/2023/06/18/Fc7gZXsA.png" alt="cover"></p></br><p>项目地址：<a href="https://github.com/Yidadaa/ChatGPT-Next-Web/">ChatGPT-Next-Web</a></p></br><blockquote><p>部署地址：<a href="http://chat.mgodmonkey.cn/">传送门</a></p><p>访问码：wpqds666</p></blockquote><blockquote><ul><li>点击设置按钮，输入访问码即后即可正常使用所用功能。</li><li>GPT3,GPT3.5模型无任何限制，GPT4模型暂不可用</li></ul></blockquote></br><h2 id="学术专用版GPT项目"><s>学术专用版GPT项目</s></h2></br><p><img src="https://user-images.githubusercontent.com/96192199/230361456-61078362-a966-4eb5-b49e-3c62ef18b860.gif" alt="cover"></p></br><p>项目地址：<a href="https://github.com/binary-husky/gpt_academic">GPT_Academic</a></p></br><blockquote><p>部署地址：<a href="http://academic.mgodmonkey.cn/">传送门</a></p></blockquote><blockquote><ul><li>无访问码限制，但有字数和请求限制</li><li>学术专用版ChatGPT，可一键学术优化以及英文翻译等</li></ul></blockquote><h2 id="必过通原实验-搜题库">必过通原实验-搜题库</h2></br><p><img src="https://user-images.githubusercontent.com/62071831/227830605-9a1d83ad-9820-4e3e-aae9-6cc57e19fbc5.gif" alt="cover"></p></br><p>项目地址：<a href="https://github.com/MGod-monkey/Must_Pass_Experiment_of_TY">Must_Pass_Experiment_of_TY</a></p></br><blockquote><p>部署地址：<a href="http://ty.mgodmonkey.cn:8000/search/">传送门</a></p></blockquote><blockquote><ul><li>无访问码限制，即开即用</li><li>收录多道通原实验原题，支持模糊</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 项目分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><blockquote><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></blockquote></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><hr><hr></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">通用配置</button><button type="button" class="tab " data-href="分栏-2">语法格式</button><button type="button" class="tab " data-href="分栏-3">参数配置</button><button type="button" class="tab " data-href="分栏-4">示例源码</button><button type="button" class="tab " data-href="分栏-5">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">糖果屋教程贴</div>            <div class="tag-link-sitename"> https://akilar.top/posts/615e2dec/</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button no-text-decoration" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button no-text-decoration" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button no-text-decoration" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button no-text-decoration" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button no-text-decoration" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button no-text-decoration" href='/' title='下载源码'><img src='fas fa-download'>下载源码</a><a class="button no-text-decoration" href='/' title='查看文档'><img src='fas fa-book-open'>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com" data-title=简约风格><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img class="flink-avatar" src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="site-title">fomalhaut1998</span></div></a><a class="site-card" href="https://inkss.cn" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img class="flink-avatar" src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="site-title">inkss</span></div></a><a class="site-card" href="https://blog.mhuig.top" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img class="flink-avatar" src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="site-title">MHuiG</span></div></a><a class="site-card" href="https://colsrch.top" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img class="flink-avatar" src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="site-title">Colsrch</span></div></a><a class="site-card" href="https://linhk1606.github.io" data-title=这是一段关于这个网站的描述文字><div class="wrapper cover"><img class="cover fadeIn" src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img class="flink-avatar" src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="site-title">Linhk1606</span></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">标签语法</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="gallery">  <div class="fj-gallery page_img_lazyload  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">配置参数</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab " data-href="test2-1">test2 1</button><button type="button" class="tab " data-href="test2-2">test2 2</button><button type="button" class="tab  active" data-href="test2-3">test2 3</button></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs no-default"><button type="button" class="tab " data-href="test3-1">test3 1</button><button type="button" class="tab " data-href="test3-2">test3 2</button><button type="button" class="tab " data-href="test3-3">test3 3</button></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">第一个Tab</button><button type="button" class="tab " data-href="test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button><button type="button" class="tab " data-href="test4-3"><i class="fas fa-bomb"></i>炸弹</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">参数配置</button><button type="button" class="tab " data-href="分栏-2">示例源码</button><button type="button" class="tab " data-href="分栏-3">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">示例源码</button><button type="button" class="tab " data-href="分栏-2">渲染演示</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">参数配置</button><button type="button" class="tab " data-href="分栏-2">标签语法</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="分栏-1">标签语法</button><button type="button" class="tab " data-href="分栏-2">参数配置</button><button type="button" class="tab " data-href="分栏-3">示例源码</button><button type="button" class="tab " data-href="分栏-4">渲染演示</button></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
